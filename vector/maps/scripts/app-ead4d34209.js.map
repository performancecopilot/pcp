{"version":3,"sources":["scripts/app.js"],"names":["widgetDefinitions","MetricDataModel","ConvertedMetricDataModel","CumulativeMetricDataModel","CgroupCPUUsageMetricDataModel","CgroupCPUHeadroomMetricDataModel","CgroupMemoryUsageMetricTimeSeriesDataModel","ContainerMemoryUsageMetricDataModel","ContainerNetworkBytesMetricDataModel","ContainerMultipleMetricDataModel","ContainerMultipleCumulativeMetricDataModel","CgroupMemoryHeadroomMetricDataModel","MemoryUtilizationMetricDataModel","NetworkBytesMetricDataModel","CpuUtilizationMetricDataModel","PerCpuUtilizationMetricDataModel","MultipleMetricDataModel","MultipleCumulativeMetricDataModel","DummyMetricDataModel","DiskLatencyMetricDataModel","CumulativeUtilizationMetricDataModel","CgroupMemoryUtilizationMetricDataModel","config","onSettingsClose","resultFromModal","widgetModel","filter","definitions","name","title","directive","dataAttrName","dataModelType","dataModelOptions","size","width","height","enableVerticalResize","group","attrs","forcey","integer","percentage","conversionFunction","value","metricDefinitions","{key} in","{key} out","established","time_wait","close_wait","settingsModalOptions","templateUrl","controller","hasLocalSettings","{key} read","{key} write","page faults","major page faults","retranssegs","timeouts","listendrops","fastretrans","slowstartretrans","synretrans","enableCpuFlameGraph","push","enableContainerWidgets","requireContainerFilter","area","{key} shares","{key} periods","{key}","$inject","defaultWidgets","emptyWidgets","containerWidgets","angular","module","factory","PMAPIService","$http","$log","$rootScope","$q","getContext","params","baseURI","properties","protocol","host","port","settings","method","url","contextType","contextValue","polltimeout","pollTimeout","toString","timeout","then","response","data","context","reject","getHostspecContext","hostspec","getHostnameContext","hostname","getLocalContext","getArchiveContext","archiveFile","getMetricsValues","names","pmids","isDefined","length","join","isUndefined","timestamp","s","us","values","getInstanceDomainsByIndom","indom","instances","inames","instance","cache","getInstanceDomainsByName","convertTimestampToMillis","mapMetricNamesToInstanceDomains","responses","instanceDomains","forEach","inst","appendInstanceDomains","deferred","defer","instanceDomainPromises","ids","_","map","all","dict","result","resolve","errors","updates","update","promise","getMetrics","metrics","ModalService","$uibModal","showModal","customModal","customModalOptions","modal","modalOptions","backdrop","extend","defaultModal","defaultModalOptions","$scope","$uibModalInstance","ok","close","dismiss","open","keyboard","modalFade","template","closeButtonText","actionButtonText","headerText","bodyText","MetricListService","SimpleMetric","CumulativeMetric","ConvertedMetric","CumulativeConvertedMetric","DerivedMetric","getOrCreateMetric","metric","find","simpleMetrics","el","subscribers","getOrCreateCumulativeMetric","getOrCreateConvertedMetric","getOrCreateCumulativeConvertedMetric","getOrCreateDerivedMetric","derivedFunction","derivedMetrics","destroyMetric","index","indexOf","splice","destroyDerivedMetric","clearMetricList","clearData","clearDerivedMetricList","getDerivedMetricList","getSimpleMetricList","FlameGraphService","toastr","generate","get","success","error","cpuFlameGraph","$timeout","DashboardService","link","scope","ready","processing","id","getGuid","generateFlameGraph","restrict","Metric","this","pmid","prototype","pushValue","iid","iname","overflow","self","x","y","parseInt","window","interval","key","deleteInvalidInstances","currentInstances","currentInstance","MetricService","getInames","updateValues","base","diffValue","convertedValue","previousValue","previousTimestamp","SimpleMetricDataModel","WidgetDataModel","DataModel","Object","create","init","call","updateScope","destroy","cpuSysMetric","cpuUserMetric","cpuUserInstance","cpuSysLastValue","cpuUserLastValue","returnValues","cpuSysInstance","widgetDefinition","inMetric","outMetric","lastValue","pushReturnValues","metricName","widgetScope","widget","definition","replace","cachedMemMetric","usedMemMetric","freeMemMetric","buffersMemMetric","usedValue","cachedValue","freeValue","buffersValue","readActiveMetric","writeActiveMetric","readMetric","writeMetric","calculateValues","rawactiveMetric","outputArr","rawactiveInstance","element","rawactiveLastValue","rawMetric","ncpuMetric","cpuInstance","cpuCount","keyName","ContainerMetadataService","containerIdExist","idDictionary","checkContainerName","checkContainerFilter","cgroupConversionFunction","memConversionFunction","containerMemMetric","containerValue","total","physmemConversionFunction","usageMetric","limitMetric","physmemMetric","lastPhysmemValue","limitInstance","lastLimitValue","cpuUsageMetric","cpuSharesMetric","cpuPeriodsMetric","cpuSharesInstance","cpuSharesValue","ncpuInstance","ncpuValue","$interval","$location","cancelInterval","intervalPromise","cancel","updateMetricsCallback","loopErrors","flags","contextAvailable","updateMetrics","callback","metricArr","pmidArr","metricInstance","currentMetric","isNumber","$broadcast","status","updateContext","updateDerivedMetrics","intervalFunction","updateInterval","parseHostInput","hostMatch","match","contextUpdating","updateHost","search","initialize","containerFilter","containerList","selectedContainer","isHostnameExpanded","expandHostname","disableHostspecInput","disableContainerFilter","disableContainerSelect","containerSelectOverride","disableContainerSelectNone","disableHostnameInputContainerSelect","Math","floor","random","substring","CustomWidgetSettingsCtrl","$routeParams","$injector","idMap","parseId","split","clearIdDictionary","updateIdDictionary","getContainerList","containerParsedFromQuerystring","container","containerCgroups","containerNames","updateMetricsListener","$on","resolveId","instanceKey","instanceName","containerNameResolver","useCgroupId","reduce","obj","item","resolved","updateContainer","updateContainerFilter","e","debug","D3Service","xAxisTickFormat","d","d3","time","format","Date","yAxisTickFormat","yAxisIntegerTickFormat","yAxisPercentageTickFormat","xFunction","yFunction","getId","nv","models","tooltip","initTooltip","document","body","select","append","attr","classes","style","selectAll","classed","nvPointerEventsClass","nvtooltip","enabled","dataSeriesExists","dom","write","newContent","contentGenerator","node","innerHTML","positionTooltip","gravity","distance","snapDistance","chartContainer","hidden","hideDelay","lastPosition","left","top","duration","headerEnabled","position","event","clientX","clientY","valueFormatter","headerFormatter","keyFormatter","table","createElement","theadEnter","enter","html","tbodyEnter","trowEnter","p","series","highlight","color","i","each","opacityScale","scale","linear","domain","range","opacity","outerHTML","undefined","footer","Array","calcGravityOffset","pos","tmp","offsetHeight","offsetWidth","clientWidth","documentElement","clientHeight","read","gravityOffset","interrupt","transition","delay","oldTranslate","newTranslate","translateInterpolator","interpolateString","isHidden","styleTween","options","utils","optionsFunc","bind","_options","set","point","initOptions","lineTimeSeries","chart","addGraph","lineChart","useInteractiveGuideline","interactive","showLegend","showXAxis","showYAxis","margin","right","forceY","xAxis","tickFormat","yAxis","windowResize","datum","areaStackedTimeSeries","legend","stackedAreaChart","showControls","yDomain","MainCtrl","$document","$route","widgets","embed","version","visibilityChanged","webkitHidden","mozHidden","msHidden","activate","vm","inputHost","addEventListener","widgetNameArr","widgetsToLoad","concat","def","urlArr","dashboardOptions","hideToolbar","widgetButtons","hideWidgetName","hideWidgetSettings","addWidgetToURL","widgetObj","newUrl","removeWidgetFromURL","removeAllWidgetFromURL","resetDashboard","loadWidgets","addWidget","preventDefault","checkWidgetType","getElementById","focus","constant","routeConfig","$routeProvider","when","controllerAs","reloadOnSearch","otherwise","uniqueItems","groupBy","collection","groupFilter","decorators","$provide","decorator","$delegate","originalCancel","retValue","isCancelled","moment","toastrConfig","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","logProviderConfig","$logProvider","debugEnabled","run","$templateCache","put"],"mappings":";;;;;;;;;;;;;;;;;CAqBA,WACI,YAGA,SAASA,GACLC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAIC,GAAkB,SAASC,EAAiBC,GACb,mBAApBD,KACPC,EAAYC,OAASF,EAAgBE,SAGzCC,IAEIC,KAAM,kBACNC,MAAO,eACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,mBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,QAEPV,KAAM,sBACNC,MAAO,WACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,uBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRC,SAAS,KAGbb,KAAM,qBACNC,MAAO,2BACPC,UAAW,mBACXC,aAAc,OACdC,cAAeZ,EACfa,kBACIL,KAAM,sBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,sBACNC,MAAO,yBACPC,UAAW,mBACXC,aAAc,OACdC,cAAeZ,EACfa,kBACIL,KAAM,uBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,iBACNC,MAAO,kBACPC,UAAW,2BACXC,aAAc,OACdC,cAAelB,EACfmB,kBACIL,KAAM,kBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,wBACNC,MAAO,+BACPC,UAAW,mBACXC,aAAc,OACdC,cAAeZ,EACfa,kBACIL,KAAM,yBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,yBACNC,MAAO,6BACPC,UAAW,mBACXC,aAAc,OACdC,cAAeZ,EACfa,kBACIL,KAAM,0BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,oBACNC,MAAO,sBACPC,UAAW,mBACXC,aAAc,OACdC,cAAejB,EACfkB,kBACIL,KAAM,qBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,gBACNC,MAAO,4BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe9B,EACf+B,kBACIL,KAAM,gBACNe,mBAAoB,SAAUC,GAC1B,MAAOA,GAAQ,KAAO,OAG9BV,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,WAEPV,KAAM,gBACNC,MAAO,4BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe9B,EACf+B,kBACIL,KAAM,gBACNe,mBAAoB,SAAUC,GAC1B,MAAOA,GAAQ,KAAO,OAG9BV,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,WAEPV,KAAM,kBACNC,MAAO,8BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe9B,EACf+B,kBACIL,KAAM,kBACNe,mBAAoB,SAAUC,GAC1B,MAAOA,GAAQ,KAAO,OAG9BV,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,WAEPV,KAAM,MACNC,MAAO,qBACPC,UAAW,2BACXC,aAAc,OACdC,cAAepB,EACfqB,kBACIL,KAAM,OAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,SACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,8BACNC,MAAO,sBACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,+BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIC,OAAQ,GACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,6BACNC,MAAO,qBACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,8BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIC,OAAQ,GACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,0BACNC,MAAO,gBACPC,UAAW,mBACXC,aAAc,OACdC,cAAehB,EACfiB,kBACIL,KAAM,0BACNiB,mBACIC,WAAY,6BACZC,YAAa,gCAGrBb,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIC,OAAQ,GACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,8BACNC,MAAO,iCACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,+BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,4BACNC,MAAO,8BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,6BAEVS,sBAAsB,EACtBH,MACIC,MAAO,MACPC,OAAQ,SAEZE,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,6BACNC,MAAO,+BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe/B,EACfgC,kBACIL,KAAM,8BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,kBACNC,MAAO,kBACPC,UAAW,mBACXC,aAAc,OACdC,cAAehB,EACfiB,kBACIL,KAAM,kBACNiB,mBACIG,YAAe,8BACfC,UAAa,4BACbC,WAAc,+BAGtBhB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,0BACNC,MAAO,0BACPC,UAAW,mBACXC,aAAc,OACdC,cAAenB,EACfoB,kBACIL,KAAM,2BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,GAEbU,sBACIC,YAAa,gEACbC,WAAY,kCAEhBC,kBAAkB,EAClB/B,gBAAiBA,EACjBG,OAAQ,KAERE,KAAM,YACNC,MAAO,YACPC,UAAW,mBACXC,aAAc,OACdC,cAAef,EACfgB,kBACIL,KAAM,YACNiB,mBACIU,aAAc,gBACdC,cAAe,mBAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,SAEPV,KAAM,aACNC,MAAO,0BACPC,UAAW,mBACXC,aAAc,OACdC,cAAef,EACfgB,kBACIL,KAAM,aACNiB,mBACIU,aAAc,sBACdC,cAAe,yBAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,SAEPV,KAAM,oBACNC,MAAO,mBACPC,UAAW,mBACXC,aAAc,OACdC,cAAeZ,EACfa,kBACIL,KAAM,qBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,OACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,qBACNC,MAAO,mBACPC,UAAW,mBACXC,aAAc,OACdC,cAAe7B,EACf8B,kBACIL,KAAM,sBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,MACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,qBACNC,MAAO,cACPC,UAAW,2BACXC,aAAc,OACdC,cAAef,EACfgB,kBACIL,KAAM,qBACNiB,mBACIY,cAAe,qBACfC,oBAAqB,0BAG7BxB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,SACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,4BACNC,MAAO,kBACPC,UAAW,mBACXC,aAAc,OACdC,cAAef,EACfgB,kBACIL,KAAM,4BACNiB,mBACIC,WAAY,+BACZC,YAAa,kCAGrBb,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIG,YAAY,EACZD,SAAS,GAEbU,sBACIC,YAAa,gEACbC,WAAY,kCAEhBC,kBAAkB,EAClB/B,gBAAiBA,EACjBG,OAAQ,KAERE,KAAM,sBACNC,MAAO,sBACPC,UAAW,mBACXC,aAAc,OACdC,cAAef,EACfgB,kBACIL,KAAM,sBACNiB,mBACIc,YAAe,0BACfC,SAAY,uBACZC,YAAe,0BACfC,YAAe,0BACfC,iBAAoB,+BACpBC,WAAc,2BAGtB9B,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,UACPC,OACIC,OAAQ,GACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,mBACNC,MAAO,eACPC,UAAW,mBACXC,aAAc,OACdC,cAAeb,EACfc,kBACIL,KAAM,oBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,OACPC,OACIG,YAAY,EACZD,SAAS,IAoSrB,OA/RInB,GAAO2C,qBACTtC,EAAYuC,MACVtC,KAAM,kBACNC,MAAO,kBACPC,UAAW,kBACXE,cAAed,EACfgB,MACEC,MAAO,MACPC,OAAQ,SAEVC,sBAAsB,EACtBC,MAAO,QAIPhB,EAAO6C,wBACPxC,EAAYuC,MAEJtC,KAAM,uBACNC,MAAO,gCACPC,UAAW,mBACXC,aAAc,OACdC,cAAe5B,EACf6B,kBACIL,KAAM,wBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACP8B,wBAAwB,EACxB7B,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,sBACNC,MAAO,kCACPC,UAAW,mBACXC,aAAc,OACdC,cAAe1B,EACf2B,kBACIL,KAAM,uBAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,EACTD,OAAQ,MAGZZ,KAAM,yBACNC,MAAO,oCACPC,UAAW,2BACXC,aAAc,OACdC,cAAezB,EACf0B,kBACIL,KAAM,0BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,yBACNC,MAAO,qCACPC,UAAW,mBACXC,aAAc,OACdC,cAAerB,EACfsB,kBACIL,KAAM,0BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACP8B,wBAAwB,EACxB7B,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,EACT4B,MAAM,KAGVzC,KAAM,+BACNC,MAAO,sBACPC,UAAW,mBACXC,aAAc,OACdC,cAAetB,EACfuB,kBACIL,KAAM,+BACNiB,mBACIU,aAAc,oCACdC,cAAe,uCAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,oCACNC,MAAO,oCACPC,UAAW,mBACXC,aAAc,OACdC,cAAetB,EACfuB,kBACIL,KAAM,oCACNiB,mBACIU,aAAc,yCACdC,cAAe,4CAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,wCACNC,MAAO,kCACPC,UAAW,mBACXC,aAAc,OACdC,cAAetB,EACfuB,kBACIL,KAAM,wCACNiB,mBACIU,aAAc,6CACdC,cAAe,gDAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,6CACNC,MAAO,gDACPC,UAAW,mBACXC,aAAc,OACdC,cAAetB,EACfuB,kBACIL,KAAM,6CACNiB,mBACIU,aAAc,kDACdC,cAAe,qDAGvBtB,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,kBACNC,MAAO,8BACPC,UAAW,mBACXC,aAAc,OACdC,cAAevB,EACfwB,kBACIL,KAAM,kBACNiB,mBACIyB,eAAgB,yBAChBC,gBAAiB,4BAGzBrC,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIG,YAAY,EACZD,SAAS,KAGbb,KAAM,0BACNC,MAAO,6BACPC,UAAW,mBACXC,aAAc,OACdC,cAAe3B,EACf4B,kBACIL,KAAM,2BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACP8B,wBAAwB,EACxB7B,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,EACT4B,MAAM,KAGVzC,KAAM,iCACNC,MAAO,8BACPC,UAAW,mBACXC,aAAc,OACdC,cAAetB,EACfuB,kBACIL,KAAM,iCACNiB,mBACI2B,QAAS,mCAGjBtC,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACPC,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,KAGbb,KAAM,4BACNC,MAAO,mCACPC,UAAW,mBACXC,aAAc,OACdC,cAAeX,EACfY,kBACIL,KAAM,6BAEVM,MACIC,MAAO,MACPC,OAAQ,SAEZC,sBAAsB,EACtBC,MAAO,YACP8B,wBAAwB,EACxB7B,OACIC,OAAQ,EACRE,YAAY,EACZD,SAAS,EACT4B,MAAM,KAQf1C,EA/3BX3B,EAAkByE,SAAW,kBAAmB,2BAA4B,4BAA6B,gCAAiC,mCAAoC,6CAA8C,sCAAuC,uCAAwC,mCAAoC,6CAA8C,sCAAuC,mCAAoC,8BAA+B,gCAAiC,mCAAoC,0BAA2B,oCAAqC,uBAAwB,6BAA8B,uCAAwC,yCAA0C,SAk4BpvB,IAAIC,KAEI9C,KAAM,iBACNM,MACIC,MAAO,SAGXP,KAAM,oBACNM,MACIC,MAAO,SAGXP,KAAM,sBACNM,MACIC,MAAO,SAGXP,KAAM,kBACNM,MACIC,MAAO,SAGXP,KAAM,0BACNM,MACIC,MAAO,SAGXP,KAAM,kBACNM,MACIC,MAAO,SAGXP,KAAM,4BACNM,MACIC,MAAO,SAGXP,KAAM,sBACNM,MACIC,MAAO,SAGXP,KAAM,MACNM,MACIC,MAAO,SAGXP,KAAM,qBACNM,MACIC,MAAO,SAGXP,KAAM,qBACNM,MACIC,MAAO,SAGXP,KAAM,YACNM,MACIC,MAAO,SAGXP,KAAM,aACNM,MACIC,MAAO,SAGXP,KAAM,oBACNM,MACIC,MAAO,SAGXP,KAAM,mBACNM,MACIC,MAAO,SAKfwC,KAEAC,IAEIhD,KAAM,uBACNM,MACIC,MAAO,SAGXP,KAAM,yBACNM,MACIC,MAAO,SAGXP,KAAM,sBACNM,MACIC,MAAO,SAGXP,KAAM,yBACNM,MACIC,MAAO,SAGXP,KAAM,sBACNM,MACIC,MAAO,SAGXP,KAAM,uBACNM,MACIC,MAAO,QAKnB0C,SACKC,OAAO,UACJ,YACA,QACA,aACA,yBAEHC,QAAQ,oBAAqB/E,GAC7B4C,MAAM,iBAAkB8B,GACxB9B,MAAM,eAAgB+B,GACtB/B,MAAM,mBAAoBgC;;;;;;;;;;;;;;;;;AAwBnC,WACI,YAEA,SAASI,GAAaC,EAAOC,EAAMC,EAAYC,GAE3C,QAASC,GAAWC,GAChB,GAAIC,GAAUJ,EAAWK,WAAWC,SAAW,MAAQN,EAAWK,WAAWE,KAAO,IACjFP,EAAWK,WAAWG,KACrBC,IAQJ,OAPAA,GAASC,OAAS,MAClBD,EAASE,IAAMP,EAAU,iBACzBK,EAASN,UACTM,EAASN,OAAOA,EAAOS,aAAeT,EAAOU,aAC7CJ,EAASN,OAAOW,YAAcX,EAAOY,YAAYC,WACjDP,EAASQ,QAAU,IAEZnB,EAAMW,GACRS,KAAK,SAAUC,GACZ,MAAIA,GAASC,KAAKC,QACPF,EAASC,KAAKC,QAGlBpB,EAAGqB,OAAO,0BAI7B,QAASC,GAAmBC,EAAUT,GAClC,GAAIZ,KAIJ,OAHAA,GAAOS,YAAc,WACrBT,EAAOU,aAAeW,EACtBrB,EAAOY,YAAcA,EACdb,EAAWC,GAGtB,QAASsB,GAAmBC,EAAUX,GAClC,GAAIZ,KAIJ,OAHAA,GAAOS,YAAc,WACrBT,EAAOU,aAAea,EACtBvB,EAAOY,YAAcA,EACdb,EAAWC,GAGtB,QAASwB,GAAgBZ,GACrB,GAAIZ,KAIJ,OAHAA,GAAOS,YAAc,QACrBT,EAAOU,aAAe,WACtBV,EAAOY,YAAcA,EACdb,EAAWC,GAGtB,QAASyB,GAAkBC,EAAad,GACpC,GAAIZ,KAIJ,OAHAA,GAAOS,YAAc,cACrBT,EAAOU,aAAegB,EACtB1B,EAAOY,YAAcA,EACdb,EAAWC,GAGtB,QAAS2B,GAAiBT,EAASU,EAAOC,GACtC,GAAI5B,GAAUJ,EAAWK,WAAWC,SAAW,MAAQN,EAAWK,WAAWE,KAAO,IACjFP,EAAWK,WAAWG,KACrBC,IAaJ,OAZAA,GAASC,OAAS,MAClBD,EAASE,IAAMP,EAAU,UAAYiB,EAAU,UAC/CZ,EAASN,UAELT,QAAQuC,UAAUD,IAAoB,OAAVA,GAAkBA,EAAME,OAAS,IAC7DzB,EAASN,OAAO6B,MAAQA,EAAMG,KAAK,MAGnCzC,QAAQuC,UAAUF,IAAoB,OAAVA,GAAkBA,EAAMG,OAAS,IAC7DzB,EAASN,OAAO4B,MAAQA,EAAMI,KAAK,MAGhCrC,EAAMW,GACRS,KAAK,SAAUC,GACZ,MAAIzB,SAAQ0C,YAAYjB,EAASC,KAAKiB,YAClC3C,QAAQ0C,YAAYjB,EAASC,KAAKiB,UAAUC,IAC5C5C,QAAQ0C,YAAYjB,EAASC,KAAKiB,UAAUE,KAC5C7C,QAAQ0C,YAAYjB,EAASC,KAAKoB,QAC3BvC,EAAGqB,OAAO,0BAEdH,IAKnB,QAASsB,GAA0BpB,EAASqB,EAAOC,EAAWC,GAC1D,GAAIxC,GAAUJ,EAAWK,WAAWC,SAAW,MAAQN,EAAWK,WAAWE,KAAO,IAChFP,EAAWK,WAAWG,KACtBC,IAeJ,OAdAA,GAASC,OAAS,MAClBD,EAASE,IAAMP,EAAU,UAAYiB,EAAU,UAC/CZ,EAASN,QAAUuC,MAAOA,GAEtBhD,QAAQuC,UAAUU,IAA4B,OAAdA,IAChClC,EAASN,OAAO0C,SAAWF,EAAUR,KAAK,MAG1CzC,QAAQuC,UAAUW,IAAsB,OAAXA,IAC7BnC,EAASN,OAAOyC,OAASA,EAAOT,KAAK,MAGzC1B,EAASqC,OAAQ,EAEVhD,EAAMW,GACRS,KAAK,SAAUC,GACZ,MAAIzB,SAAQuC,UAAUd,EAASC,KAAKsB,QAChChD,QAAQuC,UAAUd,EAASC,KAAKuB,WAC1BxB,EAGHlB,EAAGqB,OAAO,4BAI7B,QAASyB,GAAyB1B,EAAS5E,EAAMkG,EAAWC,GACxD,GAAIxC,GAAUJ,EAAWK,WAAWC,SAAW,MAAQN,EAAWK,WAAWE,KAAO,IAChFP,EAAWK,WAAWG,KACtBC,IAeJ,OAdAA,GAASC,OAAS,MAClBD,EAASE,IAAMP,EAAU,UAAYiB,EAAU,UAC/CZ,EAASN,QAAU1D,KAAMA,GAErBiD,QAAQuC,UAAUU,IAA4B,OAAdA,IAChClC,EAASN,OAAO0C,SAAWF,EAAUR,KAAK,MAG1CzC,QAAQuC,UAAUW,IAAsB,OAAXA,IAC7BnC,EAASN,OAAOyC,OAASA,EAAOT,KAAK,MAGzC1B,EAASqC,OAAQ,EAEVhD,EAAMW,GACRS,KAAK,SAAUC,GACZ,MAAIzB,SAAQuC,UAAUd,EAASC,KAAKuB,WAC3BxB,EAEFlB,EAAGqB,OAAO,4BAI7B,QAAS0B,GAAyB7B,GAE9B,GAAIkB,GAAyC,IAA5BlB,EAASC,KAAKiB,UAAUC,EACpCnB,EAASC,KAAKiB,UAAUE,GAAK,IAC9BC,EAASrB,EAASC,KAAKoB,MAE3B,QACIH,UAAWA,EACXG,OAAQA,GAKhB,QAASS,GAAgCC,GACrC,GAAIC,KAeJ,OAdAzD,SAAQ0D,QAAQF,EAAW,SAAU/B,GACjC,GAAIuB,GAAQvB,EAASC,KAAKsB,MACtBjG,EAAO0E,EAAShF,OAAOgE,OAAO1D,KAC9BmG,IACJlD,SAAQ0D,QAAQjC,EAASC,KAAKuB,UAAW,SAAUU,GAC/CT,EAAOS,EAAKR,SAAS7B,YAAcqC,EAAK5G,OAE5C0G,EAAgB1G,EAAKuE,aACjB0B,MAAOA,EACPjG,KAAMA,EACNmG,OAAQA,KAITO,EAGX,QAASG,GAAsBjC,EAASD,GACpC,GAAImC,GAAWtD,EAAGuD,QACdC,IA+BJ,OA9BA/D,SAAQ0D,QAAQhC,EAAKoB,OAAQ,SAAU/E,GACnC,GAAIiG,GAAMC,EAAEC,IAAInG,EAAMkF,UAAW,SAAUU,GACvC,MAAI3D,SAAQuC,UAAUoB,EAAKR,WACL,OAAlBQ,EAAKR,SACEQ,EAAKR,SAEL,IAGfY,GAAuB1E,KACnBgE,EAAyB1B,EAAS5D,EAAMhB,KAAMiH,MAGtDzD,EAAG4D,IAAIJ,GACFvC,KAAK,SAAUgC,GACZ,GAAIY,GAAOb,EAAgCC,GAEvCa,GACA1B,UAAWjB,EAAKiB,UAChBG,OAAQpB,EAAKoB,OACbI,OAAQkB,EAGZP,GAASS,QAAQD,IAClB,SAAUE,GACTV,EAASjC,OAAO2C,IACjB,SAAUC,GACTX,EAASY,OAAOD,KAGjBX,EAASa,QAGpB,QAASC,GAAWhD,EAASiD,EAAStC,GAClC,MAAOF,GAAiBT,EAASiD,EAAStC,GACjCd,KAAK8B,GACL9B,KAAK,SAASE,GACX,MAAOkC,GAAsBjC,EAASD,KAIrD,OACGG,mBAAoBA,EACpBE,mBAAoBA,EACpBE,gBAAiBA,EACjBC,kBAAmBA,EACnBE,iBAAkBA,EAClBuC,WAAYA,EACZ5B,0BAA2BA,EAC3BM,yBAA0BA,GAKlCrD,QACKC,OAAO,YACPC,QAAQ,eAAgBC,GAE7BA,EAAaP,SAAW,QAAS,OAAQ,aAAc;;;;;;;;;;;;;;;;;AAqB1D,WACI,YAMA,SAASiF,GAAaC,GAoBnB,QAASC,GAAUC,EAAaC,GAE5B,GAAIC,MACAC,IAoBJ,OAlBAH,GAAYI,SAAW,SAGvBpF,QAAQqF,OAAOH,EAAOI,EAAcN,GAGpChF,QAAQqF,OAAOF,EAAcI,EAAqBN,GAElDC,EAAM1G,YAAc,SAAS,oBAAqB,SAAUgH,EAAQC,GAChED,EAAOL,aAAeA,EACtBK,EAAOL,aAAaO,GAAK,SAAUrB,GAC/BoB,EAAkBE,MAAMtB,IAE5BmB,EAAOL,aAAaQ,MAAQ,WACxBF,EAAkBG,QAAQ,aAI3Bd,EAAUe,KAAKX,GAAOb,OAzCjC,GAAIiB,IACAF,UAAU,EACVU,UAAU,EACVC,WAAW,EACXC,SAAU,mYAGVT,GACAU,gBAAiB,QACjBC,iBAAkB,KAClBC,WAAY,WACZC,SAAU,uBAiCd,QACIrB,UAAWA,GA9CnBF,EAAajF,SAAW,aAmDxBI,QACKC,OAAO,YACPC,QAAQ,eAAgB2E;;;;;;;;;;;;;;;;;AAwBhC,WACG,YAOA,SAASwB,GAAkB/F,EAAYF,EAAOC,EAAME,EAAIJ,EAAcmG,EAAcC,EAAkBC,EAAiBC,EAA2BC,GAQ9I,QAASC,GAAkB5J,GACvB,GAAI6J,GAAS3C,EAAE4C,KAAKC,EAAe,SAAUC,GACzC,MAAOA,GAAGhK,OAASA,GASvB,OANIiD,SAAQ0C,YAAYkE,IACpBA,EAAS,GAAIN,GAAavJ,GAC1B+J,EAAczH,KAAKuH,IAEnBA,EAAOI,cAEJJ,EAOX,QAASK,GAA4BlK,GACjC,GAAI6J,GAAS3C,EAAE4C,KAAKC,EAAe,SAAUC,GACzC,MAAOA,GAAGhK,OAASA,GASvB,OANIiD,SAAQ0C,YAAYkE,IACpBA,EAAS,GAAIL,GAAiBxJ,GAC9B+J,EAAczH,KAAKuH,IAEnBA,EAAOI,cAEJJ,EAOX,QAASM,GAA2BnK,EAAMe,GACtC,GAAI8I,GAAS3C,EAAE4C,KAAKC,EAAe,SAAUC,GACzC,MAAOA,GAAGhK,OAASA,GASvB,OANIiD,SAAQ0C,YAAYkE,IACpBA,EAAS,GAAIJ,GAAgBzJ,EAAMe,GACnCgJ,EAAczH,KAAKuH,IAEnBA,EAAOI,cAEJJ,EAOX,QAASO,GAAqCpK,EAAMe,GAChD,GAAI8I,GAAS3C,EAAE4C,KAAKC,EAAe,SAAUC,GACzC,MAAOA,GAAGhK,OAASA,GASvB,OANIiD,SAAQ0C,YAAYkE,IACpBA,EAAS,GAAIH,GAA0B1J,EAAMe,GAC7CgJ,EAAczH,KAAKuH,IAEnBA,EAAOI,cAEJJ,EAOX,QAASQ,GAAyBrK,EAAMsK,GACpC,GAAIT,GAAS3C,EAAE4C,KAAKS,EAAgB,SAAUV,GAC1C,MAAOA,GAAO7J,OAASA,GAS3B,OANIiD,SAAQ0C,YAAYkE,IACpBA,EAAS,GAAIF,GAAc3J,EAAMsK,GACjCC,EAAejI,KAAKuH,IAEpBA,EAAOI,cAEJJ,EAOX,QAASW,GAAcxK,GACnB,GAAIyK,GACAZ,EAAS3C,EAAE4C,KAAKC,EAAe,SAAUC,GACrC,MAAOA,GAAGhK,OAASA,GAG3B6J,GAAOI,cAEHJ,EAAOI,YAAc,IACrBQ,EAAQV,EAAcW,QAAQb,GAC1BY,EAAQ,IACRV,EAAcY,OAAOF,EAAO,IASxC,QAASG,GAAqB5K,GAC1B,GAAIyK,GACAZ,EAAS3C,EAAE4C,KAAKS,EAAgB,SAAUP,GACtC,MAAOA,GAAGhK,OAASA,GAG3B6J,GAAOI,cAEHJ,EAAOI,YAAc,IACrBQ,EAAQF,EAAeG,QAAQb,GAC3BY,EAAQ,IACRF,EAAeI,OAAOF,EAAO,IASzC,QAASI,KACL5H,QAAQ0D,QAAQoD,EAAe,SAAUF,GACrCA,EAAOiB,cAQf,QAASC,KACL9H,QAAQ0D,QAAQ4D,EAAgB,SAAUV,GACtCA,EAAOiB,cAIf,QAASE,KACL,MAAOT,GAGX,QAASU,KACL,MAAOlB,GA9JX,GAAIA,MACAQ,IAgKJ,QACIX,kBAAmBA,EACnBM,4BAA6BA,EAC7BC,2BAA4BA,EAC5BC,qCAAsCA,EACtCC,yBAA0BA,EAC1BG,cAAeA,EACfI,qBAAsBA,EACtBC,gBAAiBA,EACjBE,uBAAwBA,EACxBE,oBAAqBA,EACrBD,qBAAsBA,GA3K9B1B,EAAkBzG,SAAW,aAAc,QAAS,OAAQ,KAAM,eAAgB,eAAgB,mBAAoB,kBAAmB,4BAA6B,iBA+KtKI,QACKC,OAAO,cACJ,QACA,WAEHC,QAAQ,oBAAqBmG;;;;;;;;;;;;;;;;;AAqBtC,WACE,YAEArG,SACGC,OAAO,cACL;;;;;;;;;;;;;;;;;AAsBN,WACI,YAKA,SAASgI,GAAkB5H,EAAMC,EAAYF,EAAO8H,GAMjD,QAASC,KACL/H,EAAMgI,IAAI9H,EAAWK,WAAWC,SAAW,MAAQN,EAAWK,WAAWE,KAAO,IAAMP,EAAWK,WAAWG,KAAO,UAAYR,EAAWK,WAAWgB,QAAU,iCAC1J0G,QAAQ,WACLH,EAAOG,QAAQ,6BAA8B,aAC9CC,MAAM,WACLJ,EAAOI,MAAM,qCAAsC,WAI/D,OACIH,SAAUA,GAblBF,EAAkBrI,SAAW,OAAQ,aAAc,QAAS,UAiB5DI,QACKC,OAAO,cACPC,QAAQ,oBAAqB+H;;;;;;;;;;;;;;;;;AAqBtC,WACI,YAEA,SAASM,GAAcjI,EAAYkI,EAAUP,EAAmBQ,GAE5D,QAASC,GAAKC,GACVA,EAAM9H,KAAOP,EAAWK,WAAWE,KACnC8H,EAAM7H,KAAOR,EAAWK,WAAWG,KACnC6H,EAAMhH,QAAUrB,EAAWK,WAAWgB,QACtCgH,EAAMC,OAAQ,EACdD,EAAME,YAAa,EACnBF,EAAMG,GAAKL,EAAiBM,UAC5BJ,EAAMK,mBAAqB,WACvBf,EAAkBE,WAClBQ,EAAMC,OAAQ,EACdD,EAAME,YAAa,EACnBL,EAAS,WACLG,EAAME,YAAa,GACpB,OAIX,OACII,SAAU,IACV1K,YAAa,4CACbmK,KAAMA,GAlBdH,EAAc3I,SAAW,aAAc,WAAY,oBAAqB,oBAsBxEI,QACKC,OAAO,cACPhD,UAAU,gBAAiBsL;;;;;;;;;;;;;;;;;AAqBpC,WACE,YAEAvI,SACGC,OAAO,UACL;;;;;;;;;;;;;;;;;AAyBN,WACI,YAMD,SAASqG,GAAahG,GAElB,GAAI4I,GAAS,SAAUnM,GACnBoM,KAAKpM,KAAOA,GAAQ,KACpBoM,KAAKzH,QACLyH,KAAKnC,YAAc,EACnBmC,KAAKC,KAAO,KAuDhB,OApDAF,GAAOG,UAAU/H,SAAW,WACxB,MAAO6H,MAAKpM,MAGhBmM,EAAOG,UAAUC,UAAY,SAAU3G,EAAW4G,EAAKC,EAAOzL,GAC1D,GACIoF,GACAsG,EAFAC,EAAOP,IAIXhG,GAAWc,EAAE4C,KAAK6C,EAAKhI,KAAM,SAAUqF,GACnC,MAAOA,GAAGwC,MAAQA,IAGlBvJ,QAAQuC,UAAUY,IAA0B,OAAbA,GAC/BA,EAASL,OAAOzD,MAAOsK,EAAGhH,EAAWiH,EAAG7L,IACxC0L,EAAWtG,EAASL,OAAON,OAAoD,GAAzCqH,SAASvJ,EAAWK,WAAWmJ,QAAgBD,SAASvJ,EAAWK,WAAWoJ,UAChHN,EAAW,GACXtG,EAASL,OAAO4E,OAAO,EAAG+B,KAG9BtG,GACI6G,IAAKhK,QAAQuC,UAAUiH,GAASA,EAAQL,KAAKpM,KAC7CwM,IAAKA,EACLzG,SAAU6G,EAAGhH,EAAWiH,EAAG7L,IAAS4L,EAAGhH,EAAY,EAAGiH,EAAG7L,KAE7D2L,EAAKhI,KAAKrC,KAAK8D,KAIvB+F,EAAOG,UAAUxB,UAAY,WACzBsB,KAAKzH,KAAKc,OAAS,GAGvB0G,EAAOG,UAAUY,uBAAyB,SAAUC,GAChD,GAAIX,GACAY,EACA3C,EACAkC,EAAOP,IACXnJ,SAAQ0D,QAAQgG,EAAKhI,KAAM,SAASyB,GAChCgH,EAAkBlG,EAAE4C,KAAKqD,EAAkB,SAAUnD,GAEjD,MADAwC,GAAMvJ,QAAQ0C,YAAYqE,EAAG5D,UAAY,EAAI4D,EAAG5D,SACzCoG,IAAQpG,EAASoG,MAExBvJ,QAAQ0C,YAAYyH,KACpB3C,EAAQkC,EAAKhI,KAAK+F,QAAQtE,GACtBqE,EAAQ,IACRkC,EAAKhI,KAAKgG,OAAOF,EAAO,OAMjC0B,EAxDX5C,EAAa1G,SAAW,cA2DxBI,QACKC,OAAO,UACPC,QAAQ,eAAgBoG;;;;;;;;;;;;;;;;;AAoBjC,WACI,YAMA,SAAS8D,GAAchK,EAAOE,EAAYH,GACtC,OACIkK,UAAW,SAAUzD,EAAQ2C,GACzB,MAAOpJ,GAAakD,yBAAyB/C,EAAWK,WAAWgB,QAASiF,GAAS2C,MAGjGa,EAAcxK,SAAW,QAAS,aAAc,gBAEhDI,QACGC,OAAO,UACPC,QAAQ,gBAAiBkK;;;;;;;;;;;;;;;;;AAuB/B,WACI,YAMD,SAAS1D,GAAcpG,GAEnB,GAAI4I,GAAS,SAAUnM,EAAMsK,GACzB8B,KAAKpM,KAAOA,EACZoM,KAAKzH,QACLyH,KAAKnC,YAAc,EACnBmC,KAAK9B,gBAAkBA,EAuC3B,OApCA6B,GAAOG,UAAUiB,aAAe,WAC5B,GACIxH,GADA4G,EAAOP,IAGXrG,GAAS4G,EAAKrC,kBAEVvE,EAAON,SAAWkH,EAAKhI,KAAKc,SAC5BkH,EAAKhI,KAAKc,OAAS,GAGvBxC,QAAQ0D,QAAQZ,EAAQ,SAAUpB,GAC9B,GAAI+H,GACAtG,EAAWc,EAAE4C,KAAK6C,EAAKhI,KAAM,SAAUqF,GACnC,MAAOA,GAAGiD,MAAQtI,EAAKsI,KAG3BhK,SAAQ0C,YAAYS,IACpBA,GACI6G,IAAKtI,EAAKsI,IACVlH,SAAU6G,EAAGjI,EAAKiB,UAAWiH,EAAGlI,EAAK3D,QAAS4L,EAAGjI,EAAKiB,UAAY,EAAGiH,EAAGlI,EAAK3D,SAEjF2L,EAAKhI,KAAKrC,KAAK8D,KAEfA,EAASL,OAAOzD,MAAMsK,EAAGjI,EAAKiB,UAAWiH,EAAGlI,EAAK3D,QACjD0L,EAAWtG,EAASL,OAAON,OAAoD,GAAzCqH,SAASvJ,EAAWK,WAAWmJ,QAAgBD,SAASvJ,EAAWK,WAAWoJ,UAChHN,EAAW,GACXtG,EAASL,OAAO4E,OAAO,EAAG+B,OAM1CP,EAAOG,UAAUxB,UAAY,WACzBsB,KAAKzH,KAAKc,OAAS,GAGhB0G,EAtCXxC,EAAc9G,SAAW,cAyCzBI,QACKC,OAAO,UACPC,QAAQ,gBAAiBwG;;;;;;;;;;;;;;;;;AAuBjC,WACI,YAMD,SAASD,GAA0BnG,EAAYD,EAAMiG,GAEjD,GAAI4C,GAAS,SAAUnM,EAAMe,GACzBqL,KAAKoB,KAAOrB,EACZC,KAAKoB,KAAKxN,GACVoM,KAAKrL,mBAAqBA,EAsC9B,OAnCAoL,GAAOG,UAAY,GAAI/C,GAEvB4C,EAAOG,UAAUC,UAAY,SAAU3G,EAAW4G,EAAKC,EAAOzL,GAC1D,GACIoF,GACAsG,EACAe,EACAC,EAJAf,EAAOP,IAMXhG,GAAWc,EAAE4C,KAAK6C,EAAKhI,KAAM,SAAUqF,GACnC,MAAOA,GAAGwC,MAAQA,IAGlBvJ,QAAQ0C,YAAYS,IACpBA,GACI6G,IAAKhK,QAAQuC,UAAUiH,GAASA,EAAQL,KAAKpM,KAC7CwM,IAAKA,EACLzG,UACA4H,cAAe3M,EACf4M,kBAAmBhI,GAEvB+G,EAAKhI,KAAKrC,KAAK8D,KAEfqH,GAAczM,EAAQoF,EAASuH,gBAAkB/H,EAAYQ,EAASwH,mBACtEF,EAAiBf,EAAK5L,mBAAmB0M,GACzCrH,EAASL,OAAOzD,MAAOsK,EAAGhH,EAAWiH,EAAGa,IACxCtH,EAASuH,cAAgB3M,EACzBoF,EAASwH,kBAAoBhI,EAC7B8G,EAAWtG,EAASL,OAAON,OAAoD,GAAzCqH,SAASvJ,EAAWK,WAAWmJ,QAAgBD,SAASvJ,EAAWK,WAAWoJ,UAChHN,EAAW,GACXtG,EAASL,OAAO4E,OAAO,EAAG+B,KAK/BP,EAnCXzC,EAA0B7G,SAAW,aAAc,OAAQ,gBAsC3DI,QACKC,OAAO,UACPC,QAAQ,4BAA6BuG;;;;;;;;;;;;;;;;;AAuB7C,WACI,YAMD,SAASF,GAAiBjG,EAAYD,EAAMiG,GAExC,GAAI4C,GAAS,SAAUnM,GACnBoM,KAAKoB,KAAOjE,EACZ6C,KAAKoB,KAAKxN,GAwCd,OArCAmM,GAAOG,UAAY,GAAI/C,GAEvB4C,EAAOG,UAAUC,UAAY,SAAU3G,EAAW4G,EAAKC,EAAOzL,GAC1D,GACIoF,GACAsG,EACAe,EAHAd,EAAOP,IAKXhG,GAAWc,EAAE4C,KAAK6C,EAAKhI,KAAM,SAAUqF,GACnC,MAAOA,GAAGwC,MAAQA,IAGlBvJ,QAAQ0C,YAAYS,IACpBA,GACI6G,IAAKhK,QAAQuC,UAAUiH,GAASA,EAAQL,KAAKpM,KAC7CwM,IAAKA,EACLzG,UACA4H,cAAe3M,EACf4M,kBAAmBhI,GAEvB+G,EAAKhI,KAAKrC,KAAK8D,KAEfqH,GAAczM,EAAQoF,EAASuH,iBAAmB/H,EAAYQ,EAASwH,mBAAqB,KACxFxH,EAASL,OAAON,OAAS,EAC3BW,EAASL,OAAOzD,MAAOsK,EAAGhH,EAAWiH,EAAGY,IAAeb,EAAGhH,EAAY,EAAGiH,EAAGY,IAE1ErH,EAASL,OAAOzD,MAAOsK,EAAGhH,EAAWiH,EAAGY,IAE5CrH,EAASuH,cAAgB3M,EACzBoF,EAASwH,kBAAoBhI,EAC7B8G,EAAWtG,EAASL,OAAON,OAAoD,GAAzCqH,SAASvJ,EAAWK,WAAWmJ,QAAgBD,SAASvJ,EAAWK,WAAWoJ,UAChHN,EAAW,GACXtG,EAASL,OAAO4E,OAAO,EAAG+B,KAK/BP,EAnCX3C,EAAiB3G,SAAW,aAAc,OAAQ,gBAsClDI,QACKC,OAAO,UACPC,QAAQ,mBAAoBqG;;;;;;;;;;;;;;;;;AAuBpC,WACI,YAMD,SAASC,GAAgBlG,EAAYD,EAAMiG,GAEvC,GAAI4C,GAAS,SAAUnM,EAAMe,GACzBqL,KAAKoB,KAAOjE,EACZ6C,KAAKoB,KAAKxN,GACVoM,KAAKrL,mBAAqBA,EAiC9B,OA9BAoL,GAAOG,UAAY,GAAI/C,GAEvB4C,EAAOG,UAAUC,UAAY,SAAU3G,EAAW4G,EAAKC,EAAOzL,GAC1D,GACIoF,GACAsG,EACAgB,EAHAf,EAAOP,IAKXsB,GAAiBf,EAAK5L,mBAAmBC,GAEzCoF,EAAWc,EAAE4C,KAAK6C,EAAKhI,KAAM,SAAUqF,GACnC,MAAOA,GAAGwC,MAAQA,IAGlBvJ,QAAQuC,UAAUY,IAA0B,OAAbA,GAC/BA,EAASL,OAAOzD,MAAOsK,EAAGhH,EAAWiH,EAAGa,IACxChB,EAAWtG,EAASL,OAAON,OAAoD,GAAzCqH,SAASvJ,EAAWK,WAAWmJ,QAAgBD,SAASvJ,EAAWK,WAAWoJ,UAChHN,EAAW,GACXtG,EAASL,OAAO4E,OAAO,EAAG+B,KAG9BtG,GACI6G,IAAKhK,QAAQuC,UAAUiH,GAASA,EAAQL,KAAKpM,KAC7CwM,IAAKA,EACLzG,SAAU6G,EAAGhH,EAAWiH,EAAGa,IAAkBd,EAAGhH,EAAY,EAAGiH,EAAGa,KAEtEf,EAAKhI,KAAKrC,KAAK8D,KAIhB+F,EA5BX1C,EAAgB5G,SAAW,aAAc,OAAQ,gBA+BjDI,QACKC,OAAO,UACPC,QAAQ,kBAAmBsG;;;;;;;;;;;;;;;;;AAoBpC,WACE,YAEAxG,SACGC,OAAO,aACL,oBACA,YACA;;;;;;;;;;;;;;;;;AAsBN,WACI,YAMD,SAAS2K,GAAsBC,EAAiBxE,EAAmBoC,GAC/D,GAAIqC,GAAY,WACZ,MAAO3B,MAsBX,OAnBA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKvC,OAASP,EAAkBM,kBAAkBwC,KAAKpM,MAEvDoM,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAIjCoJ,EAAUzB,UAAU+B,QAAU,WAC1B/E,EAAkBkB,cAAc4B,KAAKpM,MAErC8N,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAbXF,EAAsBhL,SAAW,kBAAmB,oBAAqB,oBAgBzEI,QACKC,OAAO,aACPC,QAAQ,kBAAmB0K;;;;;;;;;;;;;;;;;AAuBnC,WACI,YAMD,SAAS1O,GAAiC2O,EAAiBxE,EAAmBoC,GAC1E,GAAIqC,GAAY,WACZ,MAAO3B,MA2DX,OAxDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IAEI1B,GAFAgE,EAAehF,EAAkBY,4BAA4B,yBAC7DqE,EAAgBjF,EAAkBY,4BAA4B,yBAGlEI,GAAkB,WACd,GACIkE,GACAC,EACAC,EAHAC,IAwBJ,OAnBA1L,SAAQ0D,QAAQ2H,EAAa3J,KAAM,SAAUiK,GACrCA,EAAe7I,OAAON,OAAS,IAC/B+I,EAAkBtH,EAAE4C,KAAKyE,EAAc5J,KAAM,SAAUqF,GACnD,MAAOA,GAAGiD,MAAQ2B,EAAe3B,MAEjChK,QAAQuC,UAAUgJ,KAClBC,EAAkBG,EAAe7I,OAAO6I,EAAe7I,OAAON,OAAS,GACvEiJ,EAAmBF,EAAgBzI,OAAOyI,EAAgBzI,OAAON,OAAS,GACtEgJ,EAAgB7B,IAAM8B,EAAiB9B,GACvC+B,EAAarM,MACTsD,UAAW6I,EAAgB7B,EAC3BK,IAAK2B,EAAe3B,IACpBjM,OAAQyN,EAAgB5B,EAAI6B,EAAiB7B,GAAK,UAO/D8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,yBAChClB,EAAkBkB,cAAc,0BAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAjDX5O,EAAiC0D,SAAW,kBAAmB,oBAAqB,oBAoDpFI,QACKC,OAAO,aACPC,QAAQ,mCAAoChE;;;;;;;;;;;;;;;;;AAqBpD,WACI,YAMD,SAASF,GAA4B6O,EAAiBxE,EAAmBoC,GACrE,GAAIqC,GAAY,WACZ,MAAO3B,MA4DX,OAzDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IAII1B,GAJAuE,EAAmBzC,KAEnB0C,EAAWxF,EAAkBY,4BAA4B,8BACzD6E,EAAYzF,EAAkBY,4BAA4B,8BAI9DI,GAAkB,WACd,GACI0E,GADAL,KAGAM,EAAmB,SAAS7I,EAAU8I,GAClC9I,EAASL,OAAON,OAAS,GAAyE,KAApEW,EAAS6G,IAAIvC,QAAQmE,EAAiBM,YAAYC,OAAOtP,UACvFkP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAK7G,EAAS6G,IAAMiC,EACpBlO,MAAOgO,EAAUnC,EAAI,QAajC,OARA5J,SAAQ0D,QAAQmI,EAASnK,KAAM,SAAUyB,GACrC6I,EAAiB7I,EAAU,SAG/BnD,QAAQ0D,QAAQoI,EAAUpK,KAAM,SAAUyB,GACtC6I,EAAiB7I,EAAU,UAGxBuI,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,8BAChClB,EAAkBkB,cAAc,+BAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAjDX9O,EAA4B4D,SAAW,kBAAmB,oBAAqB,oBAoD/EI,QACKC,OAAO,aACPC,QAAQ,8BAA+BlE;;;;;;;;;;;;;;;;;AAoB/C,WACI,YAMD,SAASG,GAAwB0O,EAAiBxE,EAAmBoC,GACjE,GAAIqC,GAAY,WACZ,MAAO3B,MAyDX,OAtDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKnL,kBAAoBmL,KAAK/L,iBAAiBY,iBAE/C,IAAIqJ,GACAzC,IAEJ5E,SAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,EAAYpC,GAC1DpF,EAAQoF,GAAO3D,EAAkBM,kBAAkByF,KAGvD/E,EAAkB,WACd,GACI0E,GADAL,IAgBJ,OAbA1L,SAAQ0D,QAAQkB,EAAS,SAAUgC,EAAQoD,GACvChK,QAAQ0D,QAAQkD,EAAOlF,KAAM,SAAUyB,GAC/BA,EAASL,OAAON,OAAS,IACzBuJ,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKA,EAAIqC,QAAQ,QAASlJ,EAAS6G,KACnCjM,MAAOgO,EAAUnC,SAM1B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CiD,QAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,GAC9C/F,EAAkBkB,cAAc6E,KAGpCvB,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA7CX3O,EAAwByD,SAAW,kBAAmB,oBAAqB,oBAgD3EI,QACKC,OAAO,aACPC,QAAQ,0BAA2B/D;;;;;;;;;;;;;;;;;AAoB3C,WACI,YAMD,SAASC,GAAkCyO,EAAiBxE,EAAmBoC,GAC3E,GAAIqC,GAAY,WACZ,MAAO3B,MA2DX,OAxDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKnL,kBAAoBmL,KAAK/L,iBAAiBY,iBAG/C,IAEIqJ,GAFAuE,EAAmBzC,KACnBvE,IAGJ5E,SAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,EAAYpC,GAC1DpF,EAAQoF,GAAO3D,EAAkBY,4BAA4BmF,KAGjE/E,EAAkB,WACd,GACI0E,GADAL,IAgBJ,OAbA1L,SAAQ0D,QAAQkB,EAAS,SAAUgC,EAAQoD,GACvChK,QAAQ0D,QAAQkD,EAAOlF,KAAM,SAAUyB,GAC/BA,EAASL,OAAON,OAAS,IAAQxC,QAAQ0C,YAAYkJ,EAAiBM,YAAYC,OAAOtP,SAA+E,KAApEsG,EAAS6G,IAAIvC,QAAQmE,EAAiBM,YAAYC,OAAOtP,WAC7JkP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKA,EAAIqC,QAAQ,QAASlJ,EAAS6G,KACnCjM,MAAOgO,EAAUnC,SAM1B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CiD,QAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,GAC9C/F,EAAkBkB,cAAc6E,KAGpCvB,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA9CX1O,EAAkCwD,SAAW,kBAAmB,oBAAqB,oBAiDrFI,QACKC,OAAO,aACPC,QAAQ,oCAAqC9D;;;;;;;;;;;;;;;;;AAoBrD,WACI,YAMD,SAASL,GAAiC8O,EAAiBxE,EAAmBoC,GAC1E,GAAIqC,GAAY,WACZ,MAAO3B,MAmHX,OAhHA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IAOI1B,GAPAvJ,EAAqB,SAAUC,GAC3B,MAAOA,GAAQ,MAEnBuO,EAAkBjG,EAAkBa,2BAA2B,kBAAmBpJ,GAClFyO,EAAgBlG,EAAkBa,2BAA2B,gBAAiBpJ,GAC9E0O,EAAgBnG,EAAkBa,2BAA2B,gBAAiBpJ,GAC9E2O,EAAmBpG,EAAkBa,2BAA2B,kBAAmBpJ,EAGvFuJ,GAAkB,WACd,GACIqF,GACAC,EACAC,EACAC,EAJAnB,IAyEJ,OAlEAgB,GAAa,WACT,GAAIH,EAAc7K,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWoJ,EAAc7K,KAAK6K,EAAc7K,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DmK,EAAe,WACX,GAAIL,EAAgB5K,KAAKc,OAAS,EAAG,CACjC,GAAIW,GAAWmJ,EAAgB5K,KAAK4K,EAAgB5K,KAAKc,OAAS,EAClE,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DoK,EAAa,WACT,GAAIJ,EAAc9K,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWqJ,EAAc9K,KAAK8K,EAAc9K,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DqK,EAAgB,WACZ,GAAIJ,EAAiB/K,KAAKc,OAAS,EAAG,CAClC,GAAIW,GAAWsJ,EAAiB/K,KAAK+K,EAAiB/K,KAAKc,OAAS,EACpE,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAKxDxC,QAAQuC,UAAUmK,IAClB1M,QAAQuC,UAAUoK,IAClB3M,QAAQuC,UAAUsK,IAElBnB,EAAarM,MACTsD,UAAW+J,EAAU/C,EACrBK,IAAK,cACLjM,MAAO2O,EAAU9C,EAAI+C,EAAY/C,EAAIiD,EAAajD,IAItD5J,QAAQuC,UAAUoK,IAClB3M,QAAQuC,UAAUsK,IAElBnB,EAAarM,MACTsD,UAAW+J,EAAU/C,EACrBK,IAAK,eACLjM,MAAO4O,EAAY/C,EAAIiD,EAAajD,IAIxC5J,QAAQuC,UAAUqK,IAElBlB,EAAarM,MACTsD,UAAW+J,EAAU/C,EACrBK,IAAK,gBACLjM,MAAO6O,EAAUhD,IAIlB8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,mBAChClB,EAAkBkB,cAAc,iBAChClB,EAAkBkB,cAAc,iBAChClB,EAAkBkB,cAAc,mBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EArGX/O,EAAiC6D,SAAW,kBAAmB,oBAAqB,oBAwGpFI,QACKC,OAAO,aACPC,QAAQ,mCAAoCnE;;;;;;;;;;;;;;;;;AAoBpD,WACI,YAMD,SAASM,GAAqBwO,EAAiBxE,GAC3C,GAAIyE,GAAY,WACZ,MAAO3B,MAiBX,OAdA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKvC,OAASP,EAAkBM,kBAAkB,yBAGtDmE,EAAUzB,UAAU+B,QAAU,WAC1B/E,EAAkBkB,cAAc,wBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAFXzO,EAAqBuD,SAAW,kBAAmB,qBAKnDI,QACKC,OAAO,aACPC,QAAQ,uBAAwB7D;;;;;;;;;;;;;;;;;AAuBxC,WACI,YAMD,SAASC,GAA2BuO,EAAiBxE,EAAmBoC,GACpE,GAAIqC,GAAY,WACZ,MAAO3B,MA4EX,OAzEA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IAII1B,GAJAyF,EAAmBzG,EAAkBY,4BAA4B,2BACjE8F,EAAoB1G,EAAkBY,4BAA4B,4BAClE+F,EAAa3G,EAAkBY,4BAA4B,iBAC3DgG,EAAc5G,EAAkBY,4BAA4B,iBAGhEI,GAAkB,WAOd,QAAS6F,GAAgBtG,EAAQuG,EAAiBnD,EAAKoD,GAC/CxG,EAAOlF,KAAKc,OAAS,GACrBxC,QAAQ0D,QAAQkD,EAAOlF,KAAM,SAAUyB,GACnCkK,EAAoBpJ,EAAE4C,KAAKsG,EAAgBzL,KAAM,SAAU4L,GACvD,MAAOA,GAAQtD,MAAQ7G,EAAS6G,MAEhChK,QAAQuC,UAAU8K,IACdlK,EAASL,OAAON,OAAS,GACrB6K,EAAkBvK,OAAON,OAAS,IAClCuJ,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrD+K,EAAqBF,EAAkBvK,OAAOK,EAASL,OAAON,OAAS,GAEnEzE,EADAgO,EAAUnC,EAAI,EACN2D,EAAmB3D,EAAImC,EAAUnC,EAEjC,EAEZwD,EAAU/N,MACNsD,UAAWoJ,EAAUpC,EACrBK,IAAK7G,EAAS6G,IAAMA,EACpBjM,MAAOA,OAzBnC,GACIsP,GACAtB,EACAwB,EACAxP,EAJA2N,IAqCJ,OAHAwB,GAAgBF,EAAYF,EAAkB,gBAAiBpB,GAC/DwB,EAAgBD,EAAaF,EAAmB,iBAAkBrB,GAE3DA,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,2BAChClB,EAAkBkB,cAAc,4BAChClB,EAAkBkB,cAAc,iBAChClB,EAAkBkB,cAAc,kBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA5DXxO,EAA2BsD,SAAW,kBAAmB,oBAAqB,oBA+D9EI,QACKC,OAAO,aACPC,QAAQ,6BAA8B5D;;;;;;;;;;;;;;;;;AAoB9C,WACI,YAMD,SAASC,GAAqCsO,EAAiBxE,EAAmBoC,GAC9E,GAAIqC,GAAY,WACZ,MAAO3B,MAgDX,OA7CA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IACI1B,GADAmG,EAAYnH,EAAkBY,4BAA4BkC,KAAKpM,KAGnEsK,GAAkB,WACd,GACI0E,GADAL,IAcJ,OAXA1L,SAAQ0D,QAAQ8J,EAAU9L,KAAM,SAAUyB,GAClCA,EAASL,OAAON,OAAS,IACzBuJ,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAK7G,EAAS6G,IACdjM,MAAOgO,EAAUnC,EAAI,SAK1B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAIjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc4B,KAAKpM,MAErC8N,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA/BXvO,EAAqCqD,SAAW,kBAAmB,oBAAqB,oBAkCxFI,QACKC,OAAO,aACPC,QAAQ,uCAAwC3D;;;;;;;;;;;;;;;;;AAoBxD,WACI,YAMD,SAASjB,GAA0BuP,EAAiBxE,EAAmBoC,GACnE,GAAIqC,GAAY,WACZ,MAAO3B,MAsBX,OAnBA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKvC,OAASP,EAAkBY,4BAA4BkC,KAAKpM,MAEjEoM,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAIjCoJ,EAAUzB,UAAU+B,QAAU,WAC1B/E,EAAkBkB,cAAc4B,KAAKpM,MAErC8N,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAJXxP,EAA0BsE,SAAW,kBAAmB,oBAAqB,oBAO7EI,QACKC,OAAO,aACPC,QAAQ,4BAA6B5E;;;;;;;;;;;;;;;;;AAoB7C,WACI,YAMD,SAASW,GAA8B4O,EAAiBxE,EAAmBoC,GACvE,GAAIqC,GAAY,WACZ,MAAO3B,MAqEX,OAlEA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IAGI1B,GAHAgE,EAAehF,EAAkBY,4BAA4B,sBAC7DqE,EAAgBjF,EAAkBY,4BAA4B,uBAC9DwG,EAAapH,EAAkBM,kBAAkB,YAGrDU,GAAkB,WACd,GACIqG,GACAC,EAFAjC,IAIJ,IAAI+B,EAAW/L,KAAKc,OAAS,IACzBkL,EAAcD,EAAW/L,KAAK+L,EAAW/L,KAAKc,OAAS,GAEnDkL,EAAY5K,OAAON,OAAS,GAAG,CAC/BmL,EAAWD,EAAY5K,OAAO4K,EAAY5K,OAAON,OAAS,GAAGoH,CAE7D,IAAIoC,GAAmB,SAAS7I,EAAUyK,GACtC,GAAIzK,EAASL,OAAON,OAAS,EAAG,CAC5B,GAAIuJ,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,EACzDkJ,GAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAK4D,EACL7P,MAAOgO,EAAUnC,GAAgB,IAAX+D,MAKlC3N,SAAQ0D,QAAQ2H,EAAa3J,KAAM,SAAUyB,GACzC6I,EAAiB7I,EAAU,SAG/BnD,QAAQ0D,QAAQ4H,EAAc5J,KAAM,SAAUyB,GAC1C6I,EAAiB7I,EAAU,UAKvC,MAAOuI,IAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,sBAChClB,EAAkBkB,cAAc,uBAChClB,EAAkBkB,cAAc,aAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAlDX7O,EAA8B2D,SAAW,kBAAmB,oBAAqB,oBAqDjFI,QACKC,OAAO,aACPC,QAAQ,gCAAiCjE;;;;;;;;;;;;;;;;;AAoBjD,WACI,YAMD,SAASZ,GAAyBwP,EAAiBxE,EAAmBoC,GAClE,GAAIqC,GAAY,WACZ,MAAO3B,MAyBX,OAtBA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAG9FI,KAAKrL,mBAAqBqL,KAAK/L,iBAAiBU,mBAEhDqL,KAAKvC,OAASP,EAAkBa,2BAA2BiC,KAAKpM,KAAMoM,KAAKrL,oBAE3EqL,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAIjCoJ,EAAUzB,UAAU+B,QAAU,WAC1B/E,EAAkBkB,cAAc4B,KAAKpM,MAErC8N,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EALXzP,EAAyBuE,SAAW,kBAAmB,oBAAqB,oBAQ5EI,QACKC,OAAO,aACPC,QAAQ,2BAA4B7E;;;;;;;;;;;;;;;;;AAoB5C,WACI,YAMD,SAASM,GAAqCkP,EAAiBxE,EAAmBoC,GAC9E,GAAIqC,GAAY,WACZ,MAAO3B,MA+DX,OA5DA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IAII1B,GAJAuE,EAAmBzC,KAEnB0C,EAAWxF,EAAkBY,4BAA4B,8BACzD6E,EAAYzF,EAAkBY,4BAA4B,8BAI9DI,GAAkB,WACd,GACI0E,GADAL,IAyBJ,OAtBA1L,SAAQ0D,QAAQmI,EAASnK,KAAM,SAAUyB,GACjCA,EAASL,OAAON,OAAS,GAAsC,KAAjCW,EAAS6G,IAAIvC,QAAQ,SAAsF,KAApEtE,EAAS6G,IAAIvC,QAAQmE,EAAiBM,YAAYC,OAAOtP,UAC9HkP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAK7G,EAAS6G,IAAM,MACpBjM,MAAOgO,EAAUnC,EAAI,UAKjC5J,QAAQ0D,QAAQoI,EAAUpK,KAAM,SAAUyB,GAClCA,EAASL,OAAON,OAAS,GAAqC,KAAhCW,EAAS6G,IAAIvC,QAAQ,SAAsF,KAApEtE,EAAS6G,IAAIvC,QAAQmE,EAAiBM,YAAYC,OAAOtP,UAC9HkP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAK7G,EAAS6G,IAAM,OACpBjM,MAAOgO,EAAUnC,EAAI,UAK1B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB,8BAA+BC,GAExF8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqB,+BAGvCtB,EAAkBkB,cAAc,8BAChClB,EAAkBkB,cAAc,+BAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA1CXnP,EAAqCiE,SAAW,kBAAmB,oBAAqB,oBA6CxFI,QACKC,OAAO,aACPC,QAAQ,uCAAwCvE;;;;;;;;;;;;;;;;;AAoBxD,WACI,YAMD,SAASC,GAAiCiP,EAAiBxE,EAAmBoC,EAAkBoF,GAC5F,GAAI/C,GAAY,WACZ,MAAO3B,MA8DX,OA3DA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKnL,kBAAoBmL,KAAK/L,iBAAiBY,iBAE/C,IAAIqJ,GACAzC,IAEJ5E,SAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,EAAYpC,GAC1DpF,EAAQoF,GAAO3D,EAAkBM,kBAAkByF,KAGvD/E,EAAkB,WACd,GACI0E,GACAhP,EAFA2O,IAqBJ,OAjBA1L,SAAQ0D,QAAQkB,EAAS,SAAUgC,EAAQoD,GACvChK,QAAQ0D,QAAQkD,EAAOlF,KAAM,SAAUyB,GAE/B0K,EAAyBC,iBAAiB3K,EAAS6G,OACnDjN,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,IACnE7G,EAASL,OAAON,OAAS,GAAKqL,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,KACjIgP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKA,EAAIqC,QAAQ,QAAStP,GAC1BgB,MAAOgO,EAAUnC,UAO9B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CiD,QAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,GAC9C/F,EAAkBkB,cAAc6E,KAGpCvB,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAxCXlP,EAAiCgE,SAAW,kBAAmB,oBAAqB,mBAAoB,4BA2CxGI,QACKC,OAAO,aACPC,QAAQ,mCAAoCtE;;;;;;;;;;;;;;;;;AAoBpD,WACI,YAMD,SAASC,GAA2CgP,EAAiBxE,EAAmBoC,EAAkBoF,GACtG,GAAI/C,GAAY,WACZ,MAAO3B,MA8DX,OA3DA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,UAE9FI,KAAKnL,kBAAoBmL,KAAK/L,iBAAiBY,iBAE/C,IAAIqJ,GACAzC,IAEJ5E,SAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,EAAYpC,GAC1DpF,EAAQoF,GAAO3D,EAAkBY,4BAA4BmF,KAGjE/E,EAAkB,WACd,GACI0E,GACAhP,EAFA2O,IAqBJ,OAjBA1L,SAAQ0D,QAAQkB,EAAS,SAAUgC,EAAQoD,GACvChK,QAAQ0D,QAAQkD,EAAOlF,KAAM,SAAUyB,GAE/B0K,EAAyBC,iBAAiB3K,EAAS6G,OACnDjN,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,IACnE7G,EAASL,OAAON,OAAS,GAAKqL,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,KACjIgP,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDkJ,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKA,EAAIqC,QAAQ,QAAStP,GAC1BgB,MAAOgO,EAAUnC,UAO9B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CiD,QAAQ0D,QAAQyF,KAAKnL,kBAAmB,SAAUoO,GAC9C/F,EAAkBkB,cAAc6E,KAGpCvB,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAvCXjP,EAA2C+D,SAAW,kBAAmB,oBAAqB,mBAAoB,4BA0ClHI,QACKC,OAAO,aACPC,QAAQ,6CAA8CrE;;;;;;;;;;;;;;;;;AAoB9D,WACI,YAMD,SAASH,GAAoCmP,EAAiBxE,EAAmBoC,EAAkBoF,GAC/F,GAAI/C,GAAY,WACZ,MAAO3B,MAgHX,OA7GA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAE9F,IASI1B,GATA6G,EAA2B,SAAUnQ,GACjC,MAAOA,GAAQ,KAAO,MAE1BoQ,EAAwB,SAAUpQ,GAC9B,MAAOA,GAAQ,MAEnBwO,EAAgBlG,EAAkBa,2BAA2B,gBAAiBiH,GAC9E3B,EAAgBnG,EAAkBa,2BAA2B,gBAAiBiH,GAC9EC,EAAqB/H,EAAkBa,2BAA2B,sBAAuBgH,EAG7F7G,GAAkB,WACd,GACIqF,GACAE,EACAyB,EAHA3C,IAqEJ,OA/DAgB,GAAa,WACT,GAAIH,EAAc7K,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWoJ,EAAc7K,KAAK6K,EAAc7K,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DoK,EAAa,WACT,GAAIJ,EAAc9K,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWqJ,EAAc9K,KAAK8K,EAAc9K,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5D6L,EAAkB,WACd,GAAID,EAAmB1M,KAAKc,OAAS,EAAG,CACpC,GAAI8L,GAAQ,EACR3L,EAAYyL,EAAmB1M,KAAK0M,EAAmB1M,KAAKc,OAAS,GAAGM,OAAOsL,EAAmB1M,KAAK0M,EAAmB1M,KAAKc,OAAS,GAAGM,OAAON,OAAS,GAAGmH,CAMlK,OALA3J,SAAQ0D,QAAQ0K,EAAmB1M,KAAM,SAAUyB,GAC3CA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,OACjFsE,GAAgBnL,EAASL,OAAOK,EAASL,OAAON,OAAS,GAAGoH,MAIhED,EAAGhH,EACHiH,EAAG0E,OAKXtO,QAAQuC,UAAUmK,IAClB1M,QAAQuC,UAAU8L,IAElB3C,EAAarM,MACTsD,UAAW+J,EAAU/C,EACrBK,IAAK,YACLjM,MAAO2O,EAAU9C,EAAIyE,EAAezE,IAKxC5J,QAAQuC,UAAUqK,IAElBlB,EAAarM,MACTsD,UAAWiK,EAAUjD,EACrBK,IAAK,gBACLjM,MAAO6O,EAAUhD,IAIrB5J,QAAQuC,UAAU8L,IAClBrO,QAAQuC,UAAUmK,IAClBhB,EAAarM,MACTsD,UAAW0L,EAAe1E,EAC1BK,IAAK,iBACLjM,MAAOsQ,EAAezE,IAIvB8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,iBAChClB,EAAkBkB,cAAc,iBAChClB,EAAkBkB,cAAc,uBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAxFXpP,EAAoCkE,SAAW,kBAAmB,oBAAqB,mBAAoB,4BA2F3GI,QACKC,OAAO,aACPC,QAAQ,sCAAuCxE;;;;;;;;;;;;;;;;;AAsBvD,WACI,YAMD,SAASc,GAAuCqO,EAAiBxE,EAAmBoC,EAAkBoF,GAClG,GAAI/C,GAAY,WACZ,MAAO3B,MAuFX,OApFA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IASI1B,GATAvJ,EAAqB,SAAUC,GAC3B,MAAOA,GAAQ,KAAO,MAE1BwQ,EAA4B,SAAUxQ,GAClC,MAAOA,GAAQ,MAEnByQ,EAAcnI,EAAkBa,2BAA2B,sBAAuBpJ,GAClF2Q,EAAcpI,EAAkBa,2BAA2B,sBAAuBpJ,GAClF4Q,EAAgBrI,EAAkBa,2BAA2B,cAAeqH,EAIhFlH,GAAkB,WACd,GACIsH,GADAjD,IA0CJ,OAvCAiD,GAAoB,WAChB,GAAID,EAAchN,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWuL,EAAchN,KAAKgN,EAAchN,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DxC,QAAQ0D,QAAQ8K,EAAY9M,KAAM,SAAUyB,GAC1C,GAAIA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,KAAM,CACrF,GAAI+B,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,GAC3E,IAAI6D,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,GAAM,CACzG,GAAI6R,GAAgB3K,EAAE4C,KAAK4H,EAAY/M,KAAM,SAASqF,GAClD,MAAOA,GAAGiD,MAAQ7G,EAAS6G,KAG/B,IAAIhK,QAAQuC,UAAUqM,GAAgB,CAClC,GAAIC,GAAiBD,EAAc9L,OAAO8L,EAAc9L,OAAON,OAAS,EAEpEqM,GAAejF,GAAK+E,EAAiB/E,EACrC8B,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EACLgB,MAAOgO,EAAUnC,EAAI+E,EAAiB/E,IAG1C8B,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EACLgB,MAAOgO,EAAUnC,EAAIiF,EAAejF,SAQrD8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,uBAChClB,EAAkBkB,cAAc,uBAChClB,EAAkBkB,cAAc,eAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA9DXtO,EAAuCoD,SAAW,kBAAmB,oBAAqB,mBAAoB,4BAiE9GI,QACKC,OAAO,aACPC,QAAQ,yCAA0C1D;;;;;;;;;;;;;;;;;AAoB1D,WACI,YAMD,SAASf,GAA2CoS,EAA0BhD,EAAiBxE,EAAmBoC,GAC9G,GAAIqC,GAAY,WACZ,MAAO3B,MA0DX,OAvDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IAII1B,GAJAvJ,EAAqB,SAAUC,GAC3B,MAAOA,GAAQ,KAAO,MAE1ByQ,EAAcnI,EAAkBa,2BAA2B,sBAAuBpJ,EAKtFuJ,GAAkB,WACd,GACI0E,GACAhP,EAFA2O,IAmBJ,OAfA1L,SAAQ0D,QAAQ8K,EAAY9M,KAAM,SAAUyB,GACpCA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,OACjF+B,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,IACnE6D,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,IACnG2O,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EACLgB,MAAOgO,EAAUnC,OAO1B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,uBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAhCXrP,EAA2CmE,SAAW,2BAA4B,kBAAmB,oBAAqB,oBAmC1HI,QACKC,OAAO,aACPC,QAAQ,6CAA8CzE;;;;;;;;;;;;;;;;;AAoB9D,WACI,YAMD,SAASK,GAAoC+O,EAAiBxE,EAAmBoC,EAAkBoF,GAC/F,GAAI/C,GAAY,WACZ,MAAO3B,MA6FX,OA1FA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MAEpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IASI1B,GATAvJ,EAAqB,SAAUC,GAC3B,MAAOA,GAAQ,KAAO,MAE1BwQ,EAA4B,SAAUxQ,GAClC,MAAOA,GAAQ,MAEnByQ,EAAcnI,EAAkBa,2BAA2B,sBAAuBpJ,GAClF2Q,EAAcpI,EAAkBa,2BAA2B,sBAAuBpJ,GAClF4Q,EAAgBrI,EAAkBa,2BAA2B,cAAeqH,EAIhFlH,GAAkB,WACd,GACIsH,GADAjD,IAgDJ,OA7CAiD,GAAoB,WAChB,GAAID,EAAchN,KAAKc,OAAS,EAAG,CAC/B,GAAIW,GAAWuL,EAAchN,KAAKgN,EAAchN,KAAKc,OAAS,EAC9D,IAAIW,EAASL,OAAON,OAAS,EACzB,MAAOW,GAASL,OAAOK,EAASL,OAAON,OAAS,OAK5DxC,QAAQ0D,QAAQ8K,EAAY9M,KAAM,SAAUyB,GAC1C,GAAIA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,KAAM,CACrF,GAAI+B,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,GACvE6D,GAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,IACnG2O,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EAAO,QACZgB,MAAOgO,EAAUnC,OAMjC5J,QAAQ0D,QAAQ+K,EAAY/M,KAAM,SAAUyB,GACxC,GAAIA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,KAAM,CACvF,GAAI+B,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,GACvE6D,GAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,KAC/FgP,EAAUnC,GAAK+E,EAAiB/E,EAChC8B,EAAarM,MACTsD,UAAWgM,EAAiBhF,EAC5BK,IAAKjN,EAAO,oBACZgB,MAAO4Q,EAAiB/E,IAG5B8B,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EAAO,SACZgB,MAAOgO,EAAUnC,QAO9B8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,uBAChClB,EAAkBkB,cAAc,uBAChClB,EAAkBkB,cAAc,eAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAlEXhP,EAAoC8D,SAAW,kBAAmB,oBAAqB,mBAAoB,4BAqE3GI,QACKC,OAAO,aACPC,QAAQ,sCAAuCpE;;;;;;;;;;;;;;;;;AAoBvD,WACI,YAMD,SAASP,GAA8BsS,EAA0BhD,EAAiBxE,EAAmBoC,GACjG,GAAIqC,GAAY,WACZ,MAAO3B,MAuDX,OApDA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MACpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IACI1B,GADAyH,EAAiBzI,EAAkBY,4BAA4B,uBAGnEI,GAAkB,WACd,GACI0E,GACAhP,EAFA2O,IAsBJ,OAlBKoD,GAAepN,KAAKc,OAAS,GAC9BxC,QAAQ0D,QAAQoL,EAAepN,KAAM,SAAUyB,GAEvCA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,OACjF+B,EAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,IAEnE6D,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,IACnG2O,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EACLgB,MAAOgO,EAAUnC,EAAI,IAAO,IAAO,SAOhD8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,wBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EA3BXvP,EAA8BqE,SAAW,2BAA4B,kBAAmB,oBAAqB,oBA8B7GI,QACKC,OAAO,aACPC,QAAQ,gCAAiC3E;;;;;;;;;;;;;;;;;AAuBjD,WACI,YAMD,SAASC,GAAiCqS,EAA0BhD,EAAiBxE,EAAmBoC,GACpG,GAAIqC,GAAY,WACZ,MAAO3B,MAgGX,OA7FA2B,GAAUzB,UAAY0B,OAAOC,OAAOH,EAAgBxB,WAEpDyB,EAAUzB,UAAU4B,KAAO,WACvBJ,EAAgBxB,UAAU4B,KAAKC,KAAK/B,MACpCA,KAAKpM,KAAOoM,KAAK/L,iBAAmB+L,KAAK/L,iBAAiBL,KAAO,UAAY0L,EAAiBM,SAG9F,IAII1B,GAJAyH,EAAiBzI,EAAkBY,4BAA4B,wBAC/D8H,EAAkB1I,EAAkBM,kBAAkB,0BACtDqI,EAAmB3I,EAAkBM,kBAAkB,2BACvD8G,EAAapH,EAAkBM,kBAAkB,YAGrDU,GAAkB,WACd,GAAIqE,KA4DJ,OA1DKoD,GAAepN,KAAKc,OAAS,GAC9BxC,QAAQ0D,QAAQoL,EAAepN,KAAM,SAAUyB,GAE3C,GAAIA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,KAAM,CACvF,GAAI+B,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,GAEvE6D,GAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,IACnG2O,EAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EACLgB,MAAOgO,EAAUnC,EAAI,IAAO,IAAO,SAOlDoF,EAAiBtN,KAAKc,OAAS,GAChCxC,QAAQ0D,QAAQsL,EAAiBtN,KAAM,SAAUyB,GAE7C,GAAIA,EAASL,OAAON,OAAS,GAAKqL,EAAyBC,iBAAiB3K,EAAS6G,KAAM,CACvF,GAAI+B,GAAY5I,EAASL,OAAOK,EAASL,OAAON,OAAS,GACrDzF,EAAO8Q,EAAyBE,aAAa5K,EAAS6G,MAAQ7G,EAAS6G,GAE3E,IAAI6D,EAAyBG,mBAAmBjR,IAAS8Q,EAAyBI,qBAAqBlR,GAEnG,GAAIgP,EAAUnC,EAAI,EAAG,CACjB,GAAIqF,GAAoBhL,EAAE4C,KAAKkI,EAAgBrN,KAAM,SAASqF,GAC1D,MAAOA,GAAGiD,MAAQ7G,EAAS6G,KAG/B,IAAIhK,QAAQuC,UAAU0M,GAAoB,CACtC,GAAIC,GAAiBD,EAAkBnM,OAAOmM,EAAkBnM,OAAON,OAAS,EAChFkJ,GAAarM,MACTsD,UAAWoJ,EAAUpC,EACrBK,IAAKjN,EAAO,WACZgB,MAAOmR,EAAetF,EAAImC,EAAUnC,SAI5C,IAAI6D,EAAW/L,KAAKc,OAAS,EAAG,CAC5B,GAAI2M,GAAe1B,EAAW/L,KAAK+L,EAAW/L,KAAKc,OAAS,EAC5D,IAAI2M,EAAarM,OAAON,OAAS,EAAG,CAChC,GAAI4M,GAAYD,EAAarM,OAAOqM,EAAarM,OAAON,OAAS,EACjEkJ,GAAarM,MACTsD,UAAWyM,EAAUzF,EACrBK,IAAKjN,EAAO,cACZgB,MAAOqR,EAAUxF,SAU1C8B,GAIXvC,KAAKvC,OAASP,EAAkBe,yBAAyB+B,KAAKpM,KAAMsK,GAEpE8B,KAAKgC,YAAYhC,KAAKvC,OAAOlF,OAGjCoJ,EAAUzB,UAAU+B,QAAU,WAE1B/E,EAAkBsB,qBAAqBwB,KAAKpM,MAG5CsJ,EAAkBkB,cAAc,wBAEhCsD,EAAgBxB,UAAU+B,QAAQF,KAAK/B,OAGpC2B,EAnEXtP,EAAiCoE,SAAW,2BAA4B,kBAAmB,oBAAqB,oBAsEhHI,QACKC,OAAO,aACPC,QAAQ,mCAAoC1E;;;;;;;;;;;;;;;;;AAuBpD,WACI,YAMA,SAASiN,GAAiBnI,EAAYF,EAAOiP,EAAWhP,EAAMiP,EAAWpH,EAAQzL,EAAQ0D,EAAckG,EAAmBwH,GAQvH,QAAS0B,KACDC,GACAH,EAAUI,OAAOD,GAQzB,QAASE,GAAsBrH,GACtBA,EAIDsH,EAAa,GAHbzH,EAAOI,MAAM,yCAA0C,SACvDqH,GAA0B,GAI1BA,EAAa,IACbJ,EAAeC,GACfG,EAAa,EACbrP,EAAWK,WAAWgB,QAAU,KAChCrB,EAAWsP,MAAMC,kBAAmB,EACpC3H,EAAOI,MAAM,uGAAwG,UAQ7H,QAASwH,GAAcC,GACnB,GAAIC,MACAC,KACAtO,EAAUrB,EAAWK,WAAWgB,QAChCmF,EAAgBT,EAAkB2B,qBAElCrG,IAAWA,EAAU,GAAKmF,EAActE,OAAS,IACjDxC,QAAQ0D,QAAQoD,EAAe,SAAU/I,GACjCiC,QAAQuC,UAAUxE,EAAMqL,OAAwB,OAAfrL,EAAMqL,KACvC6G,EAAQ5Q,KAAKtB,EAAMqL,MAEnB4G,EAAU3Q,KAAKtB,EAAMhB,QAI7BoD,EAAawE,WAAWhD,EAASqO,EAAWC,GACvCzO,KAAK,SAAUoD,GACZ,GAAI7H,GACAmT,EACA3G,EACAC,CAEJ,IAAI5E,EAAQ9B,OAAON,SAAWsE,EAActE,OAAQ,CAChD,GAAI2N,EAEJnQ,SAAQ0D,QAAQoD,EAAe,SAAUF,GACrCuJ,EAAelM,EAAE4C,KAAKjC,EAAQ9B,OAAQ,SAAUiE,GAC5C,MAAOA,GAAGhK,OAAS6J,EAAO7J,OAE1BiD,QAAQ0C,YAAYyN,IACpBvJ,EAAOiB,cAKnB7H,QAAQ0D,QAAQkB,EAAQ9B,OAAQ,SAAU/E,GACtChB,EAAOgB,EAAMhB,KAEbmT,EAAiBjM,EAAE4C,KAAKC,EAAe,SAAUC,GAC7C,MAAOA,GAAGhK,OAASA,IAGpBgB,EAAMkF,UAAUT,SAAW0N,EAAexO,KAAKc,QAC9C0N,EAAejG,uBAAuBlM,EAAMkF,WAG5CjD,QAAQuC,UAAU2N,IAAsC,OAAnBA,IACjClQ,QAAQoQ,SAASF,EAAe9G,QAChC8G,EAAe9G,KAAOrL,EAAMqL,MAGhCpJ,QAAQ0D,QAAQ3F,EAAMkF,UAAW,SAAUE,GACvCoG,EAAMvJ,QAAQ0C,YAAYS,EAASA,UAAY,EAAIA,EAASA,SAC5DqG,EAAQ5E,EAAQ1B,OAAOnG,GAAMmG,OAAOqG,GAEpC2G,EAAe5G,UAAU1E,EAAQjC,UAAW4G,EAAKC,EAAOrG,EAASpF,cAI9EyD,KACC,WACIuO,GAAS,GACTzP,EAAW+P,WAAW,kBAE1B,SAAU5O,GACiB,MAApBA,EAAS6O,QAAsD,KAApC7O,EAASC,KAAK+F,QAAQ,WAChD8I,IAEJR,GAAS,MAS7B,QAASS,KACL,GAAIlJ,GAAiBjB,EAAkB0B,sBACnCT,GAAe9E,OAAS,IACxBxC,QAAQ0D,QAAQ4D,EAAgB,SAAUV,GACtCA,EAAO0D,iBAEXhK,EAAW+P,WAAW,yBAQ9B,QAASI,KACLX,EAAcJ,GACdc,IAOJ,QAASE,KACLnB,EAAeC,GAEXlP,EAAWK,WAAWE,OAClBP,EAAWK,WAAWgB,SACtBrB,EAAWK,WAAWgB,QAAU,EAChC6N,EAAkBH,EAAUoB,EAA6D,IAA3C5G,SAASvJ,EAAWK,WAAWoJ,WAE7E7B,EAAOI,MAAM,uFAAwF,UASjH,QAASqI,GAAe9P,GACpB,GAAI+P,GAAY,IACZ/P,KACA+P,EAAY/P,EAAKgQ,MAAM,iBACL,OAAdD,GACAtQ,EAAWK,WAAWE,KAAO+P,EAAU,GACvCtQ,EAAWK,WAAWG,KAAO8P,EAAU,IAEvCtQ,EAAWK,WAAWE,KAAOA,GASzC,QAAS0P,KACLjQ,EAAWsP,MAAMkB,iBAAkB,EACnCxQ,EAAWsP,MAAMC,kBAAmB,EAEpC1P,EAAa0B,mBAAmBvB,EAAWK,WAAWmB,SAAU,KAC3DN,KAAK,SAAUE,GACZpB,EAAWsP,MAAMkB,iBAAkB,EACnCxQ,EAAWsP,MAAMC,kBAAmB,EACpCvP,EAAWK,WAAWgB,QAAUD,EAChCgP,IACAvQ,EAAawE,WAAWjD,GAAO,kBAC1BF,KAAK,SAAUE,GACZpB,EAAWK,WAAWqB,SAAWN,EAAKoB,OAAO,GAAGG,UAAU,GAAGlF,OAC9D,WACCuC,EAAWK,WAAWqB,SAAW,0BACjC3B,EAAKiI,MAAM,+BAEpB,WACCJ,EAAOI,MAAM,gEAAiE,SAC9EhI,EAAWsP,MAAMkB,iBAAkB,EACnCxQ,EAAWsP,MAAMC,kBAAmB,IAQhD,QAASkB,GAAWlQ,GAChByO,EAAU0B,OAAO,OAAQnQ,GACzByO,EAAU0B,OAAO,WAAY1Q,EAAWK,WAAWmB,UAEnDxB,EAAWK,WAAWgB,QAAU,GAChCrB,EAAWK,WAAWqB,SAAW,KACjC1B,EAAWK,WAAWG,KAAOrE,EAAOqE,KAEpCuF,EAAkBuB,kBAClBvB,EAAkByB,yBAElB6I,EAAe9P,GACf0P,IAOJ,QAASU,KACD3Q,EAAWK,YACNL,EAAWK,WAAWoJ,WACvBzJ,EAAWK,WAAWoJ,SAAWtN,EAAOsN,UAEvCzJ,EAAWK,WAAWmJ,SACvBxJ,EAAWK,WAAWmJ,OAASrN,EAAOqN,QAErCxJ,EAAWK,WAAWC,WACvBN,EAAWK,WAAWC,SAAWnE,EAAOmE,UAEvCN,EAAWK,WAAWE,OACvBP,EAAWK,WAAWE,KAAO,IAE5BP,EAAWK,WAAWmB,WACvBxB,EAAWK,WAAWmB,SAAWrF,EAAOqF,UAEvCxB,EAAWK,WAAWG,OACvBR,EAAWK,WAAWG,KAAOrE,EAAOqE,OAEnCR,EAAWK,WAAWgB,SACvBrB,EAAWK,WAAWgB,QAAU,EAChC4O,IAEAG,KAGJpQ,EAAWK,YACPC,SAAUnE,EAAOmE,SACjBC,KAAM,GACNiB,SAAUrF,EAAOqF,SACjBhB,KAAMrE,EAAOqE,KACba,QAAS,GACTK,SAAU,KACV8H,OAAQrN,EAAOqN,OACfC,SAAUtN,EAAOsN,SACjBmH,gBAAiB,GACjBC,iBACAC,kBAAmB,IAI3B9Q,EAAWsP,OACPC,kBAAkB,EAClBiB,iBAAiB,EACjBO,mBAAoB5U,EAAO6U,eAC3BhS,uBAAwB7C,EAAO6C,uBAC/BiS,qBAAsB9U,EAAO8U,qBAC7BC,uBAAwB/U,EAAO+U,uBAC/BC,uBAAwBhV,EAAOgV,uBAC/BC,wBAAyBjV,EAAOiV,wBAChCC,4BAA4B,EAC5BC,oCAAqCnV,EAAOmV,qCAG5CnV,EAAO6C,wBACPuO,EAAyBoD,aAQjC,QAASlI,KACL,MAAO8I,MAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBzQ,SAAS,IAAI0Q,UAAU,GA3R5E,GACIxC,GADAG,EAAa,CA8RjB,QACIJ,eAAgBA,EAChBmB,eAAgBA,EAChBK,WAAYA,EACZR,cAAeA,EACfxH,QAASA,EACTkI,WAAYA,GArQpBxI,EAAiB7I,SAAW,aAAc,QAAS,YAAa,OAAQ,YAAa,SAAU,SAAU,eAAgB,oBAAqB,4BAyQ9II,QACKC,OAAO,aACJ,QACA,aACA,sBAEHC,QAAQ,mBAAoBuI;;;;;;;;;;;;;;;;;AAwBrC,WACI,YAEA,SAASwJ,GAAyBzM,EAAQC,EAAmB0G,GACzD3G,EAAO2G,OAASA,EAChB3G,EAAOnB,OAASrE,QAAQqF,UAAWG,EAAOnB,OAAQ8H,GAElD3G,EAAOE,GAAK,WACVD,EAAkBE,MAAMH,EAAOnB,SAGjCmB,EAAOiK,OAAS,WACdhK,EAAkBG,QAAQ,WAwBhCqM,EAAyBrS,SAAW,SAAU,oBAAqB,UApBnEI,QACKC,OAAO,2BACPzB,WAAW,iCAAkCyT;;;;;;;;;;;;;;;;;AAuBrD,WACI,YAKA,SAASpE,GAAyBzN,EAAOE,EAAYC,EAAI8O,EAAW6C,EAAc5C,EAAW6C,EAAW9R,EAAM5D,EAAQ4J,GAiBnH,QAAS0H,GAAa/D,GAClB,MAAOoI,GAAMC,EAAQrI,IAOzB,QAASqI,GAAQvJ,GAEb,MAAW,QAAPA,GACO,GAEkB,KAAzBA,EAAGrB,QAAQ,WACXqB,EAAKA,EAAGwJ,MAAM,KAAK,GAEc,KAA1BxJ,EAAGrB,QAAQ,cAClBqB,EAAKA,EAAGwJ,MAAM,KAAK,GAAGA,MAAM,KAAK,IAE9BxJ,GAOX,QAASyJ,KACLH,KAOJ,QAAStE,GAAiBhF,GACtB,MAAQ9I,SAAQuC,UAAU6P,EAAMC,EAAQvJ,MAAgC,KAAvBsJ,EAAMC,EAAQvJ,IAOnE,QAASgH,KACL0C,IACAlS,EAAWK,WAAWwQ,cAAgBsB,IAGlCC,EAC2E,KAAxEpS,EAAWK,WAAWwQ,cAAc1J,QAAQyK,EAAaS,aACxDrS,EAAWK,WAAWyQ,kBAAoB,IAG1CpR,QAAQuC,UAAU2P,EAAaS,WAC6C,KAAxErS,EAAWK,WAAWwQ,cAAc1J,QAAQyK,EAAaS,aACzDrS,EAAWK,WAAWyQ,kBAAoBc,EAAaS,UACvDrS,EAAWsP,MAAM+B,4BAA6B,EAC9Ce,GAAiC,GAGrCA,GAAiC,EAa7C,QAASzB,KACL2B,EAAmBvM,EAAkBM,kBAAkB,qBACvDkM,EAAiBxM,EAAkBM,kBAAkB,mBAErDmM,EAAwBxS,EAAWyS,IAAI,gBAAiBjD,GAQ5D,QAASkD,GAAUC,GACf,GAAIC,EACJ,OAAoC,mBAA1BC,IACD1W,EAAO2W,cACRF,EAAejP,EAAE4C,KAAKgM,EAAenR,KAAM,SAAUqF,GACjD,MAAOA,GAAGiD,MAAQiJ,KAGXC,EAAapQ,OAAOoQ,EAAapQ,OAAON,OAAS,GAAGoH,EAG5DqJ,EAAYjB,UAAU,EAAE,KAE/BkB,EAAejP,EAAE4C,KAAKgM,EAAenR,KAAM,SAAUqF,GACjD,MAAOA,GAAGiD,MAAQiJ,IAEfE,EAAsB7O,QAAQ2O,EAAaC,IAQ1D,QAASV,KAELJ,EAAQQ,EAAiBlR,KAAK2R,OAAO,SAASC,EAAKC,GAE/C,MADAD,GAAIC,EAAKvJ,KAAOgJ,EAAUO,EAAKvJ,KACxBsJ,OAQf,QAASb,KACL,MAAOG,GAAiBlR,KAAK2R,OAAO,SAASC,EAAKC,GAC9C,GAAIC,GAAWR,EAAUO,EAAKvJ,IAI9B,OAHIhK,SAAQuC,UAAUiR,IAClBF,EAAIjU,KAAKmU,GAENF,OAQf,QAASrF,GAAqBlR,GAC1B,MAAkD,KAA1CuD,EAAWK,WAAWuQ,iBAAiF,KAAvDnU,EAAK0K,QAAQnH,EAAWK,WAAWuQ,iBAO/F,QAASlD,GAAmBjR,GACxB,MAAoD,KAA5CuD,EAAWK,WAAWyQ,mBAAsF,KAA1DrU,EAAK0K,QAAQnH,EAAWK,WAAWyQ,mBAOjG,QAASqC,KACLnE,EAAU0B,OAAO,YAAa1Q,EAAWK,WAAWyQ,mBACJ,KAA5C9Q,EAAWK,WAAWyQ,kBACtB9Q,EAAWsP,MAAM+B,4BAA6B,EAE9CrR,EAAWsP,MAAM+B,4BAA6B,EAQtD,QAAS+B,KACLpE,EAAU0B,OAAO,kBAAmB1Q,EAAWK,WAAWuQ,iBAnL9D,GACIiC,GADAT,GAAiC,CAIrC,KACIS,EAAwBhB,EAAU/J,IAAI,yBACxC,MAAMuL,GACJtT,EAAKuT,MAAM,gDAOf,GAsEIhB,GACAC,EACAC,EAxEAV,IAwKJ,QACIrE,aAAcA,EACd0E,iBAAkBA,EAClBD,mBAAoBA,EACpBD,kBAAmBA,EACnBtE,qBAAsBA,EACtBH,iBAAkBA,EAClBE,mBAAoBA,EACpByF,gBAAiBA,EACjBC,sBAAuBA,EACvBzC,WAAYA,GAhKpBpD,EAAyBjO,SAAW,QAAS,aAAc,KAAM,YAAa,eAAgB,YAAa,YAAa,OAAQ,SAAU,qBAoK1II,QACKC,OAAO,qBACJ,eAEHC,QAAQ,2BAA4B2N;;;;;;;;;;;;;;;;;AAwB5C,WACI,YAMD,SAASgG,KAEL,QAASC,KACL,MAAO,UAAUC,GACb,MAAOC,IAAGC,KAAKC,OAAO,MAAM,GAAIC,MAAKJ,KAI7C,QAASK,KACL,MAAO,UAAUL,GACb,MAAOC,IAAGE,OAAO,QAAQH,IAIjC,QAASM,KACL,MAAO,UAAUN,GACb,MAAOC,IAAGE,OAAO,KAAKH,IAI9B,QAASO,KACL,MAAO,UAAUP,GACb,MAAOC,IAAGE,OAAO,KAAKH,IAI9B,QAASQ,KACL,MAAO,UAAUR,GACb,MAAOA,GAAEpK,GAIjB,QAAS6K,KACL,MAAO,UAAUT,GACb,MAAOA,GAAEnK,GAIjB,QAAS6K,KACL,MAAO,SACH5C,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WAAqBzQ,SAAS,IAAI0Q,UAAU,GAGzE,OACI8B,gBAAiBA,EACjBM,gBAAiBA,EACjBC,uBAAwBA,EACxBC,0BAA2BA,EAC3BC,UAAWA,EACXC,UAAWA,EACXC,MAAOA,GAIfzU,QACKC,OAAO,SACPC,QAAQ,YAAa2T;;;;;;;;;;;;;;;;;AAwB9Ba,GAAGC,OAAOC,QAAU,WAEhB,YA4PA,SAASC,KACL,IAAKD,EAAS,CAEV,GAAIjC,GAAYmC,SAASC,IAGzBH,GAAUZ,GAAGgB,OAAOrC,GAAWsC,OAAO,OACjCC,KAAK,QAAS,cAAgBC,EAAUA,EAAU,eAClDD,KAAK,KAAMpM,GAChB8L,EAAQQ,MAAM,MAAO,GAAGA,MAAM,OAAQ,GACtCR,EAAQQ,MAAM,UAAW,GACzBR,EAAQQ,MAAM,WAAY,SAC1BR,EAAQS,UAAU,sBAAsBC,QAAQC,GAAsB,GACtEX,EAAQU,QAAQC,GAAsB,IAK9C,QAASC,KACL,MAAKC,IAGAC,EAAiBhU,IAItBgT,GAAGiB,IAAIC,MAAM,WACTf,GAIA,IAAIgB,GAAaC,EAAiBpU,EAC9BmU,KACAjB,EAAQmB,OAAOC,UAAYH,GAG/BI,MAGGT,GApBP,OA7QJ,GAAI1M,GAAK,aAAe+I,KAAKC,MAAsB,IAAhBD,KAAKE,UACpCrQ,EAAO,KACPwU,EAAU,IACVC,EAAW,GACXC,EAAe,EAEfjB,EAAU,KACVkB,EAAiB,KACjBC,GAAS,EACTC,EAAY,IACZ3B,EAAU,KACV4B,GAAgBC,KAAM,KAAMC,IAAK,MACjCjB,GAAU,EACVkB,EAAW,IACXC,GAAgB,EAChBrB,EAAuB,yBACvBsB,EAAW,WACX,OACIJ,KAAMzC,GAAG8C,MAAMC,QACfL,IAAK1C,GAAG8C,MAAME,UAKlBC,EAAiB,SAAUlD,GAC3B,MAAOA,IAIPmD,EAAkB,SAAUnD,GAC5B,MAAOA,IAGPoD,EAAe,SAAUpD,GACzB,MAAOA,IAKP+B,EAAmB,SAAU/B,GAC7B,GAAU,OAANA,EACA,MAAO,EAGX,IAAIqD,GAAQpD,GAAGgB,OAAOF,SAASuC,cAAc,SAC7C,IAAIT,EAAe,CACf,GAAIU,GAAaF,EAAM/B,UAAU,SAC5B3T,MAAMqS,IACNwD,QAAQtC,OAAO,QAEpBqC,GAAWrC,OAAO,MACbA,OAAO,MACPC,KAAK,UAAW,GAChBD,OAAO,UACPK,QAAQ,WAAW,GACnBkC,KAAKN,EAAgBnD,EAAEhW,QAGhC,GAAI0Z,GAAaL,EAAM/B,UAAU,SAC5B3T,MAAMqS,IACNwD,QAAQtC,OAAO,SAEhByC,EAAYD,EAAWpC,UAAU,MAChC3T,KAAK,SAAUiW,GACZ,MAAOA,GAAEC,SAEZL,QACAtC,OAAO,MACPK,QAAQ,YAAa,SAAUqC,GAC5B,MAAOA,GAAEE,WAGjBH,GAAUzC,OAAO,MACZK,QAAQ,sBAAsB,GAC9BL,OAAO,OACPG,MAAM,mBAAoB,SAAUuC,GACjC,MAAOA,GAAEG,QAGjBJ,EAAUzC,OAAO,MACZK,QAAQ,OAAO,GACfA,QAAQ,QAAS,SAAUqC,GACxB,QAASA,EAAErJ,QAEdkJ,KAAK,SAAUG,EAAGI,GACf,MAAOZ,GAAaQ,EAAE3N,IAAK+N,KAGnCL,EAAUzC,OAAO,MACZK,QAAQ,SAAS,GACjBkC,KAAK,SAAUG,EAAGI,GACf,MAAOd,GAAeU,EAAE5Z,MAAOga,KAGvCL,EAAUrC,UAAU,MAAM2C,KAAK,SAAUL,GACrC,GAAIA,EAAEE,UAAW,CACb,GAAII,GAAejE,GAAGkE,MAAMC,SAASC,QAAQ,EAAG,IAAIC,OAAO,OAAQV,EAAEG,QACjEQ,EAAU,EACdtE,IAAGgB,OAAO7L,MACLiM,MAAM,sBAAuB6C,EAAaK,IAC1ClD,MAAM,mBAAoB6C,EAAaK,MAKpD,IAAId,GAAOJ,EAAMrB,OAAOwC,SAIxB,OAHiBC,UAAbzE,EAAE0E,SACFjB,GAAQ,uBAAyBzD,EAAE0E,OAAS,UAEzCjB,GAIP9B,EAAmB,SAAU3B,GAC7B,GAAIA,GAAKA,EAAE6D,OAAQ,CACf,GAAI7D,EAAE6D,iBAAkBc,OACpB,QAAS3E,EAAE6D,OAAOpV,MAGtB,IAAIuR,EAAE6D,iBAAkB7M,QAEpB,MADAgJ,GAAE6D,QAAU7D,EAAE6D,SACP,EAGf,OAAO,GAKPe,EAAoB,SAAUC,GAC9B,GAIInC,GAAMC,EAAKmC,EAJXtb,EAASqX,EAAQmB,OAAO+C,aACxBxb,EAAQsX,EAAQmB,OAAOgD,YACvBC,EAAclE,SAASmE,gBAAgBD,YACvCE,EAAepE,SAASmE,gBAAgBC,YAI5C,QAAQhD,GACJ,IAAK,IACDO,GAAQnZ,EAAQ6Y,EAChBO,IAAQnZ,EAAS,GACbqb,EAAInC,KAAOA,EAAO,IAClBA,EAAON,IAEN0C,EAAMD,EAAIlC,IAAMA,GAAO,IACxBA,GAAOmC,IAENA,EAAMD,EAAIlC,IAAMA,EAAMnZ,GAAU2b,IACjCxC,GAAOmC,EAAMK,EAEjB,MACJ,KAAK,IACDzC,EAAON,EACPO,IAAQnZ,EAAS,GACbqb,EAAInC,KAAOA,EAAOnZ,EAAQ0b,IAC1BvC,GAAQnZ,EAAQ6Y,IAEf0C,EAAMD,EAAIlC,IAAMA,GAAO,IACxBA,GAAOmC,IAENA,EAAMD,EAAIlC,IAAMA,EAAMnZ,GAAU2b,IACjCxC,GAAOmC,EAAMK,EAEjB,MACJ,KAAK,IACDzC,IAASnZ,EAAQ,GAAK,EACtBoZ,EAAMP,EACFyC,EAAIlC,IAAMA,EAAMnZ,EAAS2b,IACzBxC,GAAOnZ,EAAS4Y,IAEf0C,EAAMD,EAAInC,KAAOA,GAAQ,IAC1BA,GAAQoC,IAEPA,EAAMD,EAAInC,KAAOA,EAAOnZ,GAAS0b,IAClCvC,GAAQoC,EAAMG,EAElB,MACJ,KAAK,IACDvC,IAASnZ,EAAQ,GACjBoZ,GAAOnZ,EAAS4Y,EACZyC,EAAIlC,IAAMA,EAAM,IAChBA,EAAMP,IAEL0C,EAAMD,EAAInC,KAAOA,GAAQ,IAC1BA,GAAQoC,IAEPA,EAAMD,EAAInC,KAAOA,EAAOnZ,GAAS0b,IAClCvC,GAAQoC,EAAMG,EAElB,MACJ,KAAK,SACDvC,IAASnZ,EAAQ,GACjBoZ,IAAQnZ,EAAS,EACjB,MACJ,SACIkZ,EAAO,EACPC,EAAM,EAId,OAAQD,KAAQA,EAAMC,IAAOA,IAM7BT,EAAkB,WAClBvB,GAAGiB,IAAIwD,KAAK,WACR,GAAIP,GAAM/B,IACNuC,EAAgBT,EAAkBC,GAClCnC,EAAOmC,EAAInC,KAAO2C,EAAc3C,KAChCC,EAAMkC,EAAIlC,IAAM0C,EAAc1C,GAGlC,IAAIJ,EACA1B,EACKyE,YACAC,aACAC,MAAMhD,GACNI,SAAS,GACTvB,MAAM,UAAW,OACnB,CAEH,GAAIoE,GAAe,aAAehD,EAAaC,KAAO,OAASD,EAAaE,IAAM,MAC9E+C,EAAe,aAAehD,EAAO,OAASC,EAAM,MACpDgD,EAAwB1F,GAAG2F,kBAAkBH,EAAcC,GAC3DG,EAAWhF,EAAQQ,MAAM,WAAa,EAE1CR,GACKyE,YACAC,aACA3C,SAASiD,EAAW,EAAIjD,GAExBkD,WAAW,YAAa,WACrB,MAAOH,IACR,aAEFG,WAAW,oBAAqB,WAC7B,MAAOH,KAEVtE,MAAM,gBAAiBqE,GACvBrE,MAAM,UAAW,GAG1BoB,EAAaC,KAAOA,EACpBD,EAAaE,IAAMA,IAiM3B,OAlJAlB,GAAUD,qBAAuBA,EACjCC,EAAUsE,QAAUpF,GAAGqF,MAAMC,YAAYC,KAAKzE,GAE9CA,EAAU0E,SAAWnP,OAAOC,WAExB2L,UACIvO,IAAK,WACD,MAAOuO,IACRwD,IAAK,SAAUlW,GACd0S,EAAW1S,IAGnBiS,SACI9N,IAAK,WACD,MAAO8N,IACRiE,IAAK,SAAUlW,GACdiS,EAAUjS,IAGlBkS,UACI/N,IAAK,WACD,MAAO+N,IACRgE,IAAK,SAAUlW,GACdkS,EAAWlS,IAGnBmS,cACIhO,IAAK,WACD,MAAOgO,IACR+D,IAAK,SAAUlW,GACdmS,EAAenS,IAGvBkR,SACI/M,IAAK,WACD,MAAO+M,IACRgF,IAAK,SAAUlW,GACdkR,EAAUlR,IAGlBoS,gBACIjO,IAAK,WACD,MAAOiO,IACR8D,IAAK,SAAUlW,GACdoS,EAAiBpS,IAGzBwR,SACIrN,IAAK,WACD,MAAOqN,IACR0E,IAAK,SAAUlW,GACdwR,EAAUxR,IAGlBsS,WACInO,IAAK,WACD,MAAOmO,IACR4D,IAAK,SAAUlW,GACdsS,EAAYtS,IAGpB6R,kBACI1N,IAAK,WACD,MAAO0N,IACRqE,IAAK,SAAUlW,GACd6R,EAAmB7R,IAG3BgT,gBACI7O,IAAK,WACD,MAAO6O,IACRkD,IAAK,SAAUlW,GACdgT,EAAiBhT,IAGzBiT,iBACI9O,IAAK,WACD,MAAO8O,IACRiD,IAAK,SAAUlW,GACdiT,EAAkBjT,IAG1BkT,cACI/O,IAAK,WACD,MAAO+O,IACRgD,IAAK,SAAUlW,GACdkT,EAAelT,IAGvB2S,eACIxO,IAAK,WACD,MAAOwO,IACRuD,IAAK,SAAUlW,GACd2S,EAAgB3S,IAGxB4S,UACIzO,IAAK,WACD,MAAOyO,IACRsD,IAAK,SAAUlW,GACd4S,EAAW5S,IAKnBqS,QACIlO,IAAK,WACD,MAAOkO,IACR6D,IAAK,SAAUlW,GACVqS,IAAWrS,IACXqS,IAAWrS,EACXuR,OAIZ9T,MACI0G,IAAK,WACD,MAAO1G,IACRyY,IAAK,SAAUlW,GAEVA,EAAEmW,QACFnW,EAAElG,MAAQkG,EAAEmW,MAAMzQ,EAClB1F,EAAE2T,OAAS3T,EAAE2T,WACb3T,EAAE2T,OAAO7Z,MAAQkG,EAAEmW,MAAMxQ,EACzB3F,EAAE2T,OAAOE,MAAQ7T,EAAEmW,MAAMtC,OAAS7T,EAAE2T,OAAOE,OAE/CpW,EAAOuC,IAKf8R,MACI3N,IAAK,WACD,MAAOwM,GAAQmB,QAChBoE,IAAK,cAGZrR,IACIV,IAAK,WACD,MAAOU,IACRqR,IAAK,gBAKhBzF,GAAGqF,MAAMM,YAAY7E,GACdA;;;;;;;;;;;;;;;;;AAoBX,WACE,YAEAxV,SACGC,OAAO,SACL,KACA;;;;;;;;;;;;;;;;;AAyBP,WACI,YAEA,SAASqa,GAAeha,EAAYD,EAAMwT,GAEtC,QAASnL,GAAKC,GACVA,EAAMG,GAAK+K,EAAUY,QACrB9L,EAAMiH,MAAQtP,EAAWsP,KAEzB,IAAI2K,EAEJ7F,IAAG8F,SAAS,WAEV,GAAIjd,GAAS,GAwCb,OAtCAgd,GAAQ7F,GAAGC,OAAO8F,YAAYX,SAC1BnD,SAAU,EACV+D,yBAAyB,EACzBC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,WAAW,IAGfP,EAAMQ,QAAQtE,KAAQ,GAAIuE,MAAS,KAEnCT,EAAMhd,OAAOA,GAEToL,EAAMhL,QACN4c,EAAMU,QAAQ,EAAGtS,EAAMhL,SAG3B4c,EAAM5Q,EAAEkK,EAAUU,aAClBgG,EAAM3Q,EAAEiK,EAAUW,aAElB+F,EAAMW,MAAMC,WAAWtH,EAAUC,mBAE7BnL,EAAM9K,WACN0c,EAAMa,MAAMD,WAAWtH,EAAUS,6BAC1B3L,EAAM/K,QACb2c,EAAMa,MAAMD,WAAWtH,EAAUQ,0BAEjCkG,EAAMa,MAAMD,WAAWtH,EAAUO,mBAGrCM,GAAGqF,MAAMsB,aAAad,EAAM9V,QAE5BuP,GAAGgB,OAAO,IAAMrM,EAAMG,GAAK,QACxBwS,MAAM3S,EAAMjH,MACZ0T,MAAM,SAAU7X,EAAS,MACzB+b,aAAa3C,SAAS,GACtBzL,KAAKqP,GAEDA,IAGT5R,EAAMoK,IAAI,gBAAiB,WACnBpK,EAAMnJ,MACRQ,QAAQ0D,QAAQiF,EAAMjH,KAAM,SAAUyB,GACpCA,EAAS3D,MAAK,IAGlB+a,EAAM9V,WAId,OACIwE,SAAU,IACV1K,YAAa,kCACboK,OACIjH,KAAM,IACN7D,WAAY,IACZD,QAAS,IACTD,OAAQ,IACR6B,KAAM,KAEVkJ,KAAMA,GAtCd4R,EAAe1a,SAAW,aAAc,OAAQ,aA0ChDI,QACKC,OAAO,SACPhD,UAAU,iBAAkBqd;;;;;;;;;;;;;;;;;AAwBrC,WACI,YAEA,SAASiB,GAAsBjb,EAAYD,EAAMwT,GAE7C,QAASnL,GAAKC,GACVA,EAAMG,GAAK+K,EAAUY,QACrB9L,EAAMiH,MAAQtP,EAAWsP,MACzBjH,EAAM6S,QAAS,CAEf,IAAIjB,EAEJ7F,IAAG8F,SAAS,WAEV,GAAIpG,GAAkBP,EAAUO,kBAC5B7W,EAAS,GA2Cb,OAzCAgd,GAAQ7F,GAAGC,OAAO8G,mBAAmB3B,SACjCnD,SAAU,EACV+D,yBAAyB,EACzBC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXY,cAAc,IAGlBnB,EAAMQ,QAAQtE,KAAQ,GAAIuE,MAAS,KAEnCT,EAAMhd,OAAOA,GAEToL,EAAMhL,QACN4c,EAAMoB,SAAS,EAAGhT,EAAMhL,SAG5B4c,EAAM5Q,EAAEkK,EAAUU,aAClBgG,EAAM3Q,EAAEiK,EAAUW,aAElB+F,EAAMW,MAAMC,WAAWtH,EAAUC,mBAE7BnL,EAAM9K,YACNuW,EAAkBP,EAAUS,4BAC5BiG,EAAMa,MAAMD,cACLxS,EAAM/K,UACbwW,EAAkBP,EAAUQ,yBAC5BkG,EAAMa,MAAMD,cAGhBZ,EAAMa,MAAMD,WAAW/G,GAEvBM,GAAGqF,MAAMsB,aAAad,EAAM9V,QAE5BuP,GAAGgB,OAAO,IAAMrM,EAAMG,GAAK,QACxBwS,MAAM3S,EAAMjH,MACZ0T,MAAM,SAAU7X,EAAS,MACzB+b,aAAa3C,SAAS,GACtBzL,KAAKqP,GAEDA,IAGT5R,EAAMoK,IAAI,gBAAiB,WACvBwH,EAAM9V,WAId,OACIwE,SAAU,IACV1K,YAAa,kCACboK,OACIjH,KAAM,IACN7D,WAAY,IACZD,QAAS,IACTD,OAAQ,KAEZ+K,KAAMA,GAId6S,EAAsB3b,SAClB,aACA,OACA,aAGJI,QACKC,OAAO,SACPhD,UAAU,wBAAyBse;;;;;;;;;;;;;;;;;AA0B5C,WACI,YAMA,SAASK,GAASC,EAAWvb,EAAYD,EAAMyb,EAAQ5J,EAAc5C,EAAWnU,EAAmB4gB,EAASC,EAAOC,EAASxT,EAAkBoF,EAA0BhJ,GASpK,QAASqX,KACDL,EAAU,GAAGvF,QAAUuF,EAAU,GAAGM,cACpCN,EAAU,GAAGO,WAAaP,EAAU,GAAGQ,SACvC5T,EAAiB8G,iBAEjB9G,EAAiBiI,iBAQzB,QAAS4L,KAyBL,GAxBA7T,EAAiBwI,aAEbiB,EAAatR,WACbN,EAAWK,WAAWC,SAAWsR,EAAatR,UAG9CsR,EAAarR,OACb0b,EAAGC,UAAYtK,EAAarR,KACxBqR,EAAapQ,WACbxB,EAAWK,WAAWmB,SAAWoQ,EAAapQ,UAElD2G,EAAiBsI,WAAWwL,EAAGC,YAInCX,EAAU,GACLY,iBAAiB,mBAAoBP,GAAmB,GAC7DL,EAAU,GACLY,iBAAiB,yBAA0BP,GAAmB,GACnEL,EAAU,GACLY,iBAAiB,qBAAsBP,GAAmB,GAC/DL,EAAU,GACLY,iBAAiB,sBAAuBP,GAAmB,GAE5Dlc,QAAQuC,UAAU2P,EAAa6J,SAAS,CACxC,GAAIW,GAAgBxK,EAAa6J,QAAQzJ,MAAM,QAC/CqK,GAAgBD,EAAcrJ,OAAO,SAASlP,EAAKpH,GAC/C,MAAOoH,GAAIyY,OAAOzhB,EAAkB0B,OAAO,SAASggB,GAChD,MAAOA,GAAI9f,OAASA,cAGzB,CACH,GAAI+f,GAASf,EAAQ1I,OAAO,SAASlP,EAAIoP,GAErC,MADApP,GAAI9E,KAAKkU,EAAKxW,MACPoH,OACL1B,MACN6M,GAAU0B,OAAO,UAAW8L,GAG5B9c,QAAQuC,UAAU2P,EAAahB,mBAC/B5Q,EAAWK,WAAWuQ,gBAAmBgB,EAAahB,iBAG1DqL,EAAGQ,kBACCC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,oBAAoB,EACpBhiB,kBAAmBA,EACnB0E,eAAgB8c,GAtExB,GAAIJ,GAAKpT,KACLwT,EAAgBZ,CAyEpBQ,GAAGN,QAAUA,EAAQnT,GAErByT,EAAGP,MAAQA,EAGXO,EAAGa,eAAiB,SAASC,GACzB,GAAIC,GAAQ,EACRtd,SAAQ0C,YAAYwP,EAAa6J,SACjC7J,EAAa6J,QAAU,GAEvBuB,EAAS,IAGTD,EAAU7a,QACV0P,EAAa6J,QAAU,GACvBuB,EAASD,EAAUhK,OAAO,SAASlP,EAAIoP,GAEnC,MADApP,GAAI9E,KAAKkU,EAAKxW,MACPoH,OACL1B,QAEN6a,GAAkBD,EAAUtgB,KAEhCuS,EAAU0B,OAAO,UAAWkB,EAAa6J,QAAUuB,IAGvDf,EAAGgB,oBAAsB,SAASF,GAE9B,IAAK,GADDX,GAAgBxK,EAAa6J,QAAQzJ,MAAM,SACtCyB,EAAE,EAAGA,EAAG2I,EAAcla,OAAQuR,IACnC,GAAI2I,EAAc3I,KAAOsJ,EAAUtgB,KAAK,CACpC2f,EAAchV,OAAOqM,EAAE,EACvB,OAGJ2I,EAAcla,OAAS,EACvB+Z,EAAGiB,yBAEHlO,EAAU0B,OAAO,UAAW0L,EAAcpb,aAIlDib,EAAGiB,uBAAyB,WACxBlO,EAAU0B,OAAO,UAAW,OAGhCuL,EAAGkB,eAAiB,WAEhB,GAAItY,IACAc,gBAAiB,SACjBC,iBAAkB,KAClBC,WAAY,kBACZC,SAAU,gDAGdvB,GAAaE,aAAcI,GAAc3D,KAAK,WAC1C8N,EAAU0B,OAAO,YAAa,MAC9B1B,EAAU0B,OAAO,kBAAmB,MACpC1Q,EAAWsP,MAAM+B,4BAA6B,EAC9CrR,EAAWK,WAAWyQ,kBAAoB,GAC1C9Q,EAAWK,WAAWuQ,gBAAkB,GACxCqL,EAAGQ,iBAAiBW,gBACpBnB,EAAGiB,4BAIXjB,EAAGxL,WAAa,WACZtI,EAAiBsI,WAAWwL,EAAGC,WAC/B3O,EAAyB0E,qBAG7BgK,EAAGoB,UAAY,SAAS7G,EAAO7Z,GAC3B6Z,EAAM8G,iBACDrB,EAAGsB,gBAAgB5gB,KACpBsf,EAAGQ,iBAAiBY,UAAU1gB,GAC9Bsf,EAAGa,eAAengB,KAI1Bsf,EAAGsB,gBAAkB,SAASR,GAC1B,GAAIrd,QAAQuC,UAAU8a,EAAU9d,yBAA2B8d,EAAU9d,0BAA2B,GAAQe,EAAWsP,MAAM6B,0BAA2B,IAAUnR,EAAWsP,MAAM8B,yBAC7H,KAA5CpR,EAAWK,WAAWyQ,kBAAyB,CAE/C,GAAIjM,IACAc,gBAAiB,GACjBC,iBAAkB,KAClBC,WAAY,uCACZC,SAAU,4FAOd,OAJAvB,GAAaE,aAAcI,GAAc3D,KAAK,WAC1Cqa,EAAUiC,eAAe,qBAAqBC,WAG3C,EAGb,OAAO,GAGXxB,EAAG7L,eAAiBjI,EAAiBiI,eACrC6L,EAAG9I,gBAAkB5F,EAAyB4F,gBAC9C8I,EAAG7I,sBAAwB7F,EAAyB6F,sBACpD6I,EAAGC,UAAY,GAEfF,IA/IJV,EAAShc,SAAW,YAAa,aAAc,OAAQ,SAAU,eAAgB,YAAa,oBAAqB,UAAW,QAAS,UAAW,mBAAoB,2BAA4B,gBAkJlMI,QACKC,OAAO,QACJ,YACA,SACA,oBACA,UAEHzB,WAAW,iBAAkBod;;;;;;;;;;;;;;;;;AAqBtC,WACI,YAEA5b,SACKC,OAAO,UACJ,UACA,eACA,SACA,YAKZ,WAAe,YAAcD,SAAQC,OAAO,UAAU+d,SAAS,WAAalV,GAAM;;;;;;;;;;;;;;;;;AAkBlF,WACI,YAMA,SAASmV,GAAYC,GACjBA,EAAeC,KAAK,KAChB5f,YAAa,qBACbC,WAAY,iBACZ4f,aAAc,KACdphB,MAAO,SACPqhB,gBAAgB,EAChB/Z,SACIyX,SAAA,iBAAW,SAAUlc,GACjB,MAAOA,KAEXmc,MAAS,WACP,OAAO,MAGdmC,KAAK,UACJ5f,YAAa,qBACbC,WAAY,iBACZ4f,aAAc,KACdphB,MAAO,SACPqhB,gBAAgB,EAChB/Z,SACIyX,SAAA,iBAAW,SAAUlc,GACjB,MAAOA,KAEXmc,MAAS,WACP,OAAO,MAGdmC,KAAK,UACJ5f,YAAa,qBACbC,WAAY,iBACZ4f,aAAc,KACdphB,MAAO,SACPqhB,gBAAgB,EAChB/Z,SACIyX,SAAA,eAAW,SAAUjc,GACjB,MAAOA,KAEXkc,MAAS,WACP,OAAO,MAGdmC,KAAK,cACJ5f,YAAa,qBACbC,WAAY,iBACZ4f,aAAc,KACdphB,MAAO,SACPqhB,gBAAgB,EAChB/Z,SACIyX,SAAA,mBAAW,SAAUhc,GACjB,MAAOA,KAEXic,MAAS,WACP,OAAO,MAIhBsC,UAAU,KArBfL,EAAYre,SAAW,kBAwBvBI,QACKC,OAAO,UACPxD,OAAOwhB;;;;;;;;;;;;;;;;;AA0BhB,WACI,YAQA,SAASM,GAAY7c,EAAMsI,GACvB,GACI+N,GACAha,EAFAsG,IAGJ,KAAK0T,EAAI,EAAGA,EAAIrW,EAAKc,OAAQuV,IACzBha,EAAQ2D,EAAKqW,GAAG/N,GACc,KAA1B3F,EAAOoD,QAAQ1J,IACfsG,EAAOhF,KAAKtB,EAGpB,OAAOsG,GAOX,QAASma,KACL,MAAO,UAAUC,EAAYzU,GACzB,MAAmB,QAAfyU,EAGGF,EAAYE,EAAYzU,GAH/B,QAWR,QAAS0U,KACL,MAAO,UAAUD,EAAYhhB,GACzB,MAAOghB,GAAW5hB,OAAO,SAAU0W,GAC/B,MAAOA,GAAK9V,QAAUA,KAKlCuC,QACKC,OAAO,UACPpD,OAAO,UAAW2hB,GAClB3hB,OAAO,cAAe6hB;;;;;;;;;;;;;;;;;AAqB/B,WACI,YAgBA1e,SACKC,OAAO;;;;;;;;;;;;;;;;;AAuBhB,WACI,YAIA,SAAS0e,GAAWC,GAEhBA,EAASC,UAAU,aAAA,YAAa,SAAUC,GAGtC,GAAIC,GAAiBD,EAAUrP,MAmB/B,OAhBAqP,GAAUrP,OAAS,SAAUD,GAGzB,GAAIwP,GAAWD,EAAevP,EAS9B,OALIwP,IAAYxP,IACZA,EAAgByP,aAAc,GAI3BD,GAIJF,KAcfH,EAAW/e,SAAW,YAVtBI,QACKC,OAAO,UACPxD,OAAOkiB;;;;;;;;;;;;;;;;;AAwBhB,WACE,YAEA3e,SACGC,OAAO,UACP+d,SAAS,SAAUkB;;;;;;;;;;;;;;;;;AAqBxB,WACI,YAEA,SAASC,GAAaA,GAClBA,EAAaC,WAAY,EACzBD,EAAaE,QAAU,IACvBF,EAAaG,cAAgB,kBAC7BH,EAAaI,mBAAoB,EACjCJ,EAAaK,aAAc,EAG/B,QAASC,GAAkBC,GACvBA,EAAaC,cAAa,GA8B9BR,EAAavf,SAAW,gBACxB6f,EAAkB7f,SAAW,gBA5B7BI,QACKC,OAAO,UACP+d,SAAS,UACNpd,SAAY,OACZE,KAAQ,MACRgB,SAAY,YACZiI,SAAY,IACZD,OAAU,IACV1K,qBAAuB,EACvBE,wBAA0B,EAC1BiS,sBAAwB,EACxBC,wBAA0B,EAC1BC,wBAA0B,EAC1BC,yBAA2B,EAC3B0B,aAAe,EACf9B,gBAAkB,EAClBM,qCAAuC,IAE1CnV,OAAO0iB,GACP1iB,OAAOgjB,MAGhBzf,QAAQC,OAAO,UAAU2f,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,qBAAqB,m3BAClHD,EAAeC,IAAI,gEAAgE,ouBACnFD,EAAeC,IAAI,kCAAkC,4KACrDD,EAAeC,IAAI,0CAA0C,iwQAC7DD,EAAeC,IAAI,4CAA4C","file":"scripts/app-ead4d34209.js","sourcesContent":["/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*jslint node: true*/\n/*global angular*/\n\n(function () {\n    'use strict';\n\n    /* Widgets */\n    function widgetDefinitions(\n        MetricDataModel,\n        ConvertedMetricDataModel,\n        CumulativeMetricDataModel,\n        CgroupCPUUsageMetricDataModel,\n        CgroupCPUHeadroomMetricDataModel,\n        CgroupMemoryUsageMetricTimeSeriesDataModel,\n        ContainerMemoryUsageMetricDataModel,\n        ContainerNetworkBytesMetricDataModel,\n        ContainerMultipleMetricDataModel,\n        ContainerMultipleCumulativeMetricDataModel,\n        CgroupMemoryHeadroomMetricDataModel,\n        MemoryUtilizationMetricDataModel,\n        NetworkBytesMetricDataModel,\n        CpuUtilizationMetricDataModel,\n        PerCpuUtilizationMetricDataModel,\n        MultipleMetricDataModel,\n        MultipleCumulativeMetricDataModel,\n        DummyMetricDataModel,\n        DiskLatencyMetricDataModel,\n        CumulativeUtilizationMetricDataModel,\n        CgroupMemoryUtilizationMetricDataModel,\n        config) {\n\n        var onSettingsClose = function(resultFromModal, widgetModel) {\n            if (typeof resultFromModal !== 'undefined'){\n                widgetModel.filter = resultFromModal.filter;\n            }\n        };\n        var definitions = [\n            {\n                name: 'kernel.all.load',\n                title: 'Load Average',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.load'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU'\n            }, {\n                name: 'kernel.all.runnable',\n                title: 'Runnable',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.runnable'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 4,\n                    integer: true\n                }\n            }, {\n                name: 'kernel.all.cpu.sys',\n                title: 'CPU Utilization (System)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.cpu.sys'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.all.cpu.user',\n                title: 'CPU Utilization (User)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.cpu.user'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.all.cpu',\n                title: 'CPU Utilization',\n                directive: 'area-stacked-time-series',\n                dataAttrName: 'data',\n                dataModelType: CpuUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.cpu'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.percpu.cpu.sys',\n                title: 'Per-CPU Utilization (System)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.percpu.cpu.sys'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.percpu.cpu.user',\n                title: 'Per-CPU Utilization (User)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.percpu.cpu.user'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.percpu.cpu',\n                title: 'Per-CPU Utilization',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: PerCpuUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.percpu.cpu'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'mem.util.free',\n                title: 'Memory Utilization (Free)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: ConvertedMetricDataModel,\n                dataModelOptions: {\n                    name: 'mem.util.free',\n                    conversionFunction: function (value) {\n                        return value / 1024 / 1024;\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Memory'\n            }, {\n                name: 'mem.util.used',\n                title: 'Memory Utilization (Used)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: ConvertedMetricDataModel,\n                dataModelOptions: {\n                    name: 'mem.util.used',\n                    conversionFunction: function (value) {\n                        return value / 1024 / 1024;\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Memory'\n            }, {\n                name: 'mem.util.cached',\n                title: 'Memory Utilization (Cached)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: ConvertedMetricDataModel,\n                dataModelOptions: {\n                    name: 'mem.util.cached',\n                    conversionFunction: function (value) {\n                        return value / 1024 / 1024;\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Memory'\n            }, {\n                name: 'mem',\n                title: 'Memory Utilization',\n                directive: 'area-stacked-time-series',\n                dataAttrName: 'data',\n                dataModelType: MemoryUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'mem'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Memory',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.interface.out.drops',\n                title: 'Network Drops (Out)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'network.interface.out.drops'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    forcey: 10,\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.interface.in.drops',\n                title: 'Network Drops (In)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'network.interface.in.drops'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    forcey: 10,\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.interface.drops',\n                title: 'Network Drops',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleMetricDataModel,\n                dataModelOptions: {\n                    name: 'network.interface.drops',\n                    metricDefinitions: {\n                        '{key} in': 'network.interface.in.drops',\n                        '{key} out': 'network.interface.out.drops'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    forcey: 10,\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.tcpconn.established',\n                title: 'TCP Connections (Estabilished)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'network.tcpconn.established'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.tcpconn.time_wait',\n                title: 'TCP Connections (Time Wait)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'network.tcpconn.time_wait'\n                },\n                enableVerticalResize: false,\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.tcpconn.close_wait',\n                title: 'TCP Connections (Close Wait)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MetricDataModel,\n                dataModelOptions: {\n                    name: 'network.tcpconn.close_wait'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.tcpconn',\n                title: 'TCP Connections',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleMetricDataModel,\n                dataModelOptions: {\n                    name: 'network.tcpconn',\n                    metricDefinitions: {\n                        'established': 'network.tcpconn.established',\n                        'time_wait': 'network.tcpconn.time_wait',\n                        'close_wait': 'network.tcpconn.close_wait'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.interface.bytes',\n                title: 'Network Throughput (kB)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: NetworkBytesMetricDataModel,\n                dataModelOptions: {\n                    name: 'network.interface.bytes'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                },\n                settingsModalOptions: {\n                    templateUrl: 'app/components/customWidgetSettings/customWidgetSettings.html',\n                    controller: 'CustomWidgetSettingsController'\n                },\n                hasLocalSettings: true,\n                onSettingsClose: onSettingsClose,\n                filter: ''\n            }, {\n                name: 'disk.iops',\n                title: 'Disk IOPS',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleCumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'disk.iops',\n                    metricDefinitions: {\n                        '{key} read': 'disk.dev.read',\n                        '{key} write': 'disk.dev.write'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Disk'\n            }, {\n                name: 'disk.bytes',\n                title: 'Disk Throughput (Bytes)',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleCumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'disk.bytes',\n                    metricDefinitions: {\n                        '{key} read': 'disk.dev.read_bytes',\n                        '{key} write': 'disk.dev.write_bytes'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Disk'\n            }, {\n                name: 'disk.dev.avactive',\n                title: 'Disk Utilization',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeUtilizationMetricDataModel,\n                dataModelOptions: {\n                    name: 'disk.dev.avactive'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Disk',\n                attrs: {\n                    forcey: 1,\n                    percentage: true,\n                    integer: false\n                }\n            }, {\n                name: 'kernel.all.pswitch',\n                title: 'Context Switches',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: CumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'kernel.all.pswitch'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'CPU',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'mem.vmstat.pgfault',\n                title: 'Page Faults',\n                directive: 'area-stacked-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleCumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'mem.vmstat.pgfault',\n                    metricDefinitions: {\n                        'page faults': 'mem.vmstat.pgfault',\n                        'major page faults': 'mem.vmstat.pgmajfault'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Memory',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'network.interface.packets',\n                title: 'Network Packets',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleCumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'network.interface.packets',\n                    metricDefinitions: {\n                        '{key} in': 'network.interface.in.packets',\n                        '{key} out': 'network.interface.out.packets'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                },\n                settingsModalOptions: {\n                    templateUrl: 'app/components/customWidgetSettings/customWidgetSettings.html',\n                    controller: 'CustomWidgetSettingsController'\n                },\n                hasLocalSettings: true,\n                onSettingsClose: onSettingsClose,\n                filter: ''\n            }, {\n                name: 'network.tcp.retrans',\n                title: 'Network Retransmits',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: MultipleCumulativeMetricDataModel,\n                dataModelOptions: {\n                    name: 'network.tcp.retrans',\n                    metricDefinitions: {\n                        'retranssegs': 'network.tcp.retranssegs',\n                        'timeouts': 'network.tcp.timeouts',\n                        'listendrops': 'network.tcp.listendrops',\n                        'fastretrans': 'network.tcp.fastretrans',\n                        'slowstartretrans': 'network.tcp.slowstartretrans',\n                        'synretrans': 'network.tcp.synretrans'\n                    }\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Network',\n                attrs: {\n                    forcey: 10,\n                    percentage: false,\n                    integer: true\n                }\n            }, {\n                name: 'disk.dev.latency',\n                title: 'Disk Latency',\n                directive: 'line-time-series',\n                dataAttrName: 'data',\n                dataModelType: DiskLatencyMetricDataModel,\n                dataModelOptions: {\n                    name: 'disk.dev.latency'\n                },\n                size: {\n                    width: '50%',\n                    height: '250px'\n                },\n                enableVerticalResize: false,\n                group: 'Disk',\n                attrs: {\n                    percentage: false,\n                    integer: true\n                }\n            }\n        ];\n\n        if (config.enableCpuFlameGraph) {\n          definitions.push({\n            name: 'graph.flame.cpu',\n            title: 'CPU Flame Graph',\n            directive: 'cpu-flame-graph',\n            dataModelType: DummyMetricDataModel,\n            size: {\n              width: '50%',\n              height: '250px'\n            },\n            enableVerticalResize: false,\n            group: 'CPU'\n          });\n        }\n\n        if (config.enableContainerWidgets) {\n            definitions.push(\n                {\n                    name: 'cgroup.cpuacct.usage',\n                    title: 'Per-Container CPU Utilization',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: CgroupCPUUsageMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.cpuacct.usage'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    requireContainerFilter: true,\n                    attrs: {\n                        forcey: 1,\n                        percentage: true,\n                        integer: false\n                    }\n                }, {\n                    name: 'cgroup.memory.usage',\n                    title: 'Per-Container Memory Usage (Mb)',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: CgroupMemoryUsageMetricTimeSeriesDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.memory.usage'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true,\n                        forcey: 10\n                    }\n                }, {\n                    name: 'container.memory.usage',\n                    title: 'Total Container Memory Usage (Mb)',\n                    directive: 'area-stacked-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMemoryUsageMetricDataModel,\n                    dataModelOptions: {\n                        name: 'container.memory.usage'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.memory.headroom',\n                    title: 'Per-Container Memory Headroom (Mb)',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: CgroupMemoryHeadroomMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.memory.headroom'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    requireContainerFilter: true,\n                    attrs: {\n                        forcey: 1,\n                        percentage: false,\n                        integer: true,\n                        area: true\n                    }\n                }, {\n                    name: 'cgroup.blkio.all.io_serviced',\n                    title: 'Container Disk IOPS',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleCumulativeMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.blkio.all.io_serviced',\n                        metricDefinitions: {\n                            '{key} read': 'cgroup.blkio.all.io_serviced.read',\n                            '{key} write': 'cgroup.blkio.all.io_serviced.write'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.blkio.all.io_service_bytes',\n                    title: 'Container Disk Throughput (Bytes)',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleCumulativeMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.blkio.all.io_service_bytes',\n                        metricDefinitions: {\n                            '{key} read': 'cgroup.blkio.all.io_service_bytes.read',\n                            '{key} write': 'cgroup.blkio.all.io_service_bytes.write'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.blkio.all.throttle.io_serviced',\n                    title: 'Container Disk IOPS (Throttled)',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleCumulativeMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.blkio.all.throttle.io_serviced',\n                        metricDefinitions: {\n                            '{key} read': 'cgroup.blkio.all.throttle.io_serviced.read',\n                            '{key} write': 'cgroup.blkio.all.throttle.io_serviced.write'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.blkio.all.throttle.io_service_bytes',\n                    title: 'Container Disk Throughput (Throttled) (Bytes)',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleCumulativeMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.blkio.all.throttle.io_service_bytes',\n                        metricDefinitions: {\n                            '{key} read': 'cgroup.blkio.all.throttle.io_service_bytes.read',\n                            '{key} write': 'cgroup.blkio.all.throttle.io_service_bytes.write'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.cpusched',\n                    title: 'Per-Container CPU Scheduler',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.cpusched',\n                        metricDefinitions: {\n                            '{key} shares': 'cgroup.cpusched.shares',\n                            '{key} periods': 'cgroup.cpusched.periods'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.cpuacct.headroom',\n                    title: 'Per-Container CPU Headroom',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: CgroupCPUHeadroomMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.cpuacct.headroom'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    requireContainerFilter: true,\n                    attrs: {\n                        forcey: 1,\n                        percentage: true,\n                        integer: false,\n                        area: true\n                    }\n                }, {\n                    name: 'cgroup.cpusched.throttled_time',\n                    title: 'Per-Container Throttled CPU',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: ContainerMultipleCumulativeMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.cpusched.throttled_time',\n                        metricDefinitions: {\n                            '{key}': 'cgroup.cpusched.throttled_time'\n                        }\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    attrs: {\n                        forcey: 5,\n                        percentage: false,\n                        integer: true\n                    }\n                }, {\n                    name: 'cgroup.memory.utilization',\n                    title: 'Per-Container Memory Utilization',\n                    directive: 'line-time-series',\n                    dataAttrName: 'data',\n                    dataModelType: CgroupMemoryUtilizationMetricDataModel,\n                    dataModelOptions: {\n                        name: 'cgroup.memory.utilization'\n                    },\n                    size: {\n                        width: '50%',\n                        height: '250px'\n                    },\n                    enableVerticalResize: false,\n                    group: 'Container',\n                    requireContainerFilter: true,\n                    attrs: {\n                        forcey: 1,\n                        percentage: true,\n                        integer: false,\n                        area: false\n                    }\n                }\n\n            );\n\n        }\n\n        return definitions;\n    }\n\n    var defaultWidgets = [\n        {\n            name: 'kernel.all.cpu',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'kernel.percpu.cpu',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'kernel.all.runnable',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'kernel.all.load',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'network.interface.bytes',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'network.tcpconn',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'network.interface.packets',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'network.tcp.retrans',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'mem',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'mem.vmstat.pgfault',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'kernel.all.pswitch',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'disk.iops',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'disk.bytes',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'disk.dev.avactive',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'disk.dev.latency',\n            size: {\n                width: '50%'\n            }\n        }\n    ];\n\n    var emptyWidgets = [];\n\n    var containerWidgets = [\n        {\n            name: 'cgroup.cpuacct.usage',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'container.memory.usage',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'cgroup.memory.usage',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'cgroup.memory.headroom',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'container.disk.iops',\n            size: {\n                width: '50%'\n            }\n        }, {\n            name: 'container.disk.bytes',\n            size: {\n                width: '50%'\n            }\n        }\n    ];\n\n    angular\n        .module('widget', [\n            'datamodel',\n            'chart',\n            'flamegraph',\n            'customWidgetSettings'\n        ])\n        .factory('widgetDefinitions', widgetDefinitions)\n        .value('defaultWidgets', defaultWidgets)\n        .value('emptyWidgets', emptyWidgets)\n        .value('containerWidgets', containerWidgets);\n\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n(function () {\n    'use strict';\n\n    function PMAPIService($http, $log, $rootScope, $q) {\n\n        function getContext(params) {\n            var baseURI = $rootScope.properties.protocol + '://' + $rootScope.properties.host + ':' +\n               $rootScope.properties.port;\n            var settings = {};\n            settings.method = 'GET';\n            settings.url = baseURI + '/pmapi/context';\n            settings.params = {};\n            settings.params[params.contextType] = params.contextValue;\n            settings.params.polltimeout = params.pollTimeout.toString();\n            settings.timeout = 5000;\n\n            return $http(settings)\n                .then(function (response) {\n                    if (response.data.context) {\n                        return response.data.context;\n                    }\n\n                    return $q.reject('context is undefined');\n                });\n        }\n\n        function getHostspecContext(hostspec, pollTimeout) {\n            var params = {};\n            params.contextType = 'hostspec';\n            params.contextValue = hostspec;\n            params.pollTimeout = pollTimeout;\n            return getContext(params);\n        }\n\n        function getHostnameContext(hostname, pollTimeout) {\n            var params = {};\n            params.contextType = 'hostname';\n            params.contextValue = hostname;\n            params.pollTimeout = pollTimeout;\n            return getContext(params);\n        }\n\n        function getLocalContext(pollTimeout) {\n            var params = {};\n            params.contextType = 'local';\n            params.contextValue = 'ANYTHING';\n            params.pollTimeout = pollTimeout;\n            return getContext(params);\n        }\n\n        function getArchiveContext(archiveFile, pollTimeout) {\n            var params = {};\n            params.contextType = 'archivefile';\n            params.contextValue = archiveFile;\n            params.pollTimeout = pollTimeout;\n            return getContext(params);\n        }\n\n        function getMetricsValues(context, names, pmids) {\n            var baseURI = $rootScope.properties.protocol + '://' + $rootScope.properties.host + ':' +\n               $rootScope.properties.port;\n            var settings = {};\n            settings.method = 'GET';\n            settings.url = baseURI + '/pmapi/' + context + '/_fetch';\n            settings.params = {};\n\n            if (angular.isDefined(pmids) && pmids !== null && pmids.length > 0)  {\n                settings.params.pmids = pmids.join(',');\n            }\n\n            if (angular.isDefined(names) && names !== null && names.length > 0) {\n                settings.params.names = names.join(',');\n            }\n\n            return $http(settings)\n                .then(function (response) {\n                    if (angular.isUndefined(response.data.timestamp) ||\n                        angular.isUndefined(response.data.timestamp.s) ||\n                        angular.isUndefined(response.data.timestamp.us) ||\n                        angular.isUndefined(response.data.values)) {\n                        return $q.reject('metric values is empty');\n                    }\n                    return response;\n                });\n\n        }\n\n        function getInstanceDomainsByIndom(context, indom, instances, inames) {\n            var baseURI = $rootScope.properties.protocol + '://' + $rootScope.properties.host + ':' +\n                $rootScope.properties.port;\n            var settings = {};\n            settings.method = 'GET';\n            settings.url = baseURI + '/pmapi/' + context + '/_indom';\n            settings.params = {indom: indom}; // required\n\n            if (angular.isDefined(instances) && instances !== null) {\n                settings.params.instance = instances.join(',');\n            }\n\n            if (angular.isDefined(inames) && inames !== null) {\n                settings.params.inames = inames.join(',');\n            }\n\n            settings.cache = true;\n\n            return $http(settings)\n                .then(function (response) {\n                    if (angular.isDefined(response.data.indom) ||\n                        angular.isDefined(response.data.instances)) {\n                       return response;\n                    }\n\n                    return $q.reject('instances is undefined');\n                });\n        }\n\n        function getInstanceDomainsByName(context, name, instances, inames) {\n            var baseURI = $rootScope.properties.protocol + '://' + $rootScope.properties.host + ':' +\n                $rootScope.properties.port;\n            var settings = {};\n            settings.method = 'GET';\n            settings.url = baseURI + '/pmapi/' + context + '/_indom';\n            settings.params = {name: name};\n\n            if (angular.isDefined(instances) && instances !== null) {\n                settings.params.instance = instances.join(',');\n            }\n\n            if (angular.isDefined(inames) && inames !== null) {\n                settings.params.inames = inames.join(',');\n            }\n\n            settings.cache = true;\n\n            return $http(settings)\n                .then(function (response) {\n                    if (angular.isDefined(response.data.instances)) {\n                      return response;\n                    }\n                    return $q.reject('instances is undefined');\n                });\n        }\n\n        function convertTimestampToMillis(response) {\n            // timestamp is in milliseconds\n            var timestamp = (response.data.timestamp.s * 1000) +\n                (response.data.timestamp.us / 1000);\n            var values = response.data.values;\n\n            return {\n                timestamp: timestamp,\n                values: values\n            };\n\n        }\n\n        function mapMetricNamesToInstanceDomains(responses) {\n            var instanceDomains = {};\n            angular.forEach(responses, function (response)  {\n                var indom = response.data.indom;\n                var name = response.config.params.name;\n                var inames = {};\n                angular.forEach(response.data.instances, function (inst) {\n                    inames[inst.instance.toString()] = inst.name;\n                });\n                instanceDomains[name.toString()] = {\n                    indom: indom,\n                    name: name,\n                    inames: inames\n                };\n            });\n\n            return instanceDomains;\n        }\n\n        function appendInstanceDomains(context, data) {\n            var deferred = $q.defer();\n            var instanceDomainPromises = [];\n            angular.forEach(data.values, function (value) {\n                var ids = _.map(value.instances, function (inst) {\n                    if (angular.isDefined(inst.instance) &&\n                        inst.instance !== null) {\n                        return inst.instance;\n                    } else {\n                        return -1;\n                    }\n                });\n                instanceDomainPromises.push(\n                    getInstanceDomainsByName(context, value.name, ids));\n            });\n\n            $q.all(instanceDomainPromises)\n                .then(function (responses) {\n                    var dict = mapMetricNamesToInstanceDomains(responses);\n\n                    var result = {\n                        timestamp: data.timestamp,\n                        values: data.values,\n                        inames: dict\n                    };\n\n                    deferred.resolve(result);\n                }, function (errors) {\n                    deferred.reject(errors);\n                }, function (updates) {\n                    deferred.update(updates);\n                });\n\n            return deferred.promise;\n        }\n\n        function getMetrics(context, metrics, pmids) {\n            return getMetricsValues(context, metrics, pmids)\n                    .then(convertTimestampToMillis)\n                    .then(function(data) {\n                        return appendInstanceDomains(context, data);\n                    });\n        }\n\n         return {\n            getHostspecContext: getHostspecContext,\n            getHostnameContext: getHostnameContext,\n            getLocalContext: getLocalContext,\n            getArchiveContext: getArchiveContext,\n            getMetricsValues: getMetricsValues,\n            getMetrics: getMetrics,\n            getInstanceDomainsByIndom: getInstanceDomainsByIndom,\n            getInstanceDomainsByName: getInstanceDomainsByName\n        };\n    }\n\n    // PMAPI Service factory\n    angular\n        .module('pmapi', [])\n        .factory('PMAPIService', PMAPIService);\n\n    PMAPIService.$inject = ['$http', '$log', '$rootScope', '$q'];\n\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n     /**\n     * @name ModalService\n     * @desc\n     */\n     function ModalService($uibModal) {\n\n        var defaultModal = {\n            backdrop: true,\n            keyboard: true,\n            modalFade: true,\n            template: '<div class=\"modal-header\"><h3>{{modalOptions.headerText}}</h3></div><div class=\"modal-body\"><p>{{modalOptions.bodyText}}</p></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn\" data-ng-click=\"modalOptions.close()\">{{modalOptions.closeButtonText}}</button><button class=\"btn btn-primary\" data-ng-click=\"modalOptions.ok();\">{{modalOptions.actionButtonText}}</button></div>'\n        };\n\n        var defaultModalOptions = {\n            closeButtonText: 'Close',\n            actionButtonText: 'OK',\n            headerText: 'Proceed?',\n            bodyText: 'Perform this action?'\n        };\n\n        /**\n        * @name show\n        * @desc\n        */\n        function showModal(customModal, customModalOptions) {\n            //Create temp objects to work with since we're in a singleton service\n            var modal = {};\n            var modalOptions = {};\n\n            customModal.backdrop = 'static';\n\n            //Map angular-ui modal custom defaults to modal defaults defined in service\n            angular.extend(modal, defaultModal, customModal);\n\n            //Map modal.html $scope custom properties to defaults defined in service\n            angular.extend(modalOptions, defaultModalOptions, customModalOptions);\n\n            modal.controller = ['$scope','$uibModalInstance', function ($scope, $uibModalInstance) {\n                $scope.modalOptions = modalOptions;\n                $scope.modalOptions.ok = function (result) {\n                    $uibModalInstance.close(result);\n                };\n                $scope.modalOptions.close = function () {\n                    $uibModalInstance.dismiss('cancel');\n                };\n            }];\n\n            return $uibModal.open(modal).result;\n        }\n\n        return {\n            showModal: showModal\n        };\n\n    }\n\n    angular\n        .module('modal' , [])\n        .factory('ModalService', ModalService);\n\n })();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n    'use strict';\n\n\n    /**\n    * @name MetricListService\n    * @desc\n    */\n    function MetricListService($rootScope, $http, $log, $q, PMAPIService, SimpleMetric, CumulativeMetric, ConvertedMetric, CumulativeConvertedMetric, DerivedMetric) {\n        var simpleMetrics = [],\n            derivedMetrics = [];\n\n        /**\n        * @name getOrCreateMetric\n        * @desc\n        */\n        function getOrCreateMetric(name) {\n            var metric = _.find(simpleMetrics, function (el) {\n                return el.name === name;\n            });\n\n            if (angular.isUndefined(metric)) {\n                metric = new SimpleMetric(name);\n                simpleMetrics.push(metric);\n            } else {\n                metric.subscribers++;\n            }\n            return metric;\n        }\n\n        /**\n        * @name getOrCreateCumulativeMetric\n        * @desc\n        */\n        function getOrCreateCumulativeMetric(name) {\n            var metric = _.find(simpleMetrics, function (el) {\n                return el.name === name;\n            });\n\n            if (angular.isUndefined(metric)) {\n                metric = new CumulativeMetric(name);\n                simpleMetrics.push(metric);\n            } else {\n                metric.subscribers++;\n            }\n            return metric;\n        }\n\n        /**\n        * @name getOrCreateConvertedMetric\n        * @desc\n        */\n        function getOrCreateConvertedMetric(name, conversionFunction) {\n            var metric = _.find(simpleMetrics, function (el) {\n                return el.name === name;\n            });\n\n            if (angular.isUndefined(metric)) {\n                metric = new ConvertedMetric(name, conversionFunction);\n                simpleMetrics.push(metric);\n            } else {\n                metric.subscribers++;\n            }\n            return metric;\n        }\n\n        /**\n        * @name getOrCreateCumulativeConvertedMetric\n        * @desc\n        */\n        function getOrCreateCumulativeConvertedMetric(name, conversionFunction) {\n            var metric = _.find(simpleMetrics, function (el) {\n                return el.name === name;\n            });\n\n            if (angular.isUndefined(metric)) {\n                metric = new CumulativeConvertedMetric(name, conversionFunction);\n                simpleMetrics.push(metric);\n            } else {\n                metric.subscribers++;\n            }\n            return metric;\n        }\n\n        /**\n        * @name getOrCreateDerivedMetric\n        * @desc\n        */\n        function getOrCreateDerivedMetric(name, derivedFunction) {\n            var metric = _.find(derivedMetrics, function (metric) {\n                return metric.name === name;\n            });\n\n            if (angular.isUndefined(metric)) {\n                metric = new DerivedMetric(name, derivedFunction);\n                derivedMetrics.push(metric);\n            } else {\n                metric.subscribers++;\n            }\n            return metric;\n        }\n\n        /**\n        * @name destroyMetric\n        * @desc\n        */\n        function destroyMetric(name) {\n            var index,\n                metric = _.find(simpleMetrics, function (el) {\n                    return el.name === name;\n                });\n\n            metric.subscribers--;\n\n            if (metric.subscribers < 1) {\n                index = simpleMetrics.indexOf(metric);\n                if (index > -1) {\n                    simpleMetrics.splice(index, 1);\n                }\n            }\n        }\n\n        /**\n        * @name destroyDerivedMetric\n        * @desc\n        */\n        function destroyDerivedMetric(name) {\n            var index,\n                metric = _.find(derivedMetrics, function (el) {\n                    return el.name === name;\n                });\n\n            metric.subscribers--;\n\n            if (metric.subscribers < 1) {\n                index = derivedMetrics.indexOf(metric);\n                if (index > -1) {\n                    derivedMetrics.splice(index, 1);\n                }\n            }\n        }\n\n        /**\n        * @name clearMetricList\n        * @desc\n        */\n        function clearMetricList() {\n            angular.forEach(simpleMetrics, function (metric) {\n                metric.clearData();\n            });\n        }\n\n        /**\n        * @name clearDerivedMetricList\n        * @desc\n        */\n        function clearDerivedMetricList() {\n            angular.forEach(derivedMetrics, function (metric) {\n                metric.clearData();\n            });\n        }\n\n        function getDerivedMetricList() {\n            return derivedMetrics;\n        }\n\n        function getSimpleMetricList() {\n            return simpleMetrics;\n        }\n\n        return {\n            getOrCreateMetric: getOrCreateMetric,\n            getOrCreateCumulativeMetric: getOrCreateCumulativeMetric,\n            getOrCreateConvertedMetric: getOrCreateConvertedMetric,\n            getOrCreateCumulativeConvertedMetric: getOrCreateCumulativeConvertedMetric,\n            getOrCreateDerivedMetric: getOrCreateDerivedMetric,\n            destroyMetric: destroyMetric,\n            destroyDerivedMetric: destroyDerivedMetric,\n            clearMetricList: clearMetricList,\n            clearDerivedMetricList: clearDerivedMetricList,\n            getSimpleMetricList: getSimpleMetricList,\n            getDerivedMetricList: getDerivedMetricList\n        };\n    }\n\n    angular\n        .module('metriclist', [\n            'pmapi',\n            'metric'\n        ])\n        .factory('MetricListService', MetricListService);\n\n })();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function() {\n  'use strict';\n\n  angular\n    .module('flamegraph', [\n       'dashboard'\n    ]);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n     /**\n     * @name FlameGraphService\n     */\n     function FlameGraphService($log, $rootScope, $http, toastr) {\n\n        /**\n        * @name generate\n        * @desc\n        */\n        function generate() {\n            $http.get($rootScope.properties.protocol + '://' + $rootScope.properties.host + ':' + $rootScope.properties.port + '/pmapi/' + $rootScope.properties.context + '/_fetch?names=generic.systack')\n                .success(function () {\n                    toastr.success('generic.systack requested.', 'Success');\n                }).error(function () {\n                    toastr.error('Failed requesting generic.systack.', 'Error');\n                });\n        }\n\n        return {\n            generate: generate\n        };\n    }\n\n    angular\n        .module('flamegraph')\n        .factory('FlameGraphService', FlameGraphService);\n\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function () {\n    'use strict';\n\n    function cpuFlameGraph($rootScope, $timeout, FlameGraphService, DashboardService) {\n\n        function link(scope) {\n            scope.host = $rootScope.properties.host;\n            scope.port = $rootScope.properties.port;\n            scope.context = $rootScope.properties.context;\n            scope.ready = false;\n            scope.processing = false;\n            scope.id = DashboardService.getGuid();\n            scope.generateFlameGraph = function(){\n                FlameGraphService.generate();\n                scope.ready = true;\n                scope.processing = true;\n                $timeout(function () {\n                    scope.processing = false;\n                }, 65000);\n            };\n        }\n\n        return {\n            restrict: 'A',\n            templateUrl: 'app/components/flamegraph/flamegraph.html',\n            link: link\n        };\n    }\n\n    angular\n        .module('flamegraph')\n        .directive('cpuFlameGraph', cpuFlameGraph);\n\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function() {\n  'use strict';\n\n  angular\n    .module('metric', [\n       'pmapi'\n    ]);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name SimpleMetric\n    * @desc\n    */\n    function SimpleMetric($rootScope) {\n\n        var Metric = function (name) {\n            this.name = name || null;\n            this.data = [];\n            this.subscribers = 1;\n            this.pmid = null;\n        };\n\n        Metric.prototype.toString = function () {\n            return this.name;\n        };\n\n        Metric.prototype.pushValue = function (timestamp, iid, iname, value) {\n            var self = this,\n                instance,\n                overflow;\n\n            instance = _.find(self.data, function (el) {\n                return el.iid === iid;\n            });\n\n            if (angular.isDefined(instance) && instance !== null) {\n                instance.values.push({ x: timestamp, y: value });\n                overflow = instance.values.length - ((parseInt($rootScope.properties.window) * 60) / parseInt($rootScope.properties.interval));\n                if (overflow > 0) {\n                    instance.values.splice(0, overflow);\n                }\n            } else {\n                instance = {\n                    key: angular.isDefined(iname) ? iname : this.name,\n                    iid: iid,\n                    values: [{x: timestamp, y: value}, {x: timestamp + 1, y: value}]\n                };\n                self.data.push(instance);\n            }\n        };\n\n        Metric.prototype.clearData = function () {\n            this.data.length = 0;\n        };\n\n        Metric.prototype.deleteInvalidInstances = function (currentInstances) {\n            var iid,\n                currentInstance,\n                index,\n                self = this;\n            angular.forEach(self.data, function(instance) {\n                currentInstance = _.find(currentInstances, function (el) {\n                    iid = angular.isUndefined(el.instance) ? 1 : el.instance;\n                    return iid === instance.iid;\n                });\n                if (angular.isUndefined(currentInstance)) {\n                    index = self.data.indexOf(instance);\n                    if (index > -1) {\n                        self.data.splice(index, 1);\n                    }\n                }\n            });\n        };\n\n        return Metric;\n    }\n\n    angular\n        .module('metric')\n        .factory('SimpleMetric', SimpleMetric);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function () {\n    'use strict';\n\n    /**\n    * @name MetricService\n    * @desc Provides Instances names\n    */\n    function MetricService($http, $rootScope, PMAPIService) {\n        return {\n            getInames: function (metric, iid) {\n                return PMAPIService.getInstanceDomainsByName($rootScope.properties.context, metric, [iid]);\n            }\n        };\n    }\n\n    angular\n      .module('metric')\n      .factory('MetricService', MetricService);\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name DerivedMetric\n    * @desc\n    */\n    function DerivedMetric($rootScope) {\n\n        var Metric = function (name, derivedFunction) {\n            this.name = name;\n            this.data = [];\n            this.subscribers = 1;\n            this.derivedFunction = derivedFunction;\n        };\n\n        Metric.prototype.updateValues = function () {\n            var self = this,\n                values;\n\n            values = self.derivedFunction(); // timestamp, key, data\n\n            if (values.length !== self.data.length) {\n                self.data.length = 0;\n            }\n\n            angular.forEach(values, function (data) {\n                var overflow,\n                    instance = _.find(self.data, function (el) {\n                        return el.key === data.key;\n                    });\n\n                if (angular.isUndefined(instance)) {\n                    instance = {\n                        key: data.key,\n                        values: [{x: data.timestamp, y: data.value}, {x: data.timestamp + 1, y: data.value}]\n                    };\n                    self.data.push(instance);\n                } else {\n                    instance.values.push({x: data.timestamp, y: data.value});\n                    overflow = instance.values.length - ((parseInt($rootScope.properties.window) * 60) / parseInt($rootScope.properties.interval));\n                    if (overflow > 0) {\n                        instance.values.splice(0, overflow);\n                    }\n                }\n            });\n        };\n\n        Metric.prototype.clearData = function () {\n            this.data.length = 0;\n        };\n\n        return Metric;\n    }\n\n    angular\n        .module('metric')\n        .factory('DerivedMetric', DerivedMetric);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name CumulativeConvertedMetric\n    * @desc\n    */\n    function CumulativeConvertedMetric($rootScope, $log, SimpleMetric) {\n\n        var Metric = function (name, conversionFunction) {\n            this.base = Metric;\n            this.base(name);\n            this.conversionFunction = conversionFunction;\n        };\n\n        Metric.prototype = new SimpleMetric();\n\n        Metric.prototype.pushValue = function (timestamp, iid, iname, value) {\n            var self = this,\n                instance,\n                overflow,\n                diffValue,\n                convertedValue;\n\n            instance = _.find(self.data, function (el) {\n                return el.iid === iid;\n            });\n\n            if (angular.isUndefined(instance)) {\n                instance = {\n                    key: angular.isDefined(iname) ? iname : this.name,\n                    iid: iid,\n                    values: [],\n                    previousValue: value,\n                    previousTimestamp: timestamp\n                };\n                self.data.push(instance);\n            } else {\n                diffValue = ((value - instance.previousValue) / (timestamp - instance.previousTimestamp)); // sampling frequency\n                convertedValue = self.conversionFunction(diffValue);\n                instance.values.push({ x: timestamp, y: convertedValue });\n                instance.previousValue = value;\n                instance.previousTimestamp = timestamp;\n                overflow = instance.values.length - ((parseInt($rootScope.properties.window) * 60) / parseInt($rootScope.properties.interval));\n                if (overflow > 0) {\n                    instance.values.splice(0, overflow);\n                }\n            }\n        };\n\n        return Metric;\n    }\n\n    angular\n        .module('metric')\n        .factory('CumulativeConvertedMetric', CumulativeConvertedMetric);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name CumulativeMetric\n    * @desc\n    */\n    function CumulativeMetric($rootScope, $log, SimpleMetric) {\n\n        var Metric = function (name) {\n            this.base = SimpleMetric;\n            this.base(name);\n        };\n\n        Metric.prototype = new SimpleMetric();\n\n        Metric.prototype.pushValue = function (timestamp, iid, iname, value) {\n            var self = this,\n                instance,\n                overflow,\n                diffValue;\n\n            instance = _.find(self.data, function (el) {\n                return el.iid === iid;\n            });\n\n            if (angular.isUndefined(instance)) {\n                instance = {\n                    key: angular.isDefined(iname) ? iname : this.name,\n                    iid: iid,\n                    values: [],\n                    previousValue: value,\n                    previousTimestamp: timestamp\n                };\n                self.data.push(instance);\n            } else {\n                diffValue = ((value - instance.previousValue) / ((timestamp - instance.previousTimestamp) / 1000)); // sampling frequency\n                if (instance.values.length < 1) {\n                  instance.values.push({ x: timestamp, y: diffValue }, { x: timestamp + 1, y: diffValue });\n                } else {\n                    instance.values.push({ x: timestamp, y: diffValue });\n                }\n                instance.previousValue = value;\n                instance.previousTimestamp = timestamp;\n                overflow = instance.values.length - ((parseInt($rootScope.properties.window) * 60) / parseInt($rootScope.properties.interval));\n                if (overflow > 0) {\n                    instance.values.splice(0, overflow);\n                }\n            }\n        };\n\n        return Metric;\n    }\n\n    angular\n        .module('metric')\n        .factory('CumulativeMetric', CumulativeMetric);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name ConvertedMetric\n    * @desc\n    */\n    function ConvertedMetric($rootScope, $log, SimpleMetric) {\n\n        var Metric = function (name, conversionFunction) {\n            this.base = SimpleMetric;\n            this.base(name);\n            this.conversionFunction = conversionFunction;\n        };\n\n        Metric.prototype = new SimpleMetric();\n\n        Metric.prototype.pushValue = function (timestamp, iid, iname, value) {\n            var self = this,\n                instance,\n                overflow,\n                convertedValue;\n\n            convertedValue = self.conversionFunction(value);\n\n            instance = _.find(self.data, function (el) {\n                return el.iid === iid;\n            });\n\n            if (angular.isDefined(instance) && instance !== null) {\n                instance.values.push({ x: timestamp, y: convertedValue });\n                overflow = instance.values.length - ((parseInt($rootScope.properties.window) * 60) / parseInt($rootScope.properties.interval));\n                if (overflow > 0) {\n                    instance.values.splice(0, overflow);\n                }\n            } else {\n                instance = {\n                    key: angular.isDefined(iname) ? iname : this.name,\n                    iid: iid,\n                    values: [{x: timestamp, y: convertedValue}, {x: timestamp + 1, y: convertedValue}]\n                };\n                self.data.push(instance);\n            }\n        };\n\n        return Metric;\n    }\n\n    angular\n        .module('metric')\n        .factory('ConvertedMetric', ConvertedMetric);\n })();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function() {\n  'use strict';\n\n  angular\n    .module('datamodel', [\n       'containermetadata',\n       'dashboard',\n       'metriclist'\n    ]);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name SimpleMetricDataModel\n    * @desc\n    */\n    function SimpleMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metric = MetricListService.getOrCreateMetric(this.name);\n\n            this.updateScope(this.metric.data);\n\n        };\n\n        DataModel.prototype.destroy = function () {\n            MetricListService.destroyMetric(this.name);\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('MetricDataModel', SimpleMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name PerCpuUtilizationMetricDataModel\n    * @desc\n    */\n    function PerCpuUtilizationMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var cpuSysMetric = MetricListService.getOrCreateCumulativeMetric('kernel.percpu.cpu.sys'),\n                cpuUserMetric = MetricListService.getOrCreateCumulativeMetric('kernel.percpu.cpu.user'),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    cpuUserInstance,\n                    cpuSysLastValue,\n                    cpuUserLastValue;\n\n                angular.forEach(cpuSysMetric.data, function (cpuSysInstance) {\n                    if (cpuSysInstance.values.length > 0) {\n                        cpuUserInstance = _.find(cpuUserMetric.data, function (el) {\n                            return el.key === cpuSysInstance.key;\n                        });\n                        if (angular.isDefined(cpuUserInstance)) {\n                            cpuSysLastValue = cpuSysInstance.values[cpuSysInstance.values.length - 1];\n                            cpuUserLastValue = cpuUserInstance.values[cpuUserInstance.values.length - 1];\n                            if (cpuSysLastValue.x === cpuUserLastValue.x) {\n                                returnValues.push({\n                                    timestamp: cpuSysLastValue.x,\n                                    key: cpuSysInstance.key,\n                                    value: (cpuSysLastValue.y + cpuUserLastValue.y) / 1000\n                                });\n                            }\n                        }\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('kernel.percpu.cpu.sys');\n            MetricListService.destroyMetric('kernel.percpu.cpu.user');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('PerCpuUtilizationMetricDataModel', PerCpuUtilizationMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n (function () {\n     'use strict';\n\n    /**\n    * @name NetworkBytesMetricDataModel\n    * @desc\n    */\n    function NetworkBytesMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var widgetDefinition = this;\n            // create create base metrics\n            var inMetric = MetricListService.getOrCreateCumulativeMetric('network.interface.in.bytes'),\n                outMetric = MetricListService.getOrCreateCumulativeMetric('network.interface.out.bytes'),\n                derivedFunction;\n\n            // create derived function\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue;\n\n                var pushReturnValues = function(instance, metricName) {\n                    if (instance.values.length > 0 && instance.key.indexOf(widgetDefinition.widgetScope.widget.filter) !==-1) {\n                        lastValue = instance.values[instance.values.length - 1];\n                        returnValues.push({\n                            timestamp: lastValue.x,\n                            key: instance.key + metricName,\n                            value: lastValue.y / 1024\n                        });\n                    }\n                };\n\n                angular.forEach(inMetric.data, function (instance) {\n                    pushReturnValues(instance, ' in');\n                });\n\n                angular.forEach(outMetric.data, function (instance) {\n                    pushReturnValues(instance, ' out');\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('network.interface.in.bytes');\n            MetricListService.destroyMetric('network.interface.out.bytes');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('NetworkBytesMetricDataModel', NetworkBytesMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name MultipleMetricDataModel\n    * @desc\n    */\n    function MultipleMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metricDefinitions = this.dataModelOptions.metricDefinitions;\n\n            var derivedFunction,\n                metrics = {};\n\n            angular.forEach(this.metricDefinitions, function (definition, key) {\n                metrics[key] = MetricListService.getOrCreateMetric(definition);\n            });\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue;\n\n                angular.forEach(metrics, function (metric, key) {\n                    angular.forEach(metric.data, function (instance) {\n                        if (instance.values.length > 0) {\n                            lastValue = instance.values[instance.values.length - 1];\n                            returnValues.push({\n                                timestamp: lastValue.x,\n                                key: key.replace('{key}', instance.key),\n                                value: lastValue.y\n                            });\n                        }\n                    });\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            angular.forEach(this.metricDefinitions, function (definition) {\n                MetricListService.destroyMetric(definition);\n            });\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('MultipleMetricDataModel', MultipleMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name MultipleCumulativeMetricDataModel\n    * @desc\n    */\n    function MultipleCumulativeMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metricDefinitions = this.dataModelOptions.metricDefinitions;\n\n\n            var widgetDefinition = this,\n                metrics = {},\n                derivedFunction;\n\n            angular.forEach(this.metricDefinitions, function (definition, key) {\n                metrics[key] = MetricListService.getOrCreateCumulativeMetric(definition);\n            });\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue;\n\n                angular.forEach(metrics, function (metric, key) {\n                    angular.forEach(metric.data, function (instance) {\n                        if (instance.values.length > 0  && ( angular.isUndefined(widgetDefinition.widgetScope.widget.filter) || instance.key.indexOf(widgetDefinition.widgetScope.widget.filter) !==-1)) {\n                            lastValue = instance.values[instance.values.length - 1];\n                            returnValues.push({\n                                timestamp: lastValue.x,\n                                key: key.replace('{key}', instance.key),\n                                value: lastValue.y\n                            });\n                        }\n                    });\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            angular.forEach(this.metricDefinitions, function (definition) {\n                MetricListService.destroyMetric(definition);\n            });\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('MultipleCumulativeMetricDataModel', MultipleCumulativeMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name MemoryUtilizationMetricDataModel\n    * @desc\n    */\n    function MemoryUtilizationMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var conversionFunction = function (value) {\n                    return value / 1024;\n                },\n                cachedMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.cached', conversionFunction),\n                usedMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.used', conversionFunction),\n                freeMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.free', conversionFunction),\n                buffersMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.bufmem', conversionFunction),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    usedValue,\n                    cachedValue,\n                    freeValue,\n                    buffersValue;\n\n\n                usedValue = (function () {\n                    if (usedMemMetric.data.length > 0) {\n                        var instance = usedMemMetric.data[usedMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                cachedValue = (function () {\n                    if (cachedMemMetric.data.length > 0) {\n                        var instance = cachedMemMetric.data[cachedMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                freeValue = (function () {\n                    if (freeMemMetric.data.length > 0) {\n                        var instance = freeMemMetric.data[freeMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                buffersValue = (function () {\n                    if (buffersMemMetric.data.length > 0) {\n                        var instance = buffersMemMetric.data[buffersMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                if (angular.isDefined(usedValue) &&\n                    angular.isDefined(cachedValue) &&\n                    angular.isDefined(buffersValue)) {\n\n                    returnValues.push({\n                        timestamp: usedValue.x,\n                        key: 'application',\n                        value: usedValue.y - cachedValue.y - buffersValue.y\n                    });\n                }\n\n                if (angular.isDefined(cachedValue) &&\n                    angular.isDefined(buffersValue)) {\n\n                    returnValues.push({\n                        timestamp: usedValue.x,\n                        key: 'free (cache)',\n                        value: cachedValue.y + buffersValue.y\n                    });\n                }\n\n                if (angular.isDefined(freeValue)) {\n\n                    returnValues.push({\n                        timestamp: usedValue.x,\n                        key: 'free (unused)',\n                        value: freeValue.y\n                    });\n                }\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('mem.util.cached');\n            MetricListService.destroyMetric('mem.util.used');\n            MetricListService.destroyMetric('mem.util.free');\n            MetricListService.destroyMetric('mem.util.bufmem');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('MemoryUtilizationMetricDataModel', MemoryUtilizationMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name DummyMetricDataModel\n    * @desc\n    */\n    function DummyMetricDataModel(WidgetDataModel, MetricListService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.metric = MetricListService.getOrCreateMetric('kernel.uname.release');\n        };\n\n        DataModel.prototype.destroy = function () {\n            MetricListService.destroyMetric('kernel.uname.release');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('DummyMetricDataModel', DummyMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name DiskLatencyMetricDataModel\n    * @desc\n    */\n    function DiskLatencyMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var readActiveMetric = MetricListService.getOrCreateCumulativeMetric('disk.dev.read_rawactive'),\n                writeActiveMetric = MetricListService.getOrCreateCumulativeMetric('disk.dev.write_rawactive'),\n                readMetric = MetricListService.getOrCreateCumulativeMetric('disk.dev.read'),\n                writeMetric = MetricListService.getOrCreateCumulativeMetric('disk.dev.write'),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    rawactiveInstance,\n                    lastValue,\n                    rawactiveLastValue,\n                    value;\n\n                function calculateValues(metric, rawactiveMetric, key, outputArr) {\n                    if (metric.data.length > 0) {\n                        angular.forEach(metric.data, function (instance) {\n                            rawactiveInstance = _.find(rawactiveMetric.data, function (element) {\n                                return element.key === instance.key;\n                            });\n                            if (angular.isDefined(rawactiveInstance)) {\n                                if (instance.values.length > 0) {\n                                    if (rawactiveInstance.values.length > 0) {\n                                        lastValue = instance.values[instance.values.length - 1];\n                                        rawactiveLastValue = rawactiveInstance.values[instance.values.length - 1];\n                                        if (lastValue.y > 0) {\n                                            value = rawactiveLastValue.y / lastValue.y;\n                                        } else {\n                                            value = 0;\n                                        }\n                                        outputArr.push({\n                                            timestamp: lastValue.x,\n                                            key: instance.key + key,\n                                            value: value\n                                        });\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n\n                calculateValues(readMetric, readActiveMetric, ' read latency', returnValues);\n                calculateValues(writeMetric, writeActiveMetric, ' write latency', returnValues);\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('disk.dev.read_rawactive');\n            MetricListService.destroyMetric('disk.dev.write_rawactive');\n            MetricListService.destroyMetric('disk.dev.read');\n            MetricListService.destroyMetric('disk.dev.write');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('DiskLatencyMetricDataModel', DiskLatencyMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CumulativeUtilizationMetricDataModel\n    * @desc\n    */\n    function CumulativeUtilizationMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var rawMetric = MetricListService.getOrCreateCumulativeMetric(this.name),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue;\n\n                angular.forEach(rawMetric.data, function (instance) {\n                    if (instance.values.length > 0) {\n                        lastValue = instance.values[instance.values.length - 1];\n                        returnValues.push({\n                            timestamp: lastValue.x,\n                            key: instance.key,\n                            value: lastValue.y / 1000\n                        });\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric(this.name);\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CumulativeUtilizationMetricDataModel', CumulativeUtilizationMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CumulativeMetricDataModel\n    * @desc\n    */\n    function CumulativeMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metric = MetricListService.getOrCreateCumulativeMetric(this.name);\n\n            this.updateScope(this.metric.data);\n\n        };\n\n        DataModel.prototype.destroy = function () {\n            MetricListService.destroyMetric(this.name);\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CumulativeMetricDataModel', CumulativeMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CpuUtilizationMetricDataModel\n    * @desc\n    */\n    function CpuUtilizationMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var cpuSysMetric = MetricListService.getOrCreateCumulativeMetric('kernel.all.cpu.sys'),\n                cpuUserMetric = MetricListService.getOrCreateCumulativeMetric('kernel.all.cpu.user'),\n                ncpuMetric = MetricListService.getOrCreateMetric('hinv.ncpu'),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    cpuInstance,\n                    cpuCount;\n\n                if (ncpuMetric.data.length > 0) {\n                    cpuInstance = ncpuMetric.data[ncpuMetric.data.length - 1];\n\n                    if (cpuInstance.values.length > 0) {\n                        cpuCount = cpuInstance.values[cpuInstance.values.length - 1].y;\n\n                        var pushReturnValues = function(instance, keyName) {\n                            if (instance.values.length > 0) {\n                                var lastValue = instance.values[instance.values.length - 1];\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: keyName,\n                                    value: lastValue.y / (cpuCount * 1000)\n                                });\n                            }\n                        };\n\n                        angular.forEach(cpuSysMetric.data, function (instance) {\n                            pushReturnValues(instance, 'sys');\n                        });\n\n                        angular.forEach(cpuUserMetric.data, function (instance) {\n                            pushReturnValues(instance, 'user');\n                        });\n                    }\n                }\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('kernel.all.cpu.sys');\n            MetricListService.destroyMetric('kernel.all.cpu.user');\n            MetricListService.destroyMetric('hinv.ncpu');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CpuUtilizationMetricDataModel', CpuUtilizationMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name SimpleMetricDataModel\n    * @desc\n    */\n    function ConvertedMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n\n            this.conversionFunction = this.dataModelOptions.conversionFunction;\n\n            this.metric = MetricListService.getOrCreateConvertedMetric(this.name, this.conversionFunction);\n\n            this.updateScope(this.metric.data);\n\n        };\n\n        DataModel.prototype.destroy = function () {\n            MetricListService.destroyMetric(this.name);\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('ConvertedMetricDataModel', ConvertedMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name ContainerNetworkBytesMetricDataModel\n    * @desc\n    */\n    function ContainerNetworkBytesMetricDataModel(WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var widgetDefinition = this;\n            // create create base metrics\n            var inMetric = MetricListService.getOrCreateCumulativeMetric('network.interface.in.bytes'),\n                outMetric = MetricListService.getOrCreateCumulativeMetric('network.interface.out.bytes'),\n                derivedFunction;\n\n            // create derived function\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue;\n\n                angular.forEach(inMetric.data, function (instance) {\n                    if (instance.values.length > 0 && instance.key.indexOf('veth') !== -1 && instance.key.indexOf(widgetDefinition.widgetScope.widget.filter) !==-1) {\n                        lastValue = instance.values[instance.values.length - 1];\n                        returnValues.push({\n                            timestamp: lastValue.x,\n                            key: instance.key + ' in',\n                            value: lastValue.y / 1024\n                        });\n                    }\n                });\n\n                angular.forEach(outMetric.data, function (instance) {\n                    if (instance.values.length > 0 && instance.key.indexOf('veth') !==- 1 && instance.key.indexOf(widgetDefinition.widgetScope.widget.filter) !==-1) {\n                        lastValue = instance.values[instance.values.length - 1];\n                        returnValues.push({\n                            timestamp: lastValue.x,\n                            key: instance.key + ' out',\n                            value: lastValue.y / 1024\n                        });\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric('container.network.interface', derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric('container.network.interface');\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('network.interface.in.bytes');\n            MetricListService.destroyMetric('network.interface.out.bytes');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('ContainerNetworkBytesMetricDataModel', ContainerNetworkBytesMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name ContainerMultipleMetricDataModel\n    * @desc\n    */\n    function ContainerMultipleMetricDataModel(WidgetDataModel, MetricListService, DashboardService, ContainerMetadataService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metricDefinitions = this.dataModelOptions.metricDefinitions;\n\n            var derivedFunction,\n                metrics = {};\n\n            angular.forEach(this.metricDefinitions, function (definition, key) {\n                metrics[key] = MetricListService.getOrCreateMetric(definition);\n            });\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue,\n                    name;\n\n                angular.forEach(metrics, function (metric, key) {\n                    angular.forEach(metric.data, function (instance) {\n\n                        if (ContainerMetadataService.containerIdExist(instance.key)) {\n                            name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                            if (instance.values.length > 0 && ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n                                lastValue = instance.values[instance.values.length - 1];\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: key.replace('{key}', name),\n                                    value: lastValue.y\n                                });\n                            }\n                        }\n                    });\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            angular.forEach(this.metricDefinitions, function (definition) {\n                MetricListService.destroyMetric(definition);\n            });\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('ContainerMultipleMetricDataModel', ContainerMultipleMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name ContainerMultipleCumulativeMetricDataModel\n    * @desc\n    */\n    function ContainerMultipleCumulativeMetricDataModel(WidgetDataModel, MetricListService, DashboardService, ContainerMetadataService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            this.metricDefinitions = this.dataModelOptions.metricDefinitions;\n\n            var derivedFunction,\n                metrics = {};\n\n            angular.forEach(this.metricDefinitions, function (definition, key) {\n                metrics[key] = MetricListService.getOrCreateCumulativeMetric(definition);\n            });\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue,\n                    name;\n\n                angular.forEach(metrics, function (metric, key) {\n                    angular.forEach(metric.data, function (instance) {\n\n                        if (ContainerMetadataService.containerIdExist(instance.key)) {\n                            name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                            if (instance.values.length > 0 && ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n                                lastValue = instance.values[instance.values.length - 1];\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: key.replace('{key}', name),\n                                    value: lastValue.y\n                                });\n                            }\n                        }\n                    });\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            angular.forEach(this.metricDefinitions, function (definition) {\n                MetricListService.destroyMetric(definition);\n            });\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('ContainerMultipleCumulativeMetricDataModel', ContainerMultipleCumulativeMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name ContainerMemoryUsageMetricDataModel\n    * @desc\n    */\n    function ContainerMemoryUsageMetricDataModel(WidgetDataModel, MetricListService, DashboardService, ContainerMetadataService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            var cgroupConversionFunction = function (value) {\n                    return value / 1024 / 1024;\n                },\n                memConversionFunction = function (value) {\n                    return value / 1024;\n                },\n                usedMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.used', memConversionFunction),\n                freeMemMetric = MetricListService.getOrCreateConvertedMetric('mem.util.free', memConversionFunction),\n                containerMemMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.usage', cgroupConversionFunction),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    usedValue,\n                    freeValue,\n                    containerValue;\n\n\n                usedValue = (function () {\n                    if (usedMemMetric.data.length > 0) {\n                        var instance = usedMemMetric.data[usedMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                freeValue = (function () {\n                    if (freeMemMetric.data.length > 0) {\n                        var instance = freeMemMetric.data[freeMemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                containerValue = (function () {\n                    if (containerMemMetric.data.length > 0) {\n                        var total = 0;\n                        var timestamp = containerMemMetric.data[containerMemMetric.data.length - 1].values[containerMemMetric.data[containerMemMetric.data.length - 1].values.length - 1].x;\n                        angular.forEach(containerMemMetric.data, function (instance) {\n                            if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                                total = total + instance.values[instance.values.length - 1].y;\n                            }\n                        });\n                        return {\n                            x: timestamp,\n                            y: total\n                        };\n                    }\n                }());\n\n                if (angular.isDefined(usedValue) &&\n                    angular.isDefined(containerValue)) {\n\n                    returnValues.push({\n                        timestamp: usedValue.x,\n                        key: 'host used',\n                        value: usedValue.y - containerValue.y\n                    });\n\n                }\n\n                if (angular.isDefined(freeValue)) {\n\n                    returnValues.push({\n                        timestamp: freeValue.x,\n                        key: 'free (unused)',\n                        value: freeValue.y\n                    });\n                }\n\n                if (angular.isDefined(containerValue) &&\n                    angular.isDefined(usedValue)) {\n                    returnValues.push({\n                        timestamp: containerValue.x,\n                        key: 'container used',\n                        value: containerValue.y\n                    });\n                }\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('mem.util.used');\n            MetricListService.destroyMetric('mem.util.free');\n            MetricListService.destroyMetric('cgroup.memory.usage');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('ContainerMemoryUsageMetricDataModel', ContainerMemoryUsageMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/* global _*/\n (function () {\n     'use strict';\n\n    /**\n    * @name CgroupMemoryUtilizationMetricDataModel\n    * @desc\n    */\n    function CgroupMemoryUtilizationMetricDataModel(WidgetDataModel, MetricListService, DashboardService, ContainerMetadataService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var conversionFunction = function (value) {\n                    return value / 1024 / 1024;\n                },\n                physmemConversionFunction = function (value) {\n                    return value / 1024;\n                },\n                usageMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.usage', conversionFunction),\n                limitMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.limit', conversionFunction),\n                physmemMetric = MetricListService.getOrCreateConvertedMetric('mem.physmem', physmemConversionFunction),\n                derivedFunction;\n\n            // create derived function\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastPhysmemValue;\n\n                lastPhysmemValue = (function () {\n                    if (physmemMetric.data.length > 0) {\n                        var instance = physmemMetric.data[physmemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                angular.forEach(usageMetric.data, function (instance) {\n                  if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                        var lastValue = instance.values[instance.values.length - 1];\n                        var name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                        if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)){\n                            var limitInstance = _.find(limitMetric.data, function(el) {\n                                return el.key === instance.key;\n                            });\n\n                            if (angular.isDefined(limitInstance)) {\n                                var lastLimitValue = limitInstance.values[limitInstance.values.length - 1];\n\n                                if (lastLimitValue.y >= lastPhysmemValue.y) {\n                                    returnValues.push({\n                                        timestamp: lastValue.x,\n                                        key: name,\n                                        value: lastValue.y / lastPhysmemValue.y\n                                    });\n                                } else {\n                                    returnValues.push({\n                                        timestamp: lastValue.x,\n                                        key: name,\n                                        value: lastValue.y / lastLimitValue.y\n                                    });\n                                }\n                            }\n                        }\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('cgroup.memory.usage');\n            MetricListService.destroyMetric('cgroup.memory.limit');\n            MetricListService.destroyMetric('mem.physmem');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CgroupMemoryUtilizationMetricDataModel', CgroupMemoryUtilizationMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CgroupMemoryUsageMetricTimeSeriesDataModel\n    * @desc\n    */\n    function CgroupMemoryUsageMetricTimeSeriesDataModel(ContainerMetadataService, WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var conversionFunction = function (value) {\n                    return value / 1024 / 1024;\n                },\n                usageMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.usage', conversionFunction),\n                derivedFunction;\n\n\n            // create derived function\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue,\n                    name;\n\n                angular.forEach(usageMetric.data, function (instance) {\n                    if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                        lastValue = instance.values[instance.values.length - 1];\n                        name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                        if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)){\n                            returnValues.push({\n                                timestamp: lastValue.x,\n                                key: name,\n                                value: lastValue.y\n                            });\n                        }\n\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('cgroup.memory.usage');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CgroupMemoryUsageMetricTimeSeriesDataModel', CgroupMemoryUsageMetricTimeSeriesDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CgroupMemoryHeadroomMetricDataModel\n    * @desc\n    */\n    function CgroupMemoryHeadroomMetricDataModel(WidgetDataModel, MetricListService, DashboardService, ContainerMetadataService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var conversionFunction = function (value) {\n                    return value / 1024 / 1024;\n                },\n                physmemConversionFunction = function (value) {\n                    return value / 1024;\n                },\n                usageMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.usage', conversionFunction),\n                limitMetric = MetricListService.getOrCreateConvertedMetric('cgroup.memory.limit', conversionFunction),\n                physmemMetric = MetricListService.getOrCreateConvertedMetric('mem.physmem', physmemConversionFunction),\n                derivedFunction;\n\n            // create derived function\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastPhysmemValue;\n\n                lastPhysmemValue = (function () {\n                    if (physmemMetric.data.length > 0) {\n                        var instance = physmemMetric.data[physmemMetric.data.length - 1];\n                        if (instance.values.length > 0) {\n                            return instance.values[instance.values.length - 1];\n                        }\n                    }\n                }());\n\n                angular.forEach(usageMetric.data, function (instance) {\n                  if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                        var lastValue = instance.values[instance.values.length - 1];\n                        var name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                        if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)){\n                            returnValues.push({\n                                timestamp: lastValue.x,\n                                key: name + ' used',\n                                value: lastValue.y\n                            });\n                        }\n                    }\n                });\n\n                angular.forEach(limitMetric.data, function (instance) {\n                    if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                        var lastValue = instance.values[instance.values.length - 1];\n                        var name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n                        if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n                            if (lastValue.y >= lastPhysmemValue.y) {\n                                returnValues.push({\n                                    timestamp: lastPhysmemValue.x,\n                                    key: name + ' limit (physical)',\n                                    value: lastPhysmemValue.y\n                                });\n                            } else {\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: name + ' limit',\n                                    value: lastValue.y\n                                });\n                            }\n                        }\n                    }\n                });\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('cgroup.memory.usage');\n            MetricListService.destroyMetric('cgroup.memory.limit');\n            MetricListService.destroyMetric('mem.physmem');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CgroupMemoryHeadroomMetricDataModel', CgroupMemoryHeadroomMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n (function () {\n     'use strict';\n\n    /**\n    * @name CgroupCPUUsageMetricDataModel\n    * @desc\n    */\n    function CgroupCPUUsageMetricDataModel(ContainerMetadataService, WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var cpuUsageMetric = MetricListService.getOrCreateCumulativeMetric('cgroup.cpuacct.usage'),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [],\n                    lastValue,\n                    name;\n\n                if ( cpuUsageMetric.data.length > 0){\n                    angular.forEach(cpuUsageMetric.data, function (instance) {\n\n                        if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                            lastValue = instance.values[instance.values.length - 1];\n                            name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n\n                            if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: name,\n                                    value: lastValue.y / 1000 / 1000 / 1000\n                                });\n                            }\n                        }\n                    });\n                }\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('cgroup.cpuacct.usage');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CgroupCPUUsageMetricDataModel', CgroupCPUUsageMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*global _*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name CgroupCPUHeadroomMetricDataModel\n    * @desc\n    */\n    function CgroupCPUHeadroomMetricDataModel(ContainerMetadataService, WidgetDataModel, MetricListService, DashboardService) {\n        var DataModel = function () {\n            return this;\n        };\n\n        DataModel.prototype = Object.create(WidgetDataModel.prototype);\n\n        DataModel.prototype.init = function () {\n            WidgetDataModel.prototype.init.call(this);\n            this.name = this.dataModelOptions ? this.dataModelOptions.name : 'metric_' + DashboardService.getGuid();\n\n            // create create base metrics\n            var cpuUsageMetric = MetricListService.getOrCreateCumulativeMetric('cgroup.cpuacct.usage'),\n                cpuSharesMetric = MetricListService.getOrCreateMetric('cgroup.cpusched.shares'),\n                cpuPeriodsMetric = MetricListService.getOrCreateMetric('cgroup.cpusched.periods'),\n                ncpuMetric = MetricListService.getOrCreateMetric('hinv.ncpu'),\n                derivedFunction;\n\n            derivedFunction = function () {\n                var returnValues = [];\n\n                if ( cpuUsageMetric.data.length > 0){\n                    angular.forEach(cpuUsageMetric.data, function (instance) {\n\n                        if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                            var lastValue = instance.values[instance.values.length - 1];\n                            var name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n\n                            if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n                                returnValues.push({\n                                    timestamp: lastValue.x,\n                                    key: name,\n                                    value: lastValue.y / 1000 / 1000 / 1000\n                                });\n                            }\n                        }\n                    });\n                }\n\n                if ( cpuPeriodsMetric.data.length > 0) {\n                    angular.forEach(cpuPeriodsMetric.data, function (instance) {\n\n                        if (instance.values.length > 0 && ContainerMetadataService.containerIdExist(instance.key)) {\n                            var lastValue = instance.values[instance.values.length - 1];\n                            var name = ContainerMetadataService.idDictionary(instance.key) || instance.key;\n\n                            if (ContainerMetadataService.checkContainerName(name) && ContainerMetadataService.checkContainerFilter(name)) {\n\n                                if (lastValue.y > 0) {\n                                    var cpuSharesInstance = _.find(cpuSharesMetric.data, function(el) {\n                                        return el.key === instance.key;\n                                    });\n\n                                    if (angular.isDefined(cpuSharesInstance)) {\n                                        var cpuSharesValue = cpuSharesInstance.values[cpuSharesInstance.values.length - 1];\n                                        returnValues.push({\n                                            timestamp: lastValue.x,\n                                            key: name + ' (limit)',\n                                            value: cpuSharesValue.y / lastValue.y\n                                        });\n                                    }\n                                } else {\n                                    if (ncpuMetric.data.length > 0) {\n                                        var ncpuInstance = ncpuMetric.data[ncpuMetric.data.length - 1];\n                                        if (ncpuInstance.values.length > 0) {\n                                            var ncpuValue = ncpuInstance.values[ncpuInstance.values.length - 1];\n                                            returnValues.push({\n                                                timestamp: ncpuValue.x,\n                                                key: name + ' (physical)',\n                                                value: ncpuValue.y\n                                            });\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                return returnValues;\n            };\n\n            // create derived metric\n            this.metric = MetricListService.getOrCreateDerivedMetric(this.name, derivedFunction);\n\n            this.updateScope(this.metric.data);\n        };\n\n        DataModel.prototype.destroy = function () {\n            // remove subscribers and delete derived metric\n            MetricListService.destroyDerivedMetric(this.name);\n\n            // remove subscribers and delete base metrics\n            MetricListService.destroyMetric('cgroup.cpuacct.usage');\n\n            WidgetDataModel.prototype.destroy.call(this);\n        };\n\n        return DataModel;\n    }\n\n    angular\n        .module('datamodel')\n        .factory('CgroupCPUHeadroomMetricDataModel', CgroupCPUHeadroomMetricDataModel);\n })();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*global _*/\n\n (function () {\n     'use strict';\n\n     /**\n     * @name DashboardService\n     * @desc\n     */\n     function DashboardService($rootScope, $http, $interval, $log, $location, toastr, config, PMAPIService, MetricListService, ContainerMetadataService) {\n        var loopErrors = 0,\n            intervalPromise;\n\n        /**\n        * @name cancelInterval\n        * @desc\n        */\n        function cancelInterval() {\n            if (intervalPromise) {\n                $interval.cancel(intervalPromise);\n            }\n        }\n\n        /**\n        * @name updateMetricsCallback\n        * @desc\n        */\n        function updateMetricsCallback(success) {\n            if (!success) {\n                toastr.error('Failed fetching metrics. Trying again.', 'Error');\n                loopErrors = loopErrors + 1;\n            } else {\n                loopErrors = 0;\n            }\n            if (loopErrors > 5) {\n                cancelInterval(intervalPromise);\n                loopErrors = 0;\n                $rootScope.properties.context = '-1';\n                $rootScope.flags.contextAvailable = false;\n                toastr.error('Consistently failed fetching metrics from host (>5). Please update the hostname to resume operation.', 'Error');\n            }\n        }\n\n        /**\n        * @name updateMetrics\n        * @desc\n        */\n        function updateMetrics(callback) {\n            var metricArr = [],\n                pmidArr = [],\n                context = $rootScope.properties.context,\n                simpleMetrics = MetricListService.getSimpleMetricList();\n\n            if (context && context > 0 && simpleMetrics.length > 0) {\n                angular.forEach(simpleMetrics, function (value) {\n                    if (angular.isDefined(value.pmid) && value.pmid !== null) {\n                        pmidArr.push(value.pmid);\n                    } else {\n                        metricArr.push(value.name);\n                    }\n                });\n\n                PMAPIService.getMetrics(context, metricArr, pmidArr)\n                    .then(function (metrics) {\n                        var name,\n                            metricInstance,\n                            iid,\n                            iname;\n\n                        if (metrics.values.length !== simpleMetrics.length) {\n                            var currentMetric;\n\n                            angular.forEach(simpleMetrics, function (metric) {\n                                currentMetric= _.find(metrics.values, function (el) {\n                                    return el.name === metric.name;\n                                });\n                                if (angular.isUndefined(currentMetric)) {\n                                    metric.clearData();\n                                }\n                            });\n                        }\n\n                        angular.forEach(metrics.values, function (value) {\n                            name = value.name;\n\n                            metricInstance = _.find(simpleMetrics, function (el) {\n                                return el.name === name;\n                            });\n\n                            if(value.instances.length !== metricInstance.data.length) {\n                                metricInstance.deleteInvalidInstances(value.instances);\n                            }\n\n                            if (angular.isDefined(metricInstance) && metricInstance !== null) {\n                                if(!angular.isNumber(metricInstance.pmid)) {\n                                    metricInstance.pmid = value.pmid;\n                                }\n\n                                angular.forEach(value.instances, function (instance) {\n                                    iid = angular.isUndefined(instance.instance) ? 1 : instance.instance;\n                                    iname = metrics.inames[name].inames[iid];\n\n                                    metricInstance.pushValue(metrics.timestamp, iid, iname, instance.value);\n                                });\n                            }\n                        });\n                    }).then(\n                        function () {\n                            callback(true);\n                            $rootScope.$broadcast('updateMetrics');\n                        },\n                        function (response) {\n                            if(response.status === 400 && response.data.indexOf('-12376') !== -1) {\n                                updateContext();\n                            }\n                            callback(false);\n                    });\n            }\n        }\n\n        /**\n        * @name updateDerivedMetrics\n        * @desc\n        */\n        function updateDerivedMetrics() {\n            var derivedMetrics = MetricListService.getDerivedMetricList();\n            if (derivedMetrics.length > 0) {\n                angular.forEach(derivedMetrics, function (metric) {\n                    metric.updateValues();\n                });\n                $rootScope.$broadcast('updateDerivedMetrics');\n            }\n        }\n\n        /**\n        * @name intervalFunction\n        * @desc\n        */\n        function intervalFunction() {\n            updateMetrics(updateMetricsCallback);\n            updateDerivedMetrics();\n        }\n\n        /**\n        * @name updateInterval\n        * @desc\n        */\n        function updateInterval() {\n            cancelInterval(intervalPromise);\n\n            if ($rootScope.properties.host) {\n                if ($rootScope.properties.context &&\n                    $rootScope.properties.context > 0) {\n                    intervalPromise = $interval(intervalFunction, parseInt($rootScope.properties.interval) * 1000);\n                } else {\n                    toastr.error('Vector is not connected to the host. Please update the hostname to resume operation.', 'Error');\n                }\n            }\n        }\n\n        /**\n        * @name parseHostInput\n        * @desc\n        */\n        function parseHostInput(host) {\n            var hostMatch = null;\n            if (host) {\n                hostMatch = host.match('(.*):([0-9]*)');\n                if (hostMatch !== null) {\n                    $rootScope.properties.host = hostMatch[1];\n                    $rootScope.properties.port = hostMatch[2];\n                } else {\n                    $rootScope.properties.host = host;\n                }\n            }\n        }\n\n        /**\n        * @name updateContext\n        * @desc\n        */\n        function updateContext() {\n            $rootScope.flags.contextUpdating = true;\n            $rootScope.flags.contextAvailable = false;\n\n            PMAPIService.getHostspecContext($rootScope.properties.hostspec, 600)\n                .then(function (data) {\n                    $rootScope.flags.contextUpdating = false;\n                    $rootScope.flags.contextAvailable = true;\n                    $rootScope.properties.context = data;\n                    updateInterval();\n                    PMAPIService.getMetrics(data, ['pmcd.hostname'])\n                        .then(function (data) {\n                            $rootScope.properties.hostname = data.values[0].instances[0].value;\n                        }, function () {\n                            $rootScope.properties.hostname = 'Hostname not available.';\n                            $log.error('Error fetching hostname.');\n                        });\n                }, function () {\n                    toastr.error('Failed fetching context from host. Try updating the hostname.', 'Error');\n                    $rootScope.flags.contextUpdating = false;\n                    $rootScope.flags.contextAvailable = false;\n                });\n        }\n\n        /**\n        * @name updateHost\n        * @desc\n        */\n        function updateHost(host) {\n            $location.search('host', host);\n            $location.search('hostspec', $rootScope.properties.hostspec);\n\n            $rootScope.properties.context = -1;\n            $rootScope.properties.hostname = null;\n            $rootScope.properties.port = config.port;\n\n            MetricListService.clearMetricList();\n            MetricListService.clearDerivedMetricList();\n\n            parseHostInput(host);\n            updateContext();\n        }\n\n        /**\n        * @name initialize\n        * @desc\n        */\n        function initialize() {\n            if ($rootScope.properties) {\n                if (!$rootScope.properties.interval) {\n                    $rootScope.properties.interval = config.interval;\n                }\n                if (!$rootScope.properties.window) {\n                    $rootScope.properties.window = config.window;\n                }\n                if (!$rootScope.properties.protocol) {\n                    $rootScope.properties.protocol = config.protocol;\n                }\n                if (!$rootScope.properties.host) {\n                    $rootScope.properties.host = '';\n                }\n                if (!$rootScope.properties.hostspec) {\n                    $rootScope.properties.hostspec = config.hostspec;\n                }\n                if (!$rootScope.properties.port) {\n                    $rootScope.properties.port = config.port;\n                }\n                if (!$rootScope.properties.context ||\n                    $rootScope.properties.context < 0) {\n                    updateContext();\n                } else {\n                    updateInterval();\n                }\n            } else {\n                $rootScope.properties = {\n                    protocol: config.protocol,\n                    host: '',\n                    hostspec: config.hostspec,\n                    port: config.port,\n                    context: -1,\n                    hostname: null,\n                    window: config.window,\n                    interval: config.interval,\n                    containerFilter: '',\n                    containerList: [],\n                    selectedContainer: ''\n                };\n            }\n\n            $rootScope.flags = {\n                contextAvailable: false,\n                contextUpdating: false,\n                isHostnameExpanded: config.expandHostname,\n                enableContainerWidgets: config.enableContainerWidgets,\n                disableHostspecInput: config.disableHostspecInput,\n                disableContainerFilter: config.disableContainerFilter,\n                disableContainerSelect: config.disableContainerSelect,\n                containerSelectOverride: config.containerSelectOverride,\n                disableContainerSelectNone: false,\n                disableHostnameInputContainerSelect: config.disableHostnameInputContainerSelect\n            };\n\n            if (config.enableContainerWidgets) {\n                ContainerMetadataService.initialize();\n            }\n        }\n\n        /**\n        * @name getGuid\n        * @desc\n        */\n        function getGuid() {\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        }\n\n        return {\n            cancelInterval: cancelInterval,\n            updateInterval: updateInterval,\n            updateHost: updateHost,\n            updateContext: updateContext,\n            getGuid: getGuid,\n            initialize: initialize\n        };\n    }\n\n    angular\n        .module('dashboard', [\n            'pmapi',\n            'metriclist',\n            'containermetadata'\n        ])\n        .factory('DashboardService', DashboardService);\n\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*eslint-disable angular/controller-as*/\n\n(function () {\n    'use strict';\n\n    function CustomWidgetSettingsCtrl($scope, $uibModalInstance, widget) {\n        $scope.widget = widget;\n        $scope.result = angular.extend({}, $scope.result, widget);\n\n        $scope.ok = function () {\n          $uibModalInstance.close($scope.result);\n        };\n\n        $scope.cancel = function () {\n          $uibModalInstance.dismiss('cancel');\n        };\n    }\n\n    angular\n        .module('customWidgetSettings', [])\n        .controller('CustomWidgetSettingsController', CustomWidgetSettingsCtrl);\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*global _*/\n\n (function () {\n     'use strict';\n\n     /**\n     * @name ContainerMetadataService\n     */\n     function ContainerMetadataService($http, $rootScope, $q, $interval, $routeParams, $location, $injector, $log, config, MetricListService) {\n\n        var containerParsedFromQuerystring = false,\n            containerNameResolver;\n\n        // loading containerNameResolver if it was defined\n        try {\n            containerNameResolver = $injector.get('containerNameResolver');\n        } catch(e) {\n            $log.debug(\"No external container name resolver defined.\");\n        }\n\n        /**\n        * @name idDictionary\n        * @desc\n        */\n        var idMap = {};\n        function idDictionary(key) {\n            return idMap[parseId(key)];\n        }\n\n        /**\n        * @name parseId\n        * @desc parses different types of docker ID\n        */\n        function parseId(id) {\n            //handle regular docker\n            if (id === null){\n                return false;\n            }\n            if (id.indexOf('docker/') !==-1){\n                id = id.split('/')[2];\n            //handle systemd\n            } else if (id.indexOf('/docker-') !==-1){\n                id = id.split('-')[1].split('.')[0];\n            }\n            return id;\n        }\n\n        /**\n        * @name clearIdDictionary\n        * @desc\n        */\n        function clearIdDictionary() {\n            idMap = {};\n        }\n\n        /**\n        * @name containerIdExist\n        * @desc returns true if id exists in the idMap\n        */\n        function containerIdExist(id) {\n            return (angular.isDefined(idMap[parseId(id)]) && idMap[parseId(id)] !== '');\n        }\n\n        /**\n        * @name updateMetrics\n        * @desc\n        */\n        function updateMetrics() {\n            updateIdDictionary();\n            $rootScope.properties.containerList = getContainerList();\n\n            //TODO: find a better way for parsing the container name from the query string just once.\n            if (containerParsedFromQuerystring) {\n                if($rootScope.properties.containerList.indexOf($routeParams.container) === -1) { // can't find the selected container in the list\n                    $rootScope.properties.selectedContainer = '';\n                }\n            } else {\n                if (angular.isDefined($routeParams.container)) {\n                    if ($rootScope.properties.containerList.indexOf($routeParams.container) !== -1) {\n                        $rootScope.properties.selectedContainer = $routeParams.container;\n                        $rootScope.flags.disableContainerSelectNone = true;\n                        containerParsedFromQuerystring = true;\n                    }\n                } else {\n                    containerParsedFromQuerystring = true;\n                }\n            }\n        }\n\n        /**;\n        * @name initialize\n        * @desc\n        */\n        /*eslint-disable no-unused-vars*/\n        var containerCgroups,\n            containerNames,\n            updateMetricsListener;\n        function initialize() {\n            containerCgroups = MetricListService.getOrCreateMetric('containers.cgroup');\n            containerNames = MetricListService.getOrCreateMetric('containers.name');\n\n            updateMetricsListener = $rootScope.$on('updateMetrics', updateMetrics);\n        }\n        /*eslint-enable no-unused-vars*/\n\n        /**\n        * @name resolveId\n        * @desc\n        */\n        function resolveId(instanceKey) {\n            var instanceName;\n            if(typeof containerNameResolver === 'undefined') {\n                if (!config.useCgroupId) {\n                    instanceName = _.find(containerNames.data, function (el) {\n                        return el.key === instanceKey;\n                    });\n                    if (instanceName) {\n                        return instanceName.values[instanceName.values.length - 1].y;\n                    }\n                }\n                return instanceKey.substring(0,12);\n            } else {\n                instanceName = _.find(containerNames.data, function (el) {\n                    return el.key === instanceKey;\n                });\n                return containerNameResolver.resolve(instanceKey, instanceName);\n            }\n        }\n\n        /**;\n        * @name updateIdDictionary\n        * @desc\n        */\n        function updateIdDictionary(){\n            //TODO: implement better logic to add and remove items from idMap. Always creating a new object and resolving all names is expensive.\n            idMap = containerCgroups.data.reduce(function(obj, item) {\n                obj[item.key] = resolveId(item.key);\n                return obj;\n            },{});\n        }\n\n        /**\n        * @name getContainerList\n        * @desc\n        */\n        function getContainerList() {\n            return containerCgroups.data.reduce(function(obj, item) {\n                var resolved = resolveId(item.key);\n                if (angular.isDefined(resolved)){\n                    obj.push(resolved);\n                }\n                return obj;\n            },[]);\n        }\n\n        /**\n        * @name checkContainerFilter\n        * @desc\n        */\n        function checkContainerFilter(name){\n            return ($rootScope.properties.containerFilter === '' || name.indexOf($rootScope.properties.containerFilter) !==-1);\n        }\n\n        /**\n        * @name checkContainerName\n        * @desc\n        */\n        function checkContainerName(name){\n            return ($rootScope.properties.selectedContainer === '' || name.indexOf($rootScope.properties.selectedContainer) !== -1);\n        }\n\n        /**\n        * @name updateContainer\n        * @desc\n        */\n        function updateContainer(){\n            $location.search('container', $rootScope.properties.selectedContainer);\n            if ($rootScope.properties.selectedContainer !== '') {\n                $rootScope.flags.disableContainerSelectNone = true;\n            } else {\n                $rootScope.flags.disableContainerSelectNone = false;\n            }\n        }\n\n        /**\n        * @name updateContainerFilter\n        * @desc\n        */\n        function updateContainerFilter() {\n            $location.search('containerFilter', $rootScope.properties.containerFilter);\n        }\n\n        return {\n            idDictionary: idDictionary,\n            getContainerList: getContainerList,\n            updateIdDictionary: updateIdDictionary,\n            clearIdDictionary: clearIdDictionary,\n            checkContainerFilter: checkContainerFilter,\n            containerIdExist: containerIdExist,\n            checkContainerName: checkContainerName,\n            updateContainer: updateContainer,\n            updateContainerFilter: updateContainerFilter,\n            initialize: initialize\n        };\n    }\n\n    angular\n        .module('containermetadata', [\n            'metriclist'\n        ])\n        .factory('ContainerMetadataService', ContainerMetadataService);\n\n })();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global d3*/\n\n (function () {\n     'use strict';\n\n    /**\n    * @name D3Service\n    * @desc\n    */\n    function D3Service() {\n\n        function xAxisTickFormat() {\n            return function (d) {\n                return d3.time.format('%X')(new Date(d));\n            };\n        }\n\n        function yAxisTickFormat() {\n            return function (d) {\n                return d3.format('.02f')(d);\n            };\n        }\n\n        function yAxisIntegerTickFormat() {\n            return function (d) {\n                return d3.format('f')(d);\n            };\n        }\n\n        function yAxisPercentageTickFormat() {\n            return function (d) {\n                return d3.format('%')(d);\n            };\n        }\n\n        function xFunction() {\n            return function (d) {\n                return d.x;\n            };\n        }\n\n        function yFunction() {\n            return function (d) {\n                return d.y;\n            };\n        }\n\n        function getId() {\n            return 'chart_' +\n                Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        }\n\n        return {\n            xAxisTickFormat: xAxisTickFormat,\n            yAxisTickFormat: yAxisTickFormat,\n            yAxisIntegerTickFormat: yAxisIntegerTickFormat,\n            yAxisPercentageTickFormat: yAxisPercentageTickFormat,\n            xFunction: xFunction,\n            yFunction: yFunction,\n            getId: getId\n        };\n    }\n\n    angular\n        .module('d3', [])\n        .factory('D3Service', D3Service);\n })();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*global d3, nv, document*/\n/*eslint-disable angular/document-service, angular/definedundefined*/\n\nnv.models.tooltip = function () {\n\n    'use strict';\n\n    var id = 'nvtooltip-' + Math.floor(Math.random() * 100000), // Generatooltip() object.\n        data = null,\n        gravity = 'w',   // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n        distance = 25, // Distance to offset tooltip from the mouse location.\n        snapDistance = 0,   // Tolerance a\n    // fixedTop = null, // If not null, this fixes the top position of the tooltip.\n        classes = null,  // Attaches additional CSS classes to the tooltip DIV that is created.\n        chartContainer = null, // Parent dom element of the SVG that holds the chart.\n        hidden = true,  // Start off hidden, toggle with hide/show functions below.\n        hideDelay = 200,  // Delay (in ms) before the tooltip hides after calling hide().\n        tooltip = null, // d3 select of the tooltip div.\n        lastPosition = {left: null, top: null}, // Last position the tooltip was in.\n        enabled = true,  // True -> tooltips are rendered. False -> don't render tooltips.\n        duration = 100, // Tooltip movement duration, in ms.\n        headerEnabled = true, // If is to show the tooltip header.\n        nvPointerEventsClass = 'nv-pointer-events-none'; // CSS class to specify whether element should not have\n    var position = function () {\n        return {\n            left: d3.event.clientX,\n            top: d3.event.clientY\n        };\n    };\n\n    // Format function for the tooltip values column.\n    var valueFormatter = function (d) {\n        return d;\n    };\n\n    // Format function for the tooltip header value.\n    var headerFormatter = function (d) {\n        return d;\n    };\n\n    var keyFormatter = function (d) {\n        return d;\n    };\n\n    // By default, the tooltip model renders a beautiful table inside a DIV.\n    // You can override this function if a custom tooltip is desired.\n    var contentGenerator = function (d) {\n        if (d === null) {\n            return '';\n        }\n\n        var table = d3.select(document.createElement('table'));\n        if (headerEnabled) {\n            var theadEnter = table.selectAll('thead')\n                .data([d])\n                .enter().append('thead');\n\n            theadEnter.append('tr')\n                .append('td')\n                .attr('colspan', 3)\n                .append('strong')\n                .classed('x-value', true)\n                .html(headerFormatter(d.value));\n        }\n\n        var tbodyEnter = table.selectAll('tbody')\n            .data([d])\n            .enter().append('tbody');\n\n        var trowEnter = tbodyEnter.selectAll('tr')\n            .data(function (p) {\n                return p.series;\n            })\n            .enter()\n            .append('tr')\n            .classed('highlight', function (p) {\n                return p.highlight;\n            });\n\n        trowEnter.append('td')\n            .classed('legend-color-guide', true)\n            .append('div')\n            .style('background-color', function (p) {\n                return p.color;\n            });\n\n        trowEnter.append('td')\n            .classed('key', true)\n            .classed('total', function (p) {\n                return !!p.total;\n            })\n            .html(function (p, i) {\n                return keyFormatter(p.key, i);\n            });\n\n        trowEnter.append('td')\n            .classed('value', true)\n            .html(function (p, i) {\n                return valueFormatter(p.value, i);\n            });\n\n        trowEnter.selectAll('td').each(function (p) {\n            if (p.highlight) {\n                var opacityScale = d3.scale.linear().domain([0, 1]).range(['#fff', p.color]);\n                var opacity = 0.6;\n                d3.select(this)\n                    .style('border-bottom-color', opacityScale(opacity))\n                    .style('border-top-color', opacityScale(opacity))\n                ;\n            }\n        });\n\n        var html = table.node().outerHTML;\n        if (d.footer !== undefined) {\n            html += '<div class=\"footer\">' + d.footer + '</div>';\n        }\n        return html;\n\n    };\n\n    var dataSeriesExists = function (d) {\n        if (d && d.series) {\n            if (d.series instanceof Array) {\n                return !!d.series.length;\n            }\n            // if object, it's okay just convert to array of the object\n            if (d.series instanceof Object) {\n                d.series = [d.series];\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n    var calcGravityOffset = function (pos) {\n        var height = tooltip.node().offsetHeight,\n            width = tooltip.node().offsetWidth,\n            clientWidth = document.documentElement.clientWidth, // Don't want scrollbars.\n            clientHeight = document.documentElement.clientHeight, // Don't want scrollbars.\n            left, top, tmp;\n\n        // calculate position based on gravity\n        switch (gravity) {\n            case 'e':\n                left = -width - distance;\n                top = -(height / 2);\n                if (pos.left + left < 0) {\n                    left = distance;\n                }\n                if ((tmp = pos.top + top) < 0) {\n                    top -= tmp;\n                }\n                if ((tmp = pos.top + top + height) > clientHeight) {\n                    top -= tmp - clientHeight;\n                }\n                break;\n            case 'w':\n                left = distance;\n                top = -(height / 2);\n                if (pos.left + left + width > clientWidth) {\n                    left = -width - distance;\n                }\n                if ((tmp = pos.top + top) < 0) {\n                    top -= tmp;\n                }\n                if ((tmp = pos.top + top + height) > clientHeight) {\n                    top -= tmp - clientHeight;\n                }\n                break;\n            case 'n':\n                left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n                top = distance;\n                if (pos.top + top + height > clientHeight) {\n                    top = -height - distance;\n                }\n                if ((tmp = pos.left + left) < 0) {\n                    left -= tmp;\n                }\n                if ((tmp = pos.left + left + width) > clientWidth) {\n                    left -= tmp - clientWidth;\n                }\n                break;\n            case 's':\n                left = -(width / 2);\n                top = -height - distance;\n                if (pos.top + top < 0) {\n                    top = distance;\n                }\n                if ((tmp = pos.left + left) < 0) {\n                    left -= tmp;\n                }\n                if ((tmp = pos.left + left + width) > clientWidth) {\n                    left -= tmp - clientWidth;\n                }\n                break;\n            case 'center':\n                left = -(width / 2);\n                top = -(height / 2);\n                break;\n            default:\n                left = 0;\n                top = 0;\n                break;\n        }\n\n        return {'left': left, 'top': top};\n    };\n\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n    var positionTooltip = function () {\n        nv.dom.read(function () {\n            var pos = position(),\n                gravityOffset = calcGravityOffset(pos),\n                left = pos.left + gravityOffset.left,\n                top = pos.top + gravityOffset.top;\n\n            // delay hiding a bit to avoid flickering\n            if (hidden) {\n                tooltip\n                    .interrupt()\n                    .transition()\n                    .delay(hideDelay)\n                    .duration(0)\n                    .style('opacity', 0);\n            } else {\n                // using tooltip.style('transform') returns values un-usable for tween\n                var oldTranslate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n                var newTranslate = 'translate(' + left + 'px, ' + top + 'px)';\n                var translateInterpolator = d3.interpolateString(oldTranslate, newTranslate);\n                var isHidden = tooltip.style('opacity') < 0.1;\n\n                tooltip\n                    .interrupt() // cancel running transitions\n                    .transition()\n                    .duration(isHidden ? 0 : duration)\n                    // using tween since some versions of d3 can't auto-tween a translate on a div\n                    .styleTween('transform', function () {\n                        return translateInterpolator;\n                    }, 'important')\n                    // Safari has its own `-webkit-transform` and does not support `transform`\n                    .styleTween('-webkit-transform', function () {\n                        return translateInterpolator;\n                    })\n                    .style('-ms-transform', newTranslate)\n                    .style('opacity', 1);\n            }\n\n            lastPosition.left = left;\n            lastPosition.top = top;\n        });\n    };\n\n    // Creates new tooltip container, or uses existing one on DOM.\n    function initTooltip() {\n        if (!tooltip) {\n\n            var container = document.body;\n\n            // Create new tooltip div if it doesn't exist on DOM.\n            tooltip = d3.select(container).append('div')\n                .attr('class', 'nvtooltip ' + (classes ? classes : 'xy-tooltip'))\n                .attr('id', id);\n            tooltip.style('top', 0).style('left', 0);\n            tooltip.style('opacity', 0);\n            tooltip.style('position', 'fixed');\n            tooltip.selectAll('div, table, td, tr').classed(nvPointerEventsClass, true);\n            tooltip.classed(nvPointerEventsClass, true);\n        }\n    }\n\n    // Draw the tooltip onto the DOM.\n    function nvtooltip() {\n        if (!enabled) {\n            return;\n        }\n        if (!dataSeriesExists(data)) {\n            return;\n        }\n\n        nv.dom.write(function () {\n            initTooltip();\n            // Generate data and set it into tooltip.\n            // Bonus - If you override contentGenerator and return falsey you can use something like\n            //         React or Knockout to bind the data for your tooltip.\n            var newContent = contentGenerator(data);\n            if (newContent) {\n                tooltip.node().innerHTML = newContent;\n            }\n\n            positionTooltip();\n        });\n\n        return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n\n    nvtooltip._options = Object.create({}, {\n        // simple read/write options\n        duration: {\n            get: function () {\n                return duration;\n            }, set: function (_) {\n                duration = _;\n            }\n        },\n        gravity: {\n            get: function () {\n                return gravity;\n            }, set: function (_) {\n                gravity = _;\n            }\n        },\n        distance: {\n            get: function () {\n                return distance;\n            }, set: function (_) {\n                distance = _;\n            }\n        },\n        snapDistance: {\n            get: function () {\n                return snapDistance;\n            }, set: function (_) {\n                snapDistance = _;\n            }\n        },\n        classes: {\n            get: function () {\n                return classes;\n            }, set: function (_) {\n                classes = _;\n            }\n        },\n        chartContainer: {\n            get: function () {\n                return chartContainer;\n            }, set: function (_) {\n                chartContainer = _;\n            }\n        },\n        enabled: {\n            get: function () {\n                return enabled;\n            }, set: function (_) {\n                enabled = _;\n            }\n        },\n        hideDelay: {\n            get: function () {\n                return hideDelay;\n            }, set: function (_) {\n                hideDelay = _;\n            }\n        },\n        contentGenerator: {\n            get: function () {\n                return contentGenerator;\n            }, set: function (_) {\n                contentGenerator = _;\n            }\n        },\n        valueFormatter: {\n            get: function () {\n                return valueFormatter;\n            }, set: function (_) {\n                valueFormatter = _;\n            }\n        },\n        headerFormatter: {\n            get: function () {\n                return headerFormatter;\n            }, set: function (_) {\n                headerFormatter = _;\n            }\n        },\n        keyFormatter: {\n            get: function () {\n                return keyFormatter;\n            }, set: function (_) {\n                keyFormatter = _;\n            }\n        },\n        headerEnabled: {\n            get: function () {\n                return headerEnabled;\n            }, set: function (_) {\n                headerEnabled = _;\n            }\n        },\n        position: {\n            get: function () {\n                return position;\n            }, set: function (_) {\n                position = _;\n            }\n        },\n\n        // options with extra logic\n        hidden: {\n            get: function () {\n                return hidden;\n            }, set: function (_) {\n                if (hidden !== _) {\n                    hidden = !!_;\n                    nvtooltip();\n                }\n            }\n        },\n        data: {\n            get: function () {\n                return data;\n            }, set: function (_) {\n                // if showing a single data point, adjust data format with that\n                if (_.point) {\n                    _.value = _.point.x;\n                    _.series = _.series || {};\n                    _.series.value = _.point.y;\n                    _.series.color = _.point.color || _.series.color;\n                }\n                data = _;\n            }\n        },\n\n        // read only properties\n        node: {\n            get: function () {\n                return tooltip.node();\n            }, set: function () {\n            }\n        },\n        id: {\n            get: function () {\n                return id;\n            }, set: function () {\n            }\n        }\n    });\n\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n};\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function() {\n  'use strict';\n\n  angular\n    .module('chart', [\n       'd3',\n       'dashboard'\n    ]);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global d3, nv*/\n\n(function () {\n    'use strict';\n\n    function lineTimeSeries($rootScope, $log, D3Service) {\n\n        function link(scope) {\n            scope.id = D3Service.getId();\n            scope.flags = $rootScope.flags;\n\n            var chart;\n\n            nv.addGraph(function () {\n\n              var height = 250;\n\n              chart = nv.models.lineChart().options({\n                  duration: 0,\n                  useInteractiveGuideline: true,\n                  interactive: false,\n                  showLegend: true,\n                  showXAxis: true,\n                  showYAxis: true\n              });\n\n              chart.margin({'left': 35, 'right': 35});\n\n              chart.height(height);\n\n              if (scope.forcey) {\n                  chart.forceY([0, scope.forcey]);\n              }\n\n              chart.x(D3Service.xFunction());\n              chart.y(D3Service.yFunction());\n\n              chart.xAxis.tickFormat(D3Service.xAxisTickFormat());\n\n              if (scope.percentage) {\n                  chart.yAxis.tickFormat(D3Service.yAxisPercentageTickFormat());\n              } else if (scope.integer) {\n                  chart.yAxis.tickFormat(D3Service.yAxisIntegerTickFormat());\n              } else {\n                  chart.yAxis.tickFormat(D3Service.yAxisTickFormat());\n              }\n\n              nv.utils.windowResize(chart.update);\n\n              d3.select('#' + scope.id + ' svg')\n                .datum(scope.data)\n                .style('height', height + 'px')\n                .transition().duration(0)\n                .call(chart);\n\n              return chart;\n            });\n\n            scope.$on('updateMetrics', function () {\n                if (scope.area) {\n                  angular.forEach(scope.data, function (instance) {\n                    instance.area=true;\n                  });\n                }\n                chart.update();\n            });\n        }\n\n        return {\n            restrict: 'A',\n            templateUrl: 'app/components/chart/chart.html',\n            scope: {\n                data: '=',\n                percentage: '=',\n                integer: '=',\n                forcey: '=',\n                area: '='\n            },\n            link: link\n        };\n    }\n\n    angular\n        .module('chart')\n        .directive('lineTimeSeries', lineTimeSeries);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n /*global d3, nv*/\n\n(function () {\n    'use strict';\n\n    function areaStackedTimeSeries($rootScope, $log, D3Service) {\n\n        function link(scope) {\n            scope.id = D3Service.getId();\n            scope.flags = $rootScope.flags;\n            scope.legend = true;\n\n            var chart;\n\n            nv.addGraph(function () {\n\n              var yAxisTickFormat = D3Service.yAxisTickFormat(),\n                  height = 250;\n\n              chart = nv.models.stackedAreaChart().options({\n                  duration: 0,\n                  useInteractiveGuideline: true,\n                  interactive: false,\n                  showLegend: true,\n                  showXAxis: true,\n                  showYAxis: true,\n                  showControls: false\n              });\n\n              chart.margin({'left': 35, 'right': 35});\n\n              chart.height(height);\n\n              if (scope.forcey) {\n                  chart.yDomain([0, scope.forcey]);\n              }\n\n              chart.x(D3Service.xFunction());\n              chart.y(D3Service.yFunction());\n\n              chart.xAxis.tickFormat(D3Service.xAxisTickFormat());\n\n              if (scope.percentage) {\n                  yAxisTickFormat = D3Service.yAxisPercentageTickFormat();\n                  chart.yAxis.tickFormat();\n              } else if (scope.integer) {\n                  yAxisTickFormat = D3Service.yAxisIntegerTickFormat();\n                  chart.yAxis.tickFormat();\n              }\n\n              chart.yAxis.tickFormat(yAxisTickFormat);\n\n              nv.utils.windowResize(chart.update);\n\n              d3.select('#' + scope.id + ' svg')\n                .datum(scope.data)\n                .style('height', height + 'px')\n                .transition().duration(0)\n                .call(chart);\n\n              return chart;\n            });\n\n            scope.$on('updateMetrics', function () {\n                chart.update();\n            });\n        }\n\n        return {\n            restrict: 'A',\n            templateUrl: 'app/components/chart/chart.html',\n            scope: {\n                data: '=',\n                percentage: '=',\n                integer: '=',\n                forcey: '='\n            },\n            link: link\n        };\n    }\n\n    areaStackedTimeSeries.$inject = [\n        '$rootScope',\n        '$log',\n        'D3Service'\n    ];\n\n    angular\n        .module('chart')\n        .directive('areaStackedTimeSeries', areaStackedTimeSeries);\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*jslint node: true*/\n/*global angular*/\n/*jslint browser: true*/\n/*jslint nomen: true */\n\n(function () {\n    'use strict';\n\n    /**\n    * @name MainCtrl\n    * @desc Main Controller\n    */\n    function MainCtrl($document, $rootScope, $log, $route, $routeParams, $location, widgetDefinitions, widgets, embed, version, DashboardService, ContainerMetadataService, ModalService) {\n\n        var vm = this,\n            widgetsToLoad = widgets;\n\n        /**\n        * @name visibilityChanged\n        * @desc Pauses/resumes interval updates if window/tab is out of focus.\n        */\n        function visibilityChanged() {\n            if ($document[0].hidden || $document[0].webkitHidden ||\n                $document[0].mozHidden || $document[0].msHidden) {\n                DashboardService.cancelInterval();\n            } else {\n                DashboardService.updateInterval();\n            }\n        }\n\n        /**\n        * @name activate\n        * @desc Initiliazes MainCtrl\n        */\n        function activate() {\n            DashboardService.initialize();\n\n            if ($routeParams.protocol) {\n                $rootScope.properties.protocol = $routeParams.protocol;\n            }\n\n            if ($routeParams.host) {\n                vm.inputHost = $routeParams.host;\n                if ($routeParams.hostspec) {\n                    $rootScope.properties.hostspec = $routeParams.hostspec;\n                }\n                DashboardService.updateHost(vm.inputHost);\n            }\n\n            // hack to deal with window/tab out of focus\n            $document[0]\n                .addEventListener('visibilitychange', visibilityChanged, false);\n            $document[0]\n                .addEventListener('webkitvisibilitychange', visibilityChanged, false);\n            $document[0]\n                .addEventListener('msvisibilitychange', visibilityChanged, false);\n            $document[0]\n                .addEventListener('mozvisibilitychange', visibilityChanged, false);\n\n            if (angular.isDefined($routeParams.widgets)){\n                var widgetNameArr = $routeParams.widgets.split(',') || [];\n                widgetsToLoad = widgetNameArr.reduce(function(all, name){\n                    return all.concat(widgetDefinitions.filter(function(def){\n                        return def.name === name;\n                    }));\n                },[]);\n            } else {\n                var urlArr = widgets.reduce(function(all,item){\n                    all.push(item.name);\n                    return all;\n                },[]).join();\n                $location.search('widgets', urlArr);\n            }\n\n            if (angular.isDefined($routeParams.containerFilter)){\n                $rootScope.properties.containerFilter =  $routeParams.containerFilter;\n            }\n\n            vm.dashboardOptions = {\n                hideToolbar: true,\n                widgetButtons: false,\n                hideWidgetName: true,\n                hideWidgetSettings: false,\n                widgetDefinitions: widgetDefinitions,\n                defaultWidgets: widgetsToLoad\n            };\n        }\n\n        vm.version = version.id;\n\n        vm.embed = embed;\n\n        // Export controller public functions\n        vm.addWidgetToURL = function(widgetObj){\n            var newUrl ='';\n            if (angular.isUndefined($routeParams.widgets)) {\n                $routeParams.widgets = '';\n            } else {\n                newUrl = ',';\n            }\n\n            if (widgetObj.length){\n                $routeParams.widgets = '';\n                newUrl = widgetObj.reduce(function(all,item){\n                    all.push(item.name);\n                    return all;\n                },[]).join();\n            } else {\n                newUrl = newUrl + widgetObj.name;\n            }\n            $location.search('widgets', $routeParams.widgets + newUrl);\n        };\n\n        vm.removeWidgetFromURL = function(widgetObj){\n            var widgetNameArr = $routeParams.widgets.split(',') || [];\n            for (var d=0; d< widgetNameArr.length; d++){\n                if (widgetNameArr[d] === widgetObj.name){\n                    widgetNameArr.splice(d,1);\n                    break;\n                }\n            }\n            if (widgetNameArr.length < 1){\n                vm.removeAllWidgetFromURL();\n            } else {\n                $location.search('widgets', widgetNameArr.toString());\n            }\n        };\n\n        vm.removeAllWidgetFromURL = function(){\n            $location.search('widgets', null);\n        };\n\n        vm.resetDashboard = function(){\n\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                actionButtonText: 'Ok',\n                headerText: 'Reset Dashboard',\n                bodyText: 'Are you sure you want to reset the dashboard?'\n            };\n\n            ModalService.showModal({}, modalOptions).then(function() {\n                $location.search('container', null);\n                $location.search('containerFilter', null);\n                $rootScope.flags.disableContainerSelectNone = false;\n                $rootScope.properties.selectedContainer = '';\n                $rootScope.properties.containerFilter = '';\n                vm.dashboardOptions.loadWidgets([]);\n                vm.removeAllWidgetFromURL();\n            });\n        };\n\n        vm.updateHost = function() {\n            DashboardService.updateHost(vm.inputHost);\n            ContainerMetadataService.clearIdDictionary();\n        };\n\n        vm.addWidget = function(event, directive){\n            event.preventDefault();\n            if ( vm.checkWidgetType(directive) ) {\n                vm.dashboardOptions.addWidget(directive);\n                vm.addWidgetToURL(directive);\n            }\n        };\n\n        vm.checkWidgetType = function(widgetObj) {\n            if (angular.isDefined(widgetObj.requireContainerFilter) && widgetObj.requireContainerFilter === true && $rootScope.flags.disableContainerSelect === false && !$rootScope.flags.containerSelectOverride) {\n              if ($rootScope.properties.selectedContainer === ''){\n\n                  var modalOptions = {\n                      closeButtonText: '',\n                      actionButtonText: 'Ok',\n                      headerText: 'Error: Container selection required.',\n                      bodyText: 'This widget requires a container to be selected. Please select a container and try again.'\n                  };\n\n                  ModalService.showModal({}, modalOptions).then(function() {\n                      $document.getElementById('selectedContainer').focus();\n                  });\n\n                  return false;\n              }\n            }\n            return true;\n        };\n\n        vm.updateInterval = DashboardService.updateInterval;\n        vm.updateContainer = ContainerMetadataService.updateContainer;\n        vm.updateContainerFilter = ContainerMetadataService.updateContainerFilter;\n        vm.inputHost = '';\n\n        activate();\n    }\n\n    angular\n        .module('main', [\n            'dashboard',\n            'widget',\n            'containermetadata',\n            'modal'\n        ])\n        .controller('MainController', MainCtrl);\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n(function () {\n    'use strict';\n\n    angular\n        .module('vector', [\n            'ngRoute',\n            'ui.dashboard',\n            'toastr',\n            'main'\n        ]);\n\n})();\n\n(function () { 'use strict'; angular.module('vector').constant('version', { 'id': 'pcp-webjs-3.11.2-2-gd3eadbe486fb' }); })();\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function () {\n    'use strict';\n\n    /**\n    * @name config\n    * @desc Define valid application routes\n    */\n    function routeConfig($routeProvider) {\n        $routeProvider.when('/', {\n            templateUrl: 'app/main/main.html',\n            controller: 'MainController',\n            controllerAs: 'vm',\n            title: 'Vector',\n            reloadOnSearch: false,\n            resolve: {\n                'widgets': function (defaultWidgets) {\n                    return defaultWidgets;\n                },\n                'embed': function () {\n                  return false;\n                }\n            }\n        }).when('/embed', {\n            templateUrl: 'app/main/main.html',\n            controller: 'MainController',\n            controllerAs: 'vm',\n            title: 'Vector',\n            reloadOnSearch: false,\n            resolve: {\n                'widgets': function (defaultWidgets) {\n                    return defaultWidgets;\n                },\n                'embed': function () {\n                  return true;\n                }\n            }\n        }).when('/empty', {\n            templateUrl: 'app/main/main.html',\n            controller: 'MainController',\n            controllerAs: 'vm',\n            title: 'Vector',\n            reloadOnSearch: false,\n            resolve: {\n                'widgets': function (emptyWidgets) {\n                    return emptyWidgets;\n                },\n                'embed': function () {\n                  return false;\n                }\n            }\n        }).when('/container', {\n            templateUrl: 'app/main/main.html',\n            controller: 'MainController',\n            controllerAs: 'vm',\n            title: 'Vector',\n            reloadOnSearch: false,\n            resolve: {\n                'widgets': function (containerWidgets) {\n                    return containerWidgets;\n                },\n                'embed': function () {\n                  return false;\n                }\n            }\n        })\n        .otherwise('/');\n    }\n\n    angular\n        .module('vector')\n        .config(routeConfig);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/*jslint node: true*/\n/*global angular*/\n/*jslint plusplus: true */\n\n(function () {\n    'use strict';\n\n    /* Filters */\n\n    /**\n    * @name uniqueItems\n    * @desc\n    */\n    function uniqueItems(data, key) {\n        var result = [],\n            i,\n            value;\n        for (i = 0; i < data.length; i++) {\n            value = data[i][key];\n            if (result.indexOf(value) === -1) {\n                result.push(value);\n            }\n        }\n        return result;\n    }\n\n    /**\n    * @name groupBy\n    * @desc\n    */\n    function groupBy() {\n        return function (collection, key) {\n            if (collection === null) {\n                return;\n            }\n            return uniqueItems(collection, key);\n        };\n    }\n\n    /**\n    * @name groupFilter\n    * @desc\n    */\n    function groupFilter() {\n        return function (collection, group) {\n            return collection.filter(function (item) {\n                return item.group === group;\n            });\n        };\n    }\n\n    angular\n        .module('vector')\n        .filter('groupBy', groupBy)\n        .filter('groupFilter', groupFilter);\n\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function () {\n    'use strict';\n\n    // Container Name Resolver\n    // Return resolved name as a strng to be used in chart and container selection\n    // Return null to exclude the container from charts and container selection.\n\n    // var containerNameResolver = function() {\n    //     var resolve = function (containerId) {\n    //       return containerId.substring(0,12);\n    //     };\n    //\n    //     return {\n    //       resolve: resolve\n    //     };\n    // };\n\n    angular\n        .module('vector')\n        // .factory('containerNameResolver', containerNameResolver)\n        ;\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n(function () {\n    'use strict';\n\n    /* Decorators */\n\n    function decorators($provide) {\n        /* Register a decorator for the `$interval` service */\n        $provide.decorator('$interval', function ($delegate) {\n\n            /* Keep a reference to the original `cancel()` method */\n            var originalCancel = $delegate.cancel;\n\n            /* Define a new `cancel()` method */\n            $delegate.cancel = function (intervalPromise) {\n\n                /* First, call the original `cancel()` method */\n                var retValue = originalCancel(intervalPromise);\n\n                /* If the promise has been successfully cancelled,\n                 * add a `cancelled` property (with value `true`) */\n                if (retValue && intervalPromise) {\n                    intervalPromise.isCancelled = true;\n                }\n\n                /* Return the value returned by the original method */\n                return retValue;\n            };\n\n            /* Return the original (but \"augmented\") service */\n            return $delegate;\n        });\n    }\n\n    angular\n        .module('vector')\n        .config(decorators);\n\n})();\n\n/**!\n *\n *  Copyright 2016 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n\n/* global moment:false */\n\n(function() {\n  'use strict';\n\n  angular\n    .module('vector')\n    .constant('moment', moment);\n\n})();\n\n/**!\n *\n *  Copyright 2015 Netflix, Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\");\n *     you may not use this file except in compliance with the License.\n *     You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *     See the License for the specific language governing permissions and\n *     limitations under the License.\n *\n */\n(function () {\n    'use strict';\n\n    function toastrConfig(toastrConfig) {\n        toastrConfig.allowHtml = true;\n        toastrConfig.timeOut = 8000;\n        toastrConfig.positionClass = 'toast-top-right';\n        toastrConfig.preventDuplicates = true;\n        toastrConfig.progressBar = true;\n    }\n\n    function logProviderConfig($logProvider) {\n        $logProvider.debugEnabled(true);\n    }\n\n    angular\n        .module('vector')\n        .constant('config', {\n            'protocol': 'http', // PMWEBD protocol (http or https)\n            'port': 44323,  // PMWEBD port\n            'hostspec': 'localhost', // Default PMCD hostspec\n            'interval': '2', // Default update interval in seconds\n            'window': '2', // Default graph time window in minutes\n            'enableCpuFlameGraph': false, // Enable CPU flame graph (requires extra PMDA)\n            'enableContainerWidgets': true, // Enable container widgets\n            'disableHostspecInput': false, // Disable hostspec input\n            'disableContainerFilter': false, // Disable container id filter input\n            'disableContainerSelect': false, // Disable container name drop down select\n            'containerSelectOverride': true, // Overrides requireContainerFilter widget option\n            'useCgroupId': false, // Use container cgroup id instead of container name\n            'expandHostname': false, // Automatically expand hostname input when application opens\n            'disableHostnameInputContainerSelect': false // Disable hostname and hostspec input when container is selected\n        })\n        .config(toastrConfig)\n        .config(logProviderConfig);\n})();\n\nangular.module(\"vector\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=navigation ng-if=!vm.embed><div class=container-fluid><div class=navbar-header><button type=button class=navbar-toggle data-toggle=collapse data-target=.navbar-collapse><span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button> <a class=navbar-brand href=#/ ><img ng-src=assets/images/vector_owl.png alt=\\\"Vector Owl\\\" height=20></a><a class=navbar-brand href=\\\"javascript:window.location.reload(true);history.pushState(null, \\'\\', location.href.split(\\'?\\')[0]);\\\">Vector</a></div></div></div><div class=dashboard-container ng-class=\\\"{ \\'main-container\\': !vm.embed }\\\"><div class=row><div class=col-md-12><div dashboard=vm.dashboardOptions template-url=app/components/dashboard/dashboard.html class=dashboard-container></div></div></div></div>\");\n$templateCache.put(\"app/components/customWidgetSettings/customWidgetSettings.html\",\"<div class=modal-header><button type=button class=close data-dismiss=modal aria-hidden=true ng-click=cancel()>&times;</button><h3>Widget Options <small>{{widget.title}}</small></h3></div><div class=modal-body><form name=form novalidate class=form-horizontal><div class=input-group><span class=input-group-addon>Filter</span> <input class=\\\"widgetInput form-control\\\" name=widgetFilter ng-model=result.filter ng-change=\\\"vm.updateFilterWidget(this.widget, result)\\\" ng-keydown=\\\"$event.which === 13 && ok()\\\"></div></form></div><div class=modal-footer><button type=button class=\\\"btn btn-default\\\" ng-click=\\\"cancel(); vm.clearFilterWidget(this.widget);\\\">Cancel</button> <button type=button class=\\\"btn btn-primary\\\" ng-click=ok()>OK</button></div>\");\n$templateCache.put(\"app/components/chart/chart.html\",\"<div><i class=\\\"fa fa-line-chart fa-5x widget-icon\\\" ng-hide=flags.contextAvailable></i><div id={{id}} class=chart ng-hide=!flags.contextAvailable><svg></svg></div></div>\");\n$templateCache.put(\"app/components/dashboard/dashboard.html\",\"<div class=row ng-if=!vm.embed><div class=col-md-6><form role=form name=form><div class=\\\"input-group input-group-lg target\\\" ng-class=\\\"{\\'has-error\\': form.host.$invalid && form.host.$dirty}\\\"><span class=input-group-addon ng-click=\\\"flags.isHostnameExpanded = !flags.isHostnameExpanded;\\\">Hostname &nbsp; <i class=\\\"fa fa-plus-square-o\\\" ng-if=!flags.isHostnameExpanded></i><i class=\\\"fa fa-minus-square-o\\\" ng-if=flags.isHostnameExpanded></i></span> <input type=text class=\\\"form-control hostname-input\\\" id=hostnameInput name=host data-content=\\\"Please enter the instance hostname. Port can be specified using the <hostname>:<port> format. Expand to change hostspec.\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body ng-model=vm.inputHost ng-change=vm.updateHost() ng-model-options=\\\"{ updateOn: \\'default\\', debounce: 1000 }\\\" delay=1000 ng-disabled=\\\"flags.contextUpdating == true || ( flags.disableContainerSelectNone && flags.disableHostnameInputContainerSelect)\\\" required placeholder=\\\"Instance Hostname\\\"> <i class=\\\"fa fa-refresh fa-2x form-control-feedback\\\" ng-if=flags.contextUpdating></i> <i class=\\\"fa fa-check fa-2x form-control-feedback\\\" ng-if=flags.contextAvailable></i></div></form></div><div class=\\\"btn-group col-md-2 widget-wrapper\\\" id=widgetWrapper><button id=widgetButton type=button class=\\\"dropdown-toggle btn btn-lg btn-default btn-block widget-button\\\" data-toggle=dropdown>Widget <span class=caret></span></button><ul class=dropdown-menu role=menu><li class=dropdown-submenu ng-repeat=\\\"group in widgetDefs | groupBy: \\'group\\'\\\"><a ng-click=void(0) data-toggle=dropdown>{{group}}</a><ul class=dropdown-menu><li ng-repeat=\\\"widget in widgetDefs | groupFilter: group\\\"><a ng-click=\\\"vm.addWidget($event, widget);\\\">{{widget.title}}</a></li></ul></li><li role=presentation class=divider></li><li><a href=javascript:void(0); ng-click=\\\"loadWidgets(defaultWidgets); vm.addWidgetToURL(defaultWidgets);\\\">Default Widgets</a></li><li><a href=javascript:void(0); ng-click=\\\"loadWidgets(emptyWidgets); vm.removeAllWidgetFromURL();\\\">Clear Widgets</a></li><li role=presentation class=divider></li><li><a href=javascript:void(0); ng-click=vm.resetDashboard();>Reset Dashboard</a></li></ul></div><div class=col-md-2><form role=form><div class=\\\"input-group input-group-lg window\\\" ng-class=\\\"{\\'has-error\\': form.window.$invalid && form.window.$dirty}\\\"><span class=input-group-addon>Window</span><select class=form-control name=window id=windowInput data-content=\\\"The duration window for all charts in this dashboard.\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body ng-model=properties.window ng-change=vm.updateWindow()><option value=2>2 min</option><option value=5>5 min</option><option value=10>10 min</option></select></div></form></div><div class=col-md-2><form role=form><div class=\\\"input-group input-group-lg interval\\\" ng-class=\\\"{\\'has-error\\': form.interval.$invalid && form.interval.$dirty}\\\"><span class=input-group-addon>Interval</span><select class=form-control name=interval id=intervalInput data-content=\\\"The update interval used by all charts in this dashboard.\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body ng-model=properties.interval ng-change=vm.updateInterval()><option value=1>1 sec</option><option value=2>2 sec</option><option value=3>3 sec</option><option value=5>5 sec</option></select></div></form></div></div><div class=row ng-show=flags.isHostnameExpanded ng-if=!vm.embed><div class=col-md-6><form role=form name=form><div class=\\\"input-group input-group-lg target\\\" ng-show=!flags.disableHostspecInput ng-class=\\\"{\\'has-error\\': form.hostspec.$invalid && form.hostspec.$dirty}\\\"><span class=input-group-addon>Hostspec</span> <input type=text class=form-control id=hostspecInput name=host data-content=\\\"Please enter the instance hostspec.\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body ng-model=properties.hostspec ng-change=vm.updateHost() ng-model-options=\\\"{ updateOn: \\'default\\', debounce: 1000 }\\\" delay=1000 ng-disabled=\\\"flags.contextUpdating == true || ( flags.disableContainerSelectNone && flags.disableHostnameInputContainerSelect )\\\" required placeholder=\\\"Instance Hostspec\\\"></div><div class=\\\"input-group input-group-lg target\\\" ng-show=\\\"flags.enableContainerWidgets && !flags.disableContainerFilter\\\"><span class=input-group-addon>Container Filter</span> <input type=text class=form-control id=globalFilterInput name=globalFilter data-content=\\\"Global filter for container widgets\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body ng-model=properties.containerFilter ng-change=vm.updateContainerFilter() ng-model-options=\\\"{ updateOn: \\'default\\', debounce: 1000 }\\\" delay=1000 placeholder=\\\"Container Filter\\\"></div><div class=\\\"input-group input-group-lg target\\\" ng-show=\\\"flags.enableContainerWidgets && !flags.disableContainerSelect\\\"><span class=input-group-addon>Container Id</span><select id=selectedContainer ng-model=properties.selectedContainer ng-change=vm.updateContainer() class=form-control><option ng-disabled=\\\"flags.disableContainerSelectNone && !flags.containerSelectOverride\\\" value=\\\"\\\">All</option><option ng-repeat=\\\"container in properties.containerList\\\">{{container}}</option></select></div></form></div><div class=col-md-6><p class=\\\"lead hostname-label\\\" id=hostnameLabel data-content=\\\"PMCD hostname. The hostname from the actual instance you\\'re monitoring.\\\" rel=popover data-placement=bottom data-trigger=hover data-container=body>{{flags.contextAvailable && properties.hostname ? properties.hostname : \\'Disconnected\\'}}</p></div></div><div class=row><div class=col-md-12><div class=btn-toolbar ng-if=!options.hideToolbar><div class=btn-group ng-if=!options.widgetButtons><button type=button class=\\\"dropdown-toggle btn btn-primary\\\" data-toggle=dropdown>Add Widget <span class=caret></span></button><ul class=dropdown-menu role=menu><li ng-repeat=\\\"widget in widgetDefs\\\"><a href=# ng-click=\\\"addWidgetInternal($event, widget);\\\"><span class=\\\"label label-primary\\\">{{widget.name}}</span></a></li></ul></div><div class=btn-group ng-if=options.widgetButtons><button ng-repeat=\\\"widget in widgetDefs\\\" ng-click=\\\"addWidgetInternal($event, widget);\\\" type=button class=\\\"btn btn-primary\\\">{{widget.name}}</button></div><button class=\\\"btn btn-warning\\\" ng-click=resetWidgetsToDefault()>Default Widgets</button> <button ng-if=\\\"options.storage && options.explicitSave\\\" ng-click=options.saveDashboard() class=\\\"btn btn-success\\\" ng-disabled=!options.unsavedChangeCount>{{ !options.unsavedChangeCount ? \\\"all saved\\\" : \\\"save changes (\\\" + options.unsavedChangeCount + \\\")\\\" }}</button> <button ng-click=clear(); type=button class=\\\"btn btn-info\\\">Clear</button></div><div ui-sortable=sortableOptions ng-model=widgets class=dashboard-widget-area><div ng-repeat=\\\"widget in widgets\\\" ng-style=widget.containerStyle class=widget-container widget><div class=\\\"widget panel panel-default\\\"><div class=\\\"widget-header panel-heading\\\"><h3 class=panel-title><span class=widget-title>{{widget.title}}</span><!-- <span class=\\\"widget-title\\\" ng-dblclick=\\\"editTitle(widget)\\\" ng-hide=\\\"widget.editingTitle\\\">{{widget.title}}</span> --><!-- <form action=\\\"\\\" class=\\\"widget-title\\\" ng-show=\\\"widget.editingTitle\\\" ng-submit=\\\"saveTitleEdit(widget)\\\">\\n                                <input type=\\\"text\\\" ng-model=\\\"widget.title\\\" class=\\\"form-control\\\">\\n                            </form> --> <span class=\\\"label label-primary\\\" ng-if=!options.hideWidgetName>{{widget.name}}</span> <span ng-click=\\\"removeWidget(widget);  vm.removeWidgetFromURL(widget);\\\" class=\\\"glyphicon glyphicon-remove\\\" ng-if=!options.hideWidgetClose></span> <span ng-click=openWidgetSettings(widget); class=\\\"glyphicon glyphicon-cog\\\" ng-if=\\\"!options.hideWidgetSettings && widget.hasLocalSettings\\\"></span></h3></div><div class=\\\"panel-body widget-content\\\" ng-style=widget.contentStyle></div><div class=widget-ew-resizer ng-mousedown=grabResizer($event)></div><div ng-if=widget.enableVerticalResize class=widget-s-resizer ng-mousedown=grabSouthResizer($event)></div></div></div></div></div></div><div class=\\\"row version-div\\\" ng-if=!vm.embed>Version: {{vm.version}}</div><script>(function () {\\n        \\'use strict\\';\\n        $(\\'#hostnameInput\\').popover();\\n        $(\\'#hostspecInput\\').popover();\\n        $(\\'#globalFilterInput\\').popover();\\n        $(\\'#windowInput\\').popover();\\n        $(\\'#intervalInput\\').popover();\\n        $(\\'#hostnameLabel\\').popover();\\n    }());</script>\");\n$templateCache.put(\"app/components/flamegraph/flamegraph.html\",\"<div class=col-md-12><div class=row style=\\\"text-align: center\\\"><p>Click on the button below to generate a CPU flame graph! (60 sec)</p><button type=button class=\\\"btn btn-primary\\\" ng-disabled=processing ng-click=generateFlameGraph()>Generate Flame Graph <i ng-if=processing class=\\\"fa fa-refresh fa-spin\\\"></i></button></div><div class=row ng-if=\\\"!processing && ready\\\" style=\\\"text-align: center; margin-top: 15px\\\"><p>The CPU flame graph is ready. Please click on the button below to open it.</p><a class=\\\"btn btn-default\\\" href=http://{{host}}:{{port}}/systack/systack.svg target=_blank>Open Flame Graph</a></div></div>\");}]);"],"sourceRoot":"/source/"}