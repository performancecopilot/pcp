#!/bin/sh
# PCP QA Test No. 1897
# Test pmdahacluster (High Availability) metrics
#
# Copyright (c) 2020 - 2021 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_check_valgrind
[ $PCP_PLATFORM = linux ] || _notrun "HACLUSTER PMDA is Linux-specific (hacluster)"
[ -d $PCP_PMDAS_DIR/hacluster ] || _notrun "hacluster PMDA directory is not installed"

_cleanup()
{
	cd $here
	_restore_pmda_install hacluster
	$sudo rm -fr $tmp.root
	$sudo rm -f $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
	$here/src/sortinst | \
	sed \
	-e "s,$PCP_PMDAS_DIR,PCP_PMDAS_DIR,g" \
	#end
}

# real QA test starts here
echo
echo "=== Installing HACLUSTER PMDA ===" | tee -a $seq_full
_prepare_pmda_install hacluster || _exit 1
cd $PCP_PMDAS_DIR/hacluster
$sudo ./Install </dev/null >$tmp.out 2>&1
cat $tmp.out >> $seq_full

root=$tmp.root
export HACLUSTER_SETUP_CIBADMIN="./cibadmin.sh"
export HACLUSTER_SETUP_CRM_MON="./crm_mon.sh"
export HACLUSTER_SETUP_QUORUM="./corosync-quorumtool.sh"
export HACLUSTER_SETUP_CFG="./corosync-cfgtool.sh"
export HACLUSTER_SETUP_SBD="./sbd.sh"
export HACLUSTER_SETUP_SBD_PATH="./sbd"
export HACLUSTER_SETUP_DRBD="./drbdsetup.sh"
export HACLUSTER_SETUP_DRBD_SPLITBRAIN="./"
pmda=$PCP_PMDAS_DIR/hacluster/pmda_hacluster.so,hacluster_init
metrics=`pminfo -L -K clear -K add,155,$pmda ha_cluster | LC_COLLATE=POSIX sort`
memcheck="ha_cluster.pacemaker.config_last_change ha_cluster.corosync.quorate ha_cluster.sbd.devices.path ha_cluster.drbd.split_brain"

for tgz in $here/hacluster/hacluster-*.tgz
do
	[ $tgz = "hacluster/hacluster-*" ] && continue

	$sudo rm -fr $root
	mkdir $root || _fail "root in use when processing $tgz"
	cd $root
	$sudo tar xzf $tgz
	base=`basename $tgz`
	count=`echo $base | sed -e 's,.*-root-,,g' -e 's,.tgz$,,g'`
	cd $count/hacluster

	echo "== Checking metric descriptors and values - $base"
	pminfo -L -K clear -K add,155,$pmda -dfmtT $metrics 2>&1 \
	| _filter

	echo "== Checking with valgrind - $base"
	_run_valgrind pminfo -L -K clear -K add,155,$pmda -f $memcheck 2>&1 \
	| _filter

	echo && echo "== done" && echo
	cd $here
done

# cleanup ..
#
cd $PCP_PMDAS_DIR/hacluster
$sudo ./Remove </dev/null >/dev/null 2>&1

if [ -f $PCP_LOG_DIR/pmcd/hacluster.log ]
then
    cat $PCP_LOG_DIR/pmcd/hacluster.log >>$seq_full
else
    echo "Arrgh: $PCP_LOG_DIR/pmcd/hacluster.log is missing?"
fi

# success, all done
status=0
exit
