QA output created by 061

mandatory on once -> mandatory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory on once -> mandatory maybe
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNMY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory on once -> mandatory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMN delta=0.000000
compared to: optreq task=ADDR state=NNMY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory on once -> advisory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAY delta=0.000000
compared to: optreq task=ADDR state=NNMY delta=0.000000
Warning [TMP.config, line 6]
Incompatible request for metric "sample.colour" and instance "blue"
Request for (advisory) ON conflicts with current (mandatory) ON state
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Fetch task[1] delta: 0 usec numpmid: 1
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory on once -> advisory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNMY delta=0.000000
Warning [TMP.config, line 6]
Incompatible request for metric "sample.colour" and instance "blue"
Request for (advisory) OFF conflicts with current (mandatory) ON state
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Fetch task[1] delta: 0 usec numpmid: 1
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory maybe -> mandatory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMY delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory maybe -> mandatory maybe
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory maybe -> mandatory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMN delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory maybe -> advisory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  13 (adv on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAY delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory maybe -> advisory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory off -> mandatory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMY delta=0.000000
compared to: optreq task=ADDR state=NNMN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory off -> mandatory maybe
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNMN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory off -> mandatory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory off -> advisory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAY delta=0.000000
compared to: optreq task=ADDR state=NNMN delta=0.000000
Warning [TMP.config, line 6]
Incompatible request for metric "sample.colour" and instance "blue"
Request for (advisory) ON conflicts with current (mandatory) OFF state
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Fetch task[1] delta: 0 usec numpmid: 1
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

mandatory off -> advisory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNMN delta=0.000000
Warning [TMP.config, line 6]
Incompatible request for metric "sample.colour" and instance "blue"
Request for (advisory) OFF conflicts with current (mandatory) OFF state
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Fetch task[1] delta: 0 usec numpmid: 1
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory on once -> mandatory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMY delta=0.000000
compared to: optreq task=ADDR state=NNAY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory on once -> mandatory maybe
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNAY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory on once -> mandatory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMN delta=0.000000
compared to: optreq task=ADDR state=NNAY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory on once -> advisory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  13 (adv on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory on once -> advisory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNAY delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory off -> mandatory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  15 (mand on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMY delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory off -> mandatory maybe
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAN delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory off -> mandatory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  2 (mand off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNMN delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, mand, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory off -> advisory on once
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  13 (adv on, delta=0 msec, inlog, avail)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
chk_one: pmid=29.0.5 task=ADDR state=NNAY delta=0.000000
compared to: optreq task=ADDR state=NNAN delta=0.000000
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, on delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 1 metric
    29.0.5 (sample.dupnames.four.colour or sample.colour): inst [2 or "blue"] value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

advisory off -> advisory off
sample.colour
  inst [0 or "red"]  0 (adv off)
  inst [1 or "green"]  0 (adv off)
  inst [2 or "blue"]  0 (adv off)
Log for pmlogger on HOST started DATE

[DATE] pmlogger(PID) Info: Start
Config parsed
optFetch Cost Parameters: pmid=4 indom=1 fetch=15 scope=1

After loading config ...
 state: not in log, unavail, adv, off delta: 0 usec numpmid: 1
  29.0.5 (sample.colour):
Dump optfetch structures from ADDR next=ADDR
Fetch Control @ ADDR: cost=20 state=NEW PMID PROFILE 
PMIDs: [1] 29.0.5
  InDom 29.1 Control @ ADDR:
  instances: [1] 2
    PMID 29.0.5 Control @ ADDR:
    instances: [1] 2
      Request @ ADDR:
      instances: [1] 2

Fetch task[0] delta: 0 usec numpmid: 1
  Fetch group[0][0] 1 metrics
Starting logger for host "HOST"
__pmFopen("TMP.index", "w"): no decompress
__pmFopen("TMP.meta", "w"): no decompress
__pmFopen("TMP.0", "w"): no decompress
Archive basename: ARCHIVE
do_creds: pmlc PDU version=3
__pmDecodeLogRequest: got PDU (type=2, version=3)
__pmSendLogStatus: sending PDU (version=3)
do_creds: pmlc PDU version=3
do_control_req: control=13 state=0 delta=5000 request ...
LogControl dump from ADDR numpmid: 1
  29.0.5 : numval: 3 valfmt: 0 inst [0]
 inst [1]
 inst [2]
__pmResult dump from ADDR timestamp: 0.000000000 TIME numpmid: 1
  29.0.5 (sample.dupnames.four.colour, sample.colour): numval: 3 valfmt: 0 vlist[]:
    inst [0 or "red"] value INT
    inst [1 or "green"] value INT
    inst [2 or "blue"] value INT
[DATE] pmlogger(PID) Info: pmlogger: Caught signal 15, exiting

Log finished DATE
...
control_req: connection accepted on fd=N from localhost
control_req: connection accepted on fd=N from localhost

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER

TIMESTAMP 5 metrics
    2.3.3 (pmcd.pmlogger.host): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.3.0 (pmcd.pmlogger.port): inst [LOGGER_PID or "LOGGER_PID"] value PORT
    2.3.2 (pmcd.pmlogger.archive): inst [LOGGER_PID or "LOGGER_PID"] value STRING
    2.0.23 (pmcd.pid): value NUMBER
    2.0.24 (pmcd.seqnum): value NUMBER
