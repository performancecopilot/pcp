#!/bin/sh
# PCP QA Test No. 1475
# Exercise the BPF PMDA CO-RE mountsnoop module - install, remove and values.
#
# Copyright (c) 2022 Sohaib Mohamed.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bpf

_pmdabpf_check
_pmdabpf_require_kernel_version 5 0
_pmdabpf_require_libbpf_version 1 0

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal

cat <<EOF >$tmp.conf
# Installed by PCP QA test $seq on `date`
[mountsnoop.so]
enabled=true
EOF
_pmdabpf_tryload $tmp.conf

_cleanup()
{
    _pmdabpf_cleanup
}

_prepare_pmda bpf
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
_pmdabpf_install $tmp.conf
_pmdabpf_wait_for_metric

# Generate system activity for the CO-RE mountsnoop module
$sudo umount /no/such/dir >>$seq_full 2>&1

echo "=== report metric values for comm ==="
pminfo -dfmtT bpf.mountsnoop.comm 2>&1 | tee -a $seq_full \
| _value_filter_exact '"umount"'

echo "=== report metric values for pid ==="
pminfo -dfmtT bpf.mountsnoop.pid 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for tid ==="
pminfo -dfmtT bpf.mountsnoop.tid 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for mnt_ns ==="
pminfo -dfmtT bpf.mountsnoop.mnt_ns 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for call ==="
pminfo -dfmtT bpf.mountsnoop.call 2>&1 | tee -a $seq_full \
| _value_filter_exact '"umount("/no/such/dir", 0x0.* = -ENOENT"'

_pmdabpf_remove

status=0
exit

