#!/bin/sh
# PCP QA Test No. 819
# Testing pmdaelasticsearch versioned metrics
#
# Copyright (c) 2016 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ -f $PCP_PMDAS_DIR/elasticsearch/pmdaelasticsearch.python ] || \
	_notrun "elasticsearch pmda not installed"

port=9200
$PCP_BINADM_DIR/telnet-probe -c localhost $port || \
    _notrun "Noones home on the default elasticsearch port $port"


status=1	# failure is the default!

pmdaelasticsearch_remove()
{
    echo
    echo "=== remove elasticsearch agent ==="
    $sudo ./Remove >$tmp.out 2>&1
    _filter_pmda_remove <$tmp.out \
    | sed \
	-e '/^Starting pmlogger \.\.\. /d' \
    # end
}

pmdaelasticsearch_install()
{
    # start from known starting points
    cd $PCP_PMDAS_DIR/elasticsearch
    $sudo ./Remove >/dev/null 2>&1
    if ! _service pmcd stop 2>&1; then _exit 1; fi | _filter_pcp_stop

    echo
    echo "=== elasticsearch agent installation ==="
    $sudo ./Install </dev/null >$tmp.out 2>&1
    cat $tmp.out >>$seq_full
    # Check elasticsearch metrics have appeared ... X metrics and Y values
    _filter_pmda_install <$tmp.out \
    | sed \
	-e '/^Starting pmlogger \.\.\. /d' \
        -e '/^Waiting for pmcd/s/\.\.\.[. ]*$/DOTS/' \
        -e 's/[0-9][0-9]* warnings, //' \
    | $PCP_AWK_PROG '
/Check elasticsearch metrics have appeared/ { if ($7 >= 90 && $7 <= 250) $7 = "X"
                                              if ($10 >= 0 && $10 <= 500) $10 = "Y"
                                            }
                                            { print }'
}

_prepare_pmda elasticsearch
# note: _restore_auto_restart pmcd done in _cleanup_pmda()
trap "_cleanup_pmda elasticsearch; exit \$status" 0 1 2 3 15

_stop_auto_restart pmcd

# real QA test starts here
pmdaelasticsearch_install

if pminfo -v elasticsearch.nodes.jvm.pid > $tmp.info 2> $tmp.err
then
    echo "Checking a couple jvm metrics for error conditions (should be blank)"
    pminfo -v elasticsearch.nodes.jvm.pid
    pminfo -v elasticsearch.nodes.jvm.version
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi

pmdaelasticsearch_remove

# success, all done
status=0

exit
