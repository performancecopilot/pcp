#!/bin/sh
# PCP QA Test No. 1927
# Exercise the sockets PMDA Install/Remove and string metric bug.
#
# Copyright (c) 2022 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ -f $PCP_PMDAS_DIR/sockets/pmdasockets ] || _notrun "sockets pmda not installed"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=0	# success is the default!

_filter_sockets()
{
    sed \
	-e '/No value(s) available/d' \
	-e '/No such file or directory/d' \
    #end
}

pmdasockets_remove()
{
    echo
    echo "=== remove sockets agent ==="
    $sudo ./Remove >$tmp.out 2>&1
    _filter_pmda_remove <$tmp.out
}

pmdasockets_install()
{
    # start from known starting points
    cd $PCP_PMDAS_DIR/sockets
    $sudo ./Remove >/dev/null 2>&1

    echo
    echo "=== sockets agent installation ==="
    $sudo ./Install </dev/null >$tmp.out 2>&1
    cat $tmp.out >>$seq_full
    # Check sockets metrics have appeared ... X metrics and Y values
    _filter_pmda_install <$tmp.out \
    | sed \
        -e 's/[0-9][0-9]* warnings, //' \
    | $PCP_AWK_PROG '
/Check network.persocket metrics have appeared/ {
                                          if ($7 >= 50 && $7 <= 99) $7 = "X"
                                          if ($10 >= 0) $10 = "Y"
                                        }
                                        { print }'
}

_prepare_pmda sockets
# note: _restore_auto_restart pmcd done in _cleanup_pmda()
trap "_cleanup_pmda sockets; _cleanup; exit \$status" 0 1 2 3 15

_stop_auto_restart pmcd

# real QA test starts here
pmdasockets_install

# pmcd should have been started by the Install process - check
if pminfo -v network.persocket > $tmp.out 2> $tmp.err
then
    :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi
cat $tmp.out $tmp.err | _filter_sockets

echo "Check the values for v6only metric are 0 or 1 ..."
pminfo -f network.persocket.v6only > $tmp.out 2> $tmp.err
cat $tmp.out $tmp.err | tee -a $seq_full | _filter_sockets | grep -E -v 'value [01]$' | sed -e '/^$/d'

pmdasockets_remove
status=0

# success, all done
exit
