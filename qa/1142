#!/bin/sh
# PCP QA Test No. 1142
# pmie - #'instname' matching tests
#
# See also qa/1107 for archive version.
#
# Copyright (c) 2019 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_need_metric proc.psinfo.utime
_need_metric disk.dev.total

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

_filter()
{
    # DATE is like: Thu Jan 31 08:56:58 2019 or Thu Jan 31 18:20:11
    tee -a $seq_full \
    | sed \
	-e '/.*Info: evaluator exiting/d' \
	-e 's/[A-Z][a-z][a-z] [A-Z][a-z][a-z]  *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9] [0-9][0-9][0-9][0-9]/DATE/' \
	-e 's/[A-Z][a-z][a-z] [A-Z][a-z][a-z]  *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9]/DATE/' \
	-e 's/ pmie([0-9][0-9]*) / pmie(PID) /' \
	-e 's;\['"$pmcd_full"'];[PMCDPID PMCDPATH];' \
	-e 's/\['"$pmcd_pid"']/[PMCDPID]/' \
	-e "s/\"$pmcd_trunc\"/\"PMCDPID_TRUNC\"/" \
	-e 's/'"$pmcd_pid"'_/PMCDPID_/' \
	-e 's/\['"$disk_full"'/[DISK/' \
	-e "s/\"$disk_trunc\"/\"DISK_TRUNC\"/" \
	-e 's/'"$disk_full"'_/DISK_/' \
	-e 's/(host '"`hostname`"')/(host LOCALHOSTNAME)/' \
	-e 's/ [0-9][0-9.]*$/ NUMBER/' \
    # end
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
cat <<'End-of-File' >$tmp.config
some_inst ( proc.psinfo.utime #'INST' >= 0) -> print "[%i] %v";
End-of-File

pmcd_full=`pminfo -f proc.psinfo.utime | grep ' [^ ]*pmcd"]' \
      | sed -e 's/.* or "//' -e 's/".*//'`
pmcd_pid=`echo "$pmcd_full" | sed -e 's/ .*//'`
pmcd_trunc=`echo "$pmcd_pid" | sed -e 's/.$//'`
echo pmcd_full=$pmcd_full pmcd_pid=$pmcd_pid pmcd_trunc=$pmcd_trunc >>$seq_full

disk_full=`pminfo -f disk.dev.total | grep '^  *inst ' \
      | sed -e 's/.* or "//' -e 's/".*//' -e 1q`
disk_trunc=`echo "$disk_full" | sed -e 's/.$//'`
echo disk_full=$disk_full disk_trunc=$disk_trunc >>$seq_full

echo "=== proc.psinfo.utime (space in instance name) ==="

for name in "$pmcd_full" \
    `echo "$pmcd_full" | sed -e 's/ .*//'` \
    `echo "$pmcd_full" | sed -e 's/ .*/_not_here/'` \
    "$pmcd_trunc"
do
    echo
    echo "--- $name ---" >>$seq_full
    sed -e "s;INST;$name;" <$tmp.config \
    | pmie -t 0.1sec -T +0.35sec 2>&1 \
    | _filter
done

cat <<'End-of-File' >$tmp.config
some_inst ( disk.dev.total #'INST' >= 0) -> print "[%i] %v";
End-of-File

echo
echo "=== disk.dev.total (no space instance name) ==="

for name in "$disk_full irrelevant disk name" \
    "$disk_full" \
    `echo "$disk_full" | sed -e 's/$/_not_here/'` \
    "$disk_trunc"
do
    echo
    echo "--- $name ---" >>$seq_full
    sed -e "s;INST;$name;" <$tmp.config \
    | pmie -t 0.1sec -T +0.35sec 2>&1 \
    | _filter
done

# success, all done
status=0
exit
