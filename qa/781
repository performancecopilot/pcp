#!/bin/sh
# PCP QA Test No. 781
# Exercise pmlogconf and pmlogger_check interactions.
#
# Copyright (c) 2014 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_cleanup()
{
    # should be none running, but just in case...
    $signal -a -s TERM pmlogger >/dev/null 2>&1
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
host=`hostname`
signal=$PCP_BINADM_DIR/pmsignal
trap "_cleanup; exit \$status" 0 1 2 3 15

# in case /var/tmp is a symlink to /tmp, then the diagnostics sometimes
# use /tmp and sometimes use /var/tmp ... handle both in the filter
#
_filter()
{
    # make verbose show-me mode pmlogger_check output deterministic
    sed \
	-e '/\/NOTICES/d' \
	-e "s,$tmp,LOGDIR,g" \
	-e "s,/tmp/$seq-$$,LOGDIR,g" \
	-e 's,/privateLOGDIR,LOGDIR,g' \
	-e "s,$host,HOSTNAME,g" \
	-e "s,%Y%m%d.%H.%M,ARCHIVE,g" \
	-e "s@$PCP_BINADM_DIR\/@@" \
	-e '/^+ date-and-timestamp/s/stamp .*/stamp .../' \
	-e '/^+ ln /d' \
    # end
}

mkdir $tmp
chmod ugo+w $tmp
cd $tmp

echo >control '# PCP archive logging configuration/control - for qa/'$seq'
#
$version=1.1
LOCALHOSTNAME   n   n   logs/LOCALHOSTNAME -c ./config
no.such.host.pcp.io    n   n   logs/no.such.host.pcp.io  -c ./config
another.host    n   n   logs/another.host  -c ./config'

# real QA test starts here
echo Using control file: > $seq_full
cat control >> $seq_full
echo pmlogger_check out: >> $seq_full
export PCP_COMPRESSAFTER=0
$sudo $PCP_BINADM_DIR/pmlogger_check -V -N -c control >$tmp.log  2>$tmp.err
cat $tmp.err $tmp.log | tee -a $seq_full | _filter

echo pmlogger_check end: >> $seq_full
find . >> $seq_full

# success, all done
status=0
exit
