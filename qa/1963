#!/bin/sh
# PCP QA Test No. 1963
# Exercise Linux hinv.cpu.clock metric sysfs fallback.
#
# Copyright (c) 2024 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ $PCP_PLATFORM = linux ] || _notrun "Linux-specific CPU metric testing"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter_instances()
{
    $here/src/sortinst | sed -e 's/inst \[./inst [N/g'
}

# real QA test starts here
root=$tmp.root
export LINUX_STATSPATH=$root
pmda=$PCP_PMDAS_DIR/linux/pmda_linux.so,linux_init
local="-L -K clear -K add,60,$pmda"

metrics=`pminfo $local hinv.cpu.clock | LC_COLLATE=POSIX sort`
for tgz in $here/linux/sysfs-cpufreq-scaling-*.tgz
do
    rm -fr $root
    mkdir $root || _fail "root in use when processing $tgz"
    cd $root
    tar xzf $tgz
    base=`basename $tgz`

    LINUX_NCPUS=`grep '^cpu[0-9][0-9]* ' proc/stat | wc -l | sed -e 's/ //g'`
    export LINUX_NCPUS
    echo "LINUX_NCPUS=$LINUX_NCPUS" >>$seq_full

    echo "== Checking hinv.cpu.clock metric values - $base"
    pminfo $local -f $metrics | _filter_instances
    echo && echo "== done" && echo

    cd $here
done

# success, all done
status=0
exit
