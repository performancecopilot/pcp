#!/bin/sh
# PCP QA Test No. 841
# Exercise slow_python PMDA connect_pmcd() method - Python variant
# [see also qa/763 for the Perl version]
#
# Copyright (c) 2014 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.python

_cleanup()
{
    if pmprobe -I pmcd.agent.status | grep '"slow_python"' >/dev/null
    then
	cd $here/pmdas/slow_python
	$sudo ./Remove >>$seq_full 2>&1
	$sudo rm -f domain.h.python
	cd $here
    fi
}

status=1	# failure is the default!
trap "cd $here; rm -rf $tmp.*; _cleanup; exit \$status" 0 1 2 3 15

$python -c 'from pcp import pmda' 2>/dev/null
test $? -eq 0 || _notrun 'Python pcp pmda module is not installed'

cd pmdas/slow_python
$PCP_MAKE_PROG clean >>$seq_full 2>&1

# real QA test starts here

# 4 below must be bigger than pmcd's creds_timeout ... make sure
# this is set to the default [3]
#
pmstore pmcd.control.creds_timeout 3 >>$seq_full 2>&1

for start in 0 4 -4
do
    echo | tee -a $seq_full
    case "$start"
    in
	0)
	    echo "=== no start delay ===" | tee -a $seq_full
	    ;;
	-[0-9]*)
	    echo "=== start delay `expr \( -1 \) \* $start` sec, no connect_pmcd() ===" | tee -a $seq_full
	    ;;
	[0-9]*)
	    echo "=== start delay $start sec, using connect_pmcd() ===" | tee -a $seq_full
	    ;;
    esac
    date >>$seq_full
    cat <<End-of-File | $sudo ./Install
$start
End-of-File
    date >>$seq_full
    pminfo -f slow_python | tee -a $seq_full
    $sudo cat $PCP_LOG_DIR/pmcd/slow_python.log >>$seq_full
    $sudo tail -40 $PCP_LOG_DIR/pmcd/pmcd.log >>$seq_full
done

# success, all done
status=0

exit
