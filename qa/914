#!/bin/sh
# PCP QA Test No. 914
# Exercise fetch profile handling in a multithreaded environment ...
# this one exposes the bug that variously is mentioned at:
# https://github.com/cockpit-project/cockpit/issues/6108 and
# https://bugzilla.redhat.com/show_bug.cgi?id=1235962
# and most recently associated with
# https://github.com/performancecopilot/pcp/pull/693
#
# Copyright (c) 2019 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
for args in "-h localhost,sampledso.hordes.one" \
	    "-a archives/pcp-pidstat-process-args,nfs.server.reqs" \
	    "-L,sampledso.hordes.one"
do
    src=`echo "$args" | sed -e 's/,.*//'`
    metric=`echo "$args" | sed -e 's/.*,//'`
    echo | tee -a $seq_full
    echo "=== $src $metric ===" | tee -a $seq_full
    case "$src"
    in
	-a*)	# if archive is compressed, uncompress once to make
		# test run faster
		base=`echo $src | sed -e 's/-a *//'`
		for file in $base.*
		do
		    suff=`echo $file | sed -e "s@$base.@@" -e 's/\.xz$//'`
		    case "$file"
		    in
			*.xz)
				xzcat <"$file" >"$tmp.$suff"
				;;
			*)
				cp "$file" "$tmp.$suff"
				;;
		    esac
		done
		src="-a $tmp"
		;;
    esac
   src/profilecrash -v $src -s 100 $metric >$tmp.out 2>$tmp.err
    cat $tmp.err $tmp.out >>$seq_full
    cat $tmp.err $tmp.out \
    | grep -E -v 'include|exclude| numpmid=1 '
done

# success, all done
status=0
exit
