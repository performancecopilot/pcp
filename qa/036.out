QA output created by 036
=== success cases ===
--- echo ---
__pmProcessExec: argc=2 toss=0 "/bin/echo" "blah;trickme"
__pmProcessExec: child pid=PID
__pmProcessExec: child pid=PID wait_pid=PID exit=0
__pmProcessExec -> 0
blah;trickme
--- /bin/sh -c ---
+++ stderr +++
__pmProcessExec: argc=3 toss=0 "/bin/sh" "-c" "( echo 'f o o'; sleep 1; kill -KILL $$; sleep 1; echo b\ a\ r )"
__pmProcessExec: child pid=PID
__pmProcessExec: child pid=PID wait_pid=PID signal=9
+++ stdout +++
f o o
__pmProcessExec -> 1009 signal=9
--- pipe in ---
__pmProcessPipe: argc=3 type="r" toss=0 "echo" "hullo" "world"
__pmProcessPipe: map[0 of 1] child pid=PID fp=ADDR
__pmProcessPipe(..., "r", ...) -> 0
--- start pipe output ---
hullo world
--- end ---
__pmProcessPipeClose: child pid=PID wait_pid=PID exit=0
__pmProcessPipeClose() -> 0
--- pipe out ---
__pmProcessPipe: argc=2 type="w" toss=0 "od" "-c"
__pmProcessPipe: map[0 of 1] child pid=PID fp=ADDR
__pmProcessPipe(..., "w", ...) -> 0
--- start pipe input ---
hello other world
--- end ---
0000000 h e l l o o t h e r w o r l
0000020 d \n
0000022
__pmProcessPipeClose: child pid=PID wait_pid=PID exit=0
__pmProcessPipeClose() -> 0
---  exec and executable not on $PATH ---
__pmProcessExec: argc=5 toss=0 "TMP.sh" "blah;trickme|foo" "cat" "and" "dog"
__pmProcessExec: child pid=PID
my arg echoer ...
[0] TMP.sh
[1] blah;trickme|foo
[2] cat
[3] and
[4] dog
__pmProcessExec: child pid=PID wait_pid=PID exit=0
__pmProcessExec -> 0
---  popen and executable not on $PATH ---
__pmProcessPipe: argc=5 type="r" toss=0 "TMP.sh" "blah;trickme|foo" "cat" "and" "dog"
__pmProcessPipe: map[0 of 1] child pid=PID fp=ADDR
__pmProcessPipe(..., "r", ...) -> 0
--- start pipe output ---
my arg echoer ...
[0] TMP.sh
[1] blah;trickme|foo
[2] cat
[3] and
[4] dog
--- end ---
__pmProcessPipeClose: child pid=PID wait_pid=PID exit=0
__pmProcessPipeClose() -> 0

=== error and failure cases ===
__pmProcessExec -> 127 exit=127
__pmProcessExec: argc=4 toss=0 "/a/b/c" "-f" "oo" "bar"
__pmProcessExec: child pid=PID
__pmProcessExec: child pid=PID execvp(/a/b/c, ...) failed
__pmProcessExec: child pid=PID wait_pid=PID exit=127
