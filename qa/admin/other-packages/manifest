# Packaging requirements for check-vm.
#
# Each line has the following syntax ...
# - one line per package per platform
# - optional guard (word ending with ?) ... if the guard is deemed "true"
#   for the current platform the line is used, otherwise the line is
#   ignored ... if the guard starts with ! then negate the test ...
#   guards are usually one of the packaging tools (see pkgtools assignment
#   in check-vm)
# - target ... we expect the package to install this "target" thing and if
#   if cannot be found then we assume the package is not installed ...
#   target items can:
#	start with a /		test for existence of file or directory
#                               (alternates separated by |)
#				Note that some package managers don't return
#				directory names for search requests, so we
#				prefer to use file names here, although
#				directory names can be used.
#	contain ::		test for presence of the associated Perl module
#	otherwise		test for an executable with which(1)
# - text after [ is treated as annotation (usually package name and notes,
#   but also marked N/A if a package is not available on a particular
#   platform, if the package is installed with an alternate installer,
#   then the form <package_manager>(<package_name>) may be used, e.g.
#   pip3(jsonpointer) or cpan(Date::Format)
#   if there is more than one alternate package source, these can be
#   separated by white space or the word "or", e.g. for RedHat and SuSE
#   rpm naming differences
# - text after # is treated as a comment
# - blank lines are ignored
#

# boiler-plate entries for adding a new packaging requirement
#
#dpkg?		foo		[? {dpkg-based, Debian, Ubuntu, LinuxMint, MX, ...}]
#rpm?		foo		[? {rpm-based, RHEL, Fedora, OpenSuSE, ...}]
#emerge?		foo		[? {Gentoo}]
#pkgin?		foo		[? {NetBSD}]]
#pkg_add?	foo		[? {OpenBSD}]]
#F_pkg?		foo		[? {FreeBSD}]
#S_pkg?		foo		[? {Solaris}]
#slackpkg?	foo		[? {Slackware}]
#pacman?		foo		[? {Arch Linux}]
#brew?		foo		[? {MacOS?}]

#
# common executables
#
# --bash(1)
dpkg?		bash		[bash]
rpm?		bash		[bash]
emerge?		bash		[bash]
pkgin?		bash		[bash]
pkg_add?	bash		[bash]
F_pkg?		bash		[bash]
S_pkg?		bash		[shell/bash]
slackpkg?	bash		[bash]
pacman?		bash		[core/bash]
brew?		bash		[bash]
# --sed(1)
dpkg?		sed		[sed]
rpm?		sed		[sed]
emerge?		sed		[sed]
pkgin?		sed		[sed]
pkg_add?	sed		[sed or base OpenBSD install]
F_pkg?		sed		[sed or base FreeBSD install]
S_pkg?		sed		[text/gnu-sed]
slackpkg?	sed		[sed]
pacman?		sed		[core/sed]
brew?		sed		[sed]
# --grep(1)
dpkg?		grep		[grep]
rpm?		grep		[grep]
emerge?		grep		[grep]
pkgin?		grep		[grep]
pkg_add?	grep		[grep or base OpenBSD install]
F_pkg?		grep		[grep or base FreeBSD install]
S_pkg?		grep		[text/gnu-grep]
slackpkg?	grep		[grep]
pacman?		grep		[core/grep]
brew?		grep		[grep]
# --ed(1)
dpkg?		ed		[ed]
rpm?		ed		[ed]
emerge?		ed		[ed]
pkgin?		ed		[ed]
pkg_add?	ed		[ed or base OpenBSD install]
F_pkg?		ed		[ed or base FreeBSD install]
S_pkg?		ed		[SUNWcs]
slackpkg?	ed		[ed]
pacman?		ed		[extra/ed]
brew?		ed		[ed]
# --make(1)
dpkg?		make		[make]
rpm?		make		[make]
emerge?		make		[make]
pkgin?		make		[make]
pkg_add?	make		[make or base OpenBSD install]
F_pkg?		make		[make]
S_pkg?		gmake		[developer/build/gnu-make]
slackpkg?	make		[make]
pacman?		make		[core/make]
brew?		make		[make]
# --flex(1)
dpkg?		flex		[flex]
rpm?		flex		[flex]
emerge?		flex		[flex]
pkgin?		flex		[flex]
pkg_add?	flex		[flex or base OpenBSD install]
F_pkg?		flex		[flex or base FreeBSD install]
S_pkg?		flex		[developer/lexer/flex]
slackpkg?	flex		[flex]
pacman?		flex		[core/flex]
brew?		flex		[flex]
# -- bison(1)
dpkg?		bison		[bison]
rpm?		bison		[bison]
emerge?		bison		[bison]
pkgin?		bison		[bison]
pkg_add?	bison		[bison]
F_pkg?		bison		[bison]
S_pkg?		bison		[developer/parser/bison]
slackpkg?	bison		[bison]
pacman?		bison		[core/bison]
brew?		bison		[bison]
# -- gdb(1)
dpkg?		gdb		[gdb]
rpm?		gdb		[gdb]
emerge?		gdb		[gdb]
pkgin?		gdb		[gdb]
pkg_add?	gdb		[gdb or base OpenBSD install]
F_pkg?		gdb		[gdb]
S_pkg?		gdb		[developer/debug/gdb]
slackpkg?	gdb		[gdb]
pacman?		gdb		[extra/gdb]
brew?		gdb		[gdb]
# -- gawk(1)
dpkg?		gawk		[gawk]
rpm?		gawk		[gawk]
emerge?		gawk		[gawk]
pkgin?		gawk		[gawk]
pkg_add?	gawk		[gawk]
F_pkg?		gawk		[gawk]
S_pkg?		gawk		[text/gawk]
slackpkg?	gawk		[gawk]
pacman?		gawk		[core/gawk]
brew?		gawk		[gawk]
# -- autoconf
dpkg?		autoconf		[autoconf]
rpm?		autoconf		[autoconf]
emerge?		autoconf		[sys-devel/autoconf-wrapper]
pkgin?		autoconf		[autoconf]
pkg_add?	autoconf		[autoconf or metaauto]
F_pkg?		autoconf		[autoconf or autoconf-wrapper]
S_pkg?		autoconf		[developer/build/autoconf]
slackpkg?	autoconf		[autoconf]
pacman?		autoconf		[core/autoconf]
brew?		autoconf		[autoconf]
# -- gcc
dpkg?		gcc		[gcc]
rpm?		gcc		[gcc or ccache]
emerge?		gcc		[sys-devel/gcc]
pkgin?		gcc		[base NetBSD install]
pkg_add?	gcc		[base OpenBSD install]
F_pkg?		gcc		[gcc]
S_pkg?		gcc		[developer/gcc-6]
slackpkg?	gcc		[gcc]
pacman?		gcc		[core/gcc]
brew?		gcc		[base Darwin install]
# -- git
dpkg?		git		[git]
rpm?		git		[git or git-core]
emerge?		git		[dev-vcs/git]
pkgin?		git		[git-base]
pkg_add?	git		[git]
F_pkg?		git		[git]
S_pkg?		git		[developer/versioning/git]
slackpkg?	git		[git]
pacman?		git		[extra/git]
brew?		git		[base Darwin install]
# -- mktemp
dpkg?		mktemp		[coreutils]
rpm?		mktemp		[coreutils or coreutils-single]
emerge?		mktemp		[sys-apps/coreutils]
pkgin?		mktemp		[base NetBSD install]
pkg_add?	mktemp		[base OpenBSD install]
F_pkg?		mktemp		[base FreeBSD install]
S_pkg?		mktemp		[file/gnu-coreutils]
slackpkg?	mktemp		[bin]
pacman?		mktemp		[core/coreutils]
brew?		mktemp		[base Darwin install]
# -- man (QA optional)
#
dpkg?		man		[man-db (QA optional)]
rpm?		man		[man-db or mandoc (QA optional)]
emerge?		man		[? (QA optional)]
pkgin?		man		[? (QA optional)]
pkg_add?	man		[base OpenBSD install (QA optional)]
F_pkg?		man		[base FreeBSD install (QA optional)]
S_pkg?		man		[? (QA optional)]
slackpkg?	man		[man-db (QA optional)]
pacman?		man		[? (QA optional)]
brew?		man		[? (QA optional)]

# NetBSD/OpenBSD/FreeBSD specials
#
pkgin?		gtar		[gtar-base]
pkg_add?	gtar		[gtar]
F_pkg?		gtar		[gtar]
pkgin?		gmake		[gmake]
pkg_add?	gmake		[gmake]
F_pkg?		gmake		[gmake]
pkg_add?	pkg_locate	[pkglocatedb]

# Gentoo specials
emerge?		equery		[app-portage/gentoolkit]

# optional executables
#
dpkg?	chrpath			[chrpath]
rpm?	rpmbuild		[rpm-build]

# other build prerequisites
#
dpkg?	dpkg-buildpackage		[dpkg-dev]
dpkg?	dh_autotools-dev_updateconfig	[autotools-dev]
dpkg?	/usr/share/doc/build-essential	[build-essential]
dpkg?	dh				[debhelper]
dpkg?	/usr/bin/dh_pypy		[dh-python]
dpkg?	/usr/share/doc/python-all-dev	[python-all-dev]
dpkg?   /usr/share/doc/python-all       [python-all]
dpkg?   /usr/share/doc/python3-all      [python3-all]
dpkg?   /usr/share/man/man1/python-config.1.gz  [python-dev]
dpkg?   /usr/share/man/man1/python3-config.1.gz [python3-dev]
dpkg?	/usr/share/doc/python3-all-dev	[python3-all-dev]
dpkg?	/usr/share/doc/libdbd-pg-perl	[libdbd-pg-perl]
dpkg?	/usr/share/doc/libclass-dbi-perl	[libclass-dbi-perl]
dpkg?	/usr/lib/*/libz.so		[zlib1g-dev]
rpm?	ragel				[ragel]

# -- perl-interpreter (Fedora 24 or later, but we don't have release
#    version control)
rpm?	perl				[perl or perl-interpreter or perl-base]
# -- cpan
dpkg?		cpan		[perl]
rpm?		cpan		[perl-CPAN or perl]
emerge?		cpan		[dev-lang/perl]
pkgin?		cpan		[base NetBSD install]
pkg_add?	cpan		[base OpenBSD install]
F_pkg?		cpan		[perl or perl5]
S_pkg?		cpan		[base OpenIndiana install]
slackpkg?	cpan		[perl]
pacman?		cpan		[extra/perl-cpanplus]
brew?		cpan		[base Darwin install]
# -- pkg-config
dpkg?		pkg-config	[pkg-config]
rpm?		pkg-config	[pkgconf-pkg-config or pkg-config or pkgconfig]
emerge?		pkg-config	[dev-util/pkgconfig]
pkgin?		pkg-config	[pkg-config]
pkg_add?	pkg-config	[base OpenBSD install]
F_pkg?		pkg-config	[pkgconf]
S_pkg?		pkg-config	[developer/build/pkg-config]
slackpkg?	pkg-config	[pkg-config]
pacman?		pkg-config	[core/pkgconf]
brew?		pkg-config	[pkg-config]
# -- python
dpkg?		python3		[python3-minimal]
rpm?		python3		[python3]
emerge?		python3		[?]
pkgin?		python3		[?]
pkg_add?	python3		[python3]
F_pkg?		python3.9|python3	[python39 or python3]
S_pkg?		python3		[?]
slackpkg?	python3		[python3]
pacman?		python3		[?]
brew?		python3		[python]
# -- pylint
dpkg?		pylint		[pylint (build optional)]
rpm?		pylint		[pylint or python3-pylint (build optional)]
emerge?		pylint		[dev-python/pylint (build optional)]
pkgin?		pylint3.6	[py36-pylint (build optional)]
pkg_add?	pylint		[pylint3 (build optional)]
F_pkg?		pylint		[pylint-py3[0-9]* (build optional)]
S_pkg?		pylint		[developer/python/pylint-27 (build optional)]
slackpkg?	pylint		[pylint (build optional)]
pacman?		pylint		[extra/python-pylint (build optional)]
brew?		pylint		[N/A (build optional)]
# -- mandoc for "make check"
dpkg?		mandoc		[mandoc (build optional)]
rpm?		mandoc		[mandoc (build optional)]
emerge?		mandoc		[dev-util/mandoc (build optional)]
pkgin?		mandoc		[N/A (build optional)]
pkg_add?	mandoc		[mandoc or base OpenBSD install (build optional)]
F_pkg?		mandoc		[mandoc or base FreeBSD install (build optional)]
S_pkg?		mandoc		[N/A (build optional)]
slackpkg?	mandoc		[mandoc (build optional)]
pacman?		mandoc		[N/A (build optional)]
brew?		mandoc		[mandoc (build optional)]
# -- cppcheck for "make check"
dpkg?		cppcheck	[cppcheck (build optional)]
rpm?		cppcheck	[cppcheck (build optional)]
emerge?		cppcheck	[dev-util/cppcheck (build optional)]
pkgin?		cppcheck	[N/A (build optional)]
pkg_add?	cppcheck	[cppcheck (build optional)]
F_pkg?		cppcheck	[cppcheck (build optional)]
S_pkg?		cppcheck	[N/A (build optional)]
slackpkg?	cppcheck	[cppcheck (build optional)]
pacman?		cppcheck	[extra/cppcheck (build optional)]
brew?		cppcheck	[cppcheck (build optional)]
# -- libuv
dpkg?	/usr/include/uv.h	[libuv-dev or libuv1-dev (build optional)]
rpm?	/usr/include/uv.h	[libuv-devel (build optional)]
emerge?	/usr/include/uv.h	[dev-libs/libuv (build optional)]
pkgin?	/usr/pkg/include/uv.h	[libuv (build optional)]
pkg_add?	/usr/local/include/uv.h	[libuv (build optional)]
F_pkg?	/usr/local/include/uv.h	[libuv (build optional)]
S_pkg?	/usr/local/include/uv.h	[N/A (build optional)]
slackpkg?	uv.h		[N/A (build optional)]
pacman?	/usr/include/uv.h	[extra/libuv (build optional)]
brew?	/usr/local/include/uv.h	[libuv (build optional)]
# -- liblzma
dpkg?	/usr/include/lzma.h		[liblzma-dev (build optional)]
rpm?	/usr/include/lzma.h		[xz-devel (build optional)]
emerge?	/usr/include/lzma.h		[app-arch/xz-utils (build optional)]
pkgin?	/usr/pkg/include/lzma.h		[xz (build optional)]
pkg_add?	/usr/local/include/lzma.h	[xz (build optional)]
F_pkg?	/usr/include/lzma.h		[base FreeBSD install (build optional)]
S_pkg?	/usr/include/lzma.h		[compress/xz (build optional)]
slackpkg?	/usr/include/lzma.h	[xz (build optional)]
pacman?	/usr/include/lzma.h		[core/xz (build optional)]
brew?	/usr/local/include/lzma.h	[xz (build optional)]
# -- libsasl
dpkg?	/usr/include/sasl/sasl.h	[libsasl2-dev (build optional)]
rpm?	/usr/include/sasl/sasl.h	[cyrus-sasl-devel (build optional)]
emerge?	/usr/include/sasl/sasl.h	[dev-libs/cyrus-sasl (build optional)]
pkgin?	/usr/pkg/include/sasl/sasl.h	[cyrus-sasl (build optional)]
pkg_add?	/usr/local/include/sasl/sasl.h	[cyrus-sasl (build optional)]
F_pkg?	/usr/local/include/sasl/sasl.h	[cyrus-sasl (build optional)]
S_pkg?	/usr/include/sasl/sasl.h	[system/header (build optional)]
slackpkg?	/usr/include/sasl/sasl.h	[cyrus-sasl (build optional)]
pacman?	/usr/include/sasl/sasl.h	[core/libsasl (build optional)]
brew?	sasl.h				[N/A (build optional)]
# -- systemd API
dpkg?	/usr/include/systemd/sd-daemon.h	[libsystemd-dev (build optional)]
rpm?	/usr/include/systemd/sd-daemon.h	[systemd-devel (build optional)]
emerge?	sd-daemon.h				[N/A (build optional)]
F_pkg?	sd-daemon.h				[N/A (build optional)]
S_pkg?	sd-daemon.h				[N/A (build optional)]
slackpkg?	sd-daemon.h			[N/A (build optional)]
pacman?	/usr/include/systemd/sd-daemon.h	[core/systemd (build optional)]
brew?	sd-daemon.h				[N/A (build optional)]
# -- infiniband libibumad & libibmad
dpkg?	/usr/include/infiniband/umad.h	[libibumad-dev (build optional)]
rpm?	/usr/include/infiniband/umad.h	[rdma-core-devel or libibumad-devel (build optional)]
emerge?	/usr/include/infiniband/umad.h	[sys-fabric/libibumad (build optional)]
pkgin?	/usr/pkg/include/umad.h		[libibumad (build optional)]
pkg_add?	umad.h			[N/A (build optional)]
F_pkg?	umad.h				[N/A (build optional)]
S_pkg?	/usr/include/sys/ib/clients/of/sol_umad/sol_umad.h	[system/header (build optional)]
slackpkg?	umad.h			[N/A (build optional)]
pacman?		umad.h			[N/A (build optional)]
brew?		umad.h			[N/A (build optional)]
dpkg?	/usr/include/infiniband/mad.h	[libibmad-dev (build optional)]
rpm?	/usr/include/infiniband/mad.h	[infiniband-diags-devel or libibmad-devel or rdma-core-devel (build optional)]
emerge?	/usr/include/infiniband/mad.h	[sys-fabric/libibmad (build optional)]
pkgin?	/usr/pkg/include/mad.h		[libibmad (build optional)]
pkg_add?	/usr/local/include/mad.h	[libmad (build optional)]
F_pkg?	mad.h				[N/A (build optional)]
S_pkg?	/usr/include/sys/ib/clients/of/rdma/ib_user_mad.h	[system/header (build optional)]
slackpkg?	mad.h			[N/A (build optional)]
pacman?	/usr/include/mad.h		[extra/libmad (build optional)]
brew?	mad.h				[N/A (build optional)]
# -- avahi API
dpkg?	/usr/include/avahi-common/defs.h	[libavahi-common-dev (build optional)]
rpm?	/usr/include/avahi-common/defs.h	[avahi-devel or libavahi-devel (build optional)]
emerge?	/usr/include/avahi-common/defs.h	[net-dns/avahi (build optional)]
pkgin?	/usr/pkg/include/avahi-common/defs.h	[avahi (build optional)]
pkg_add?	/usr/local/include/avahi-common/defs.h	[avahi or avahi-libs (build optional)]
F_pkg?	/usr/local/include/avahi-common/defs.h	[avahi or avahi-app (build optional)]
S_pkg?	/usr/include/avahi-common/defs.h	[system/network/avahi (build optional)]
slackpkg?	avahi-common/defs.h		[N/A (build optional)]
pacman?	/usr/include/avahi-common/defs.h	[extra/avahi (build optional)]
brew?	avahi-common/defs.h			[N/A (build optional)]
# -- libpfm
dpkg?	/usr/include/perfmon/pfmlib_perf_event.h	[libpfm4-dev (build optional)]
rpm?	/usr/include/perfmon/pfmlib_perf_event.h	[libpfm-devel (build optional)]
emerge?	/usr/include/perfmon/pfmlib_perf_event.h	[dev-libs/libpfm (build optional)]
F_pkg?	pfmlib_perf_event.h		[N/A (build optional)]
S_pkg?	pfmlib_perf_event.h		[N/A (build optional)]
slackpkg?	pfmlib_perf_event.h	[N/A (build optional)]
pacman?	/usr/include/perfmon/pfmlib_perf_event.h	[N/A (build optional)]
brew?	pfmlib_perf_event.h		[N/A (build optional)]
# -- gcc C++ compiler
dpkg?	g++				[g++]
rpm?	g++				[gcc-c++ or ccache]
emerge?	g++				[sys-devel/gcc]
pkgin?	g++				[base NetBSD install]
pkg_add?	g++			[base OpenBSD install]
F_pkg?	g++				[gcc]
S_pkg?	g++				[developer/gcc-6]
slackpkg?	g++			[gcc-g++]
pacman?	g++				[core/gcc]
brew?	g++				[base Darwin install]
# files and libraries
# -- libreadline
dpkg?	/usr/include/readline/readline.h	[libreadline-dev or libreadline6-dev]
rpm?	/usr/include/readline/readline.h	[readline-devel]
emerge?	/usr/include/readline/readline.h	[sys-libs/readline]
pkgin?	/usr/pkg/include/readline/readline.h	[readline]
pkg_add?	/usr/local/include/ereadline/readline/readline.h|/usr/local/include/readline/readline.h	[readline]
F_pkg?	/usr/local/include/readline/readline.h	[readline]
S_pkg?	/usr/include/readline/readline.h	[library/readline]
slackpkg?	/usr/include/readline/readline.h	[readline]
pacman?	/usr/include/readline/readline.h	[core/readline]
brew?	/usr/local/opt/readline/include/readline/readline.h	[readline]
# -- libncurses
dpkg?	/usr/include/ncurses.h		[libncurses-dev or libncurses5-dev]
rpm?	/usr/include/ncurses.h		[ncurses-devel] # is this a bug in the spec file?
emerge?	/usr/include/ncurses.h		[sys-libs/ncurses]
pkgin?	/usr/pkg/include/ncurses/ncurses.h	[ncurses]
pkg_add?	/usr/include/ncurses.h	[base OpenBSD install]
F_pkg?	/usr/local/include/ncurses/ncurses.h	[ncurses]
S_pkg?	/usr/include/ncurses/ncurses.h		[library/ncurses]
slackpkg?	/usr/include/ncurses/ncurses.h		[ncurses]
pacman?	/usr/include/ncurses.h		[core/ncurses]
brew?	/usr/local/opt/ncurses/include/ncurses.h	[ncurses]
# python modules
# -- python six
dpkg?	/usr/lib/python3/*-packages/six.py	[python3-six]
rpm?	/usr/lib*/python3.*/*-packages/six.py	[python3-six or python36-six]
emerge?	/usr/lib/python3.*/*-packages/six.py	[dev-python/six]
pkgin?	/usr/pkg/lib/python3.*/*-packages/six.py	[py36-six]
pkg_add?	/usr/local/lib/python3.*/*-packages/six.py	[py3-six]
F_pkg?	/usr/local/lib/python3.*/*-packages/six.py	[py3[0-9]*-six]
S_pkg?	/usr/lib/python3.*/*-packages/*/*/six.py	[library/python/pip-27]
slackpkg?	/usr/lib*/python*/*-packages/*/*/six.py	[python-setuptools]
pacman?	/usr/lib/python3.*/*-packages/six.py	[extra/python-six]
brew?	/usr/local/lib/python3.*/*-packages/six.py	[pip3(six)]
# -- python jsonpointer
dpkg?	/usr/lib/python3/*-packages/jsonpointer.py	[python3-json-pointer (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/jsonpointer.py	[python3-jsonpointer]
emerge?	/usr/lib/python3.*/*-packages/jsonpointer.py	[dev-python/jsonpointer]
pkgin?	/usr/pkg/lib/python3.*/*-packages/jsonpointer.py	[python3-jsonpointer (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/jsonpointer.py	[py3-jsonpointer]
F_pkg?	/usr/local/lib/python3.*/*-packages/jsonpointer.py	[py3[0-9]*-jsonpointer]
S_pkg?	jsonpointer.py					[N/A (build optional)]
slackpkg?	jsonpointer.py				[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/jsonpointer.py	[extra/python-jsonpointer (build optional)
brew?	/usr/local/lib/python3.*/*-packages/jsonpointer.py	[pip3(jsonpointer) (build optional)
# -- python rtslib for lio PMDA
rpm?	/usr/lib*/python3.*/*-packages/rtslib		[python3-rtslib or python3-rtslib-fb]
F_pkg?	/usr/local/lib/python3.*/*-packages/rtslib	[py3[0-9]*-rtslib-fb]
# -- python setuptools
dpkg?	/usr/lib/python3/*-packages/setuptools/dist.py	[python3-setuptools]
rpm?	/usr/lib*/python3.*/*-packages/setuptools/dist.py	[python3-setuptools or python36-setuptools or platform-python-setuptools]
emerge?	/usr/lib/python3.*/*-packages/setuptools/dist.py	[dev-python/setuptools]
pkgin?	/usr/pkg/lib/python3.*/*-packages/setuptools/dist.py	[py36-setuptools]
pkg_add?	/usr/local/lib/python3.*/*-packages/setuptools/dist.py	[py3-setuptools]
F_pkg?	/usr/local/lib/python3.*/*-packages/setuptools/dist.py	[py3[0-9]*-setuptools]
S_pkg?	/usr/lib/python3.*/*-packages/setuptools/dist.py	[library/python/setuptools-34]
slackpkg?	/usr/lib*/python*/*-packages/setuptools/dist.py	[python-setuptools]
pacman?	/usr/lib/python3.*/*-packages/setuptools/dist.py	[extra/python-setuptools]
brew?	/usr/local/lib/python3.*/*-packages/setuptools/dist.py	[pip3(setuptools)]
# -- python libvirt and lxml for libvirt PMDA
dpkg?	/usr/lib/python3/*-packages/libvirt.py	[python3-libvirt (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/libvirt.py	[libvirt-python3 or python3-libvirt or python3[0-9]-libvirt python3-libvirt-python (build optional)]
emerge?	/usr/lib/python3.*/*-packages/libvirt.py	[dev-python/libvirt-python (build optional)]
pkgin?	libvirt.py		[py36-libvirt (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/libvirt.py	[py3-libvirt (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/libvirt.py	[py3[0-9]*-libvirt]
S_pkg?	/usr/lib/python3.*/*-packages/libvirt	[N/A (build optional)]
slackpkg?	libvirt.py	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/libvirt.py	[extra/libvirt-python (build optional)]
brew?	/usr/local/lib/libvirt/lock-driver		[libvirt (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/libvirt.py	[pip3(libvirt-python) (build optional)]
dpkg?	/usr/lib/python3/*-packages/lxml/sax.py	[python3-lxml (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/lxml/sax.py	[python3-lxml or python36-lxml (build optional)]
emerge?	/usr/lib/python3.*/*-packages/lxml/sax.py	[dev-python/lxml (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/lxml/sax.py	[py36-lxml (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/defusedxml/sax.py	[py3-defusedxml (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/lxml/sax.py	[py3[0-9]*-lxml (build optional)]
S_pkg?	/usr/lib/python3.*/*-packages/lxml/sax.py	[library/python/lxml-34 (build optional)]
slackpkg?	lxml/sax.py	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/defusedxml/sax.py	[extra/python-defusedxml (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/lxml/sax.py	[pip3(lxml) (build optional)]
# -- python prometheus_client
dpkg?	/usr/lib/python3/*-packages/prometheus_client	[python3-prometheus-client (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/prometheus_client	[python3-prometheus_client (build optional)]
emerge?	/usr/lib/python3.*/*-packages/prometheus_client	[dev-python/prometheus_client (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/prometheus_client	[py36-prometheus-client (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/prometheus_client	[py3-prometheus_client (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/prometheus_client/core.py	[py3[0-9]*-prometheus-client]
S_pkg?	/usr/lib/python3.*/*-packages/prometheus_client	[N/A (build optional)]
slackpkg?	/usr/lib*/python*/*-packages/prometheus_client	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/prometheus_client/core.py	[extra/python-prometheus_client (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/prometheus_client/core.py	[pip3(prometheus_client) (build optional)]
# -- python elasticsearch
dpkg?	/usr/lib/python3/*-packages/elasticsearch	[python3-elasticsearch (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/elasticsearch	[python3-elasticsearch (build optional)]
emerge?	/usr/lib/python3.*/*-packages/elasticsearch5	[dev-python/elasticsearch-py (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/elasticsearch/transport.py	[py36-elasticsearch (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/elasticsearch/transport.py	[py3-elasticsearch (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/elasticsearch/transport.py	[py3[0-9]*-elasticsearch]
S_pkg?	/usr/lib/python3.*/*-packages/elasticsearch	[N/A (build optional)]
slackpkg?	/usr/lib*/python*/*-packages/elasticsearch	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/elasticsearch/transport.py	[extra/python-elasticsearch (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/elasticsearch/transport.py	[pip3(elasticsearch) (build optional)]
# -- python openpyxl
dpkg?	/usr/lib/python3/*-packages/openpyxl	[python3-openpyxl (build optional)]
rpm?	/usr/lib*/python3.*/*-packages/openpyxl	[python3-openpyxl (build optional)]
emerge?	/usr/lib/python3.*/*-packages/openpyxl	[dev-python/openpyxl (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/openpyxl/conftest.py	[py36-openpyxl (build optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/openpyxl	[py3-openpyxl (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/openpyxl/conftest.py	[py3[0-9]*-openpyxl]
S_pkg?	/usr/lib/python3.*/*-packages/openpyxl	[N/A (build optional)]
slackpkg?	/usr/lib*/python*/*-packages/openpyxl/conftest.py	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/openpyxl	[extra/python-openpyxl (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/openpyxl/conftest.py	[pip3(openpyxl) (build optional)]
# -- python bcc
dpkg?	/usr/lib/python3/*-packages/bcc/__init__.py	[python3-bpfcc (build optional)]
rpm?	/usr/lib/python3.*/*-packages/bcc/__init__.py	[python3-bcc (build optional)]
emerge?	/usr/lib/python3.*/*-packages/bcc.py	[N/A (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/bcc.py	[py36-bcc (build optional)]
pkg_add?	bcc.py				[N/A (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/*/bcc.py	[N/A (build optional)]
S_pkg?	/usr/lib/python3.*/*-packages/*/bcc.py	[N/A (build optional)]
slackpkg?	/usr/lib*/python*/*-packages/*/*/bcc.py	[N/A (build optional)]
pacman?	/usr/lib/python3.*/*-packages/bcc.py	[python-bcc (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/bcc/bcc.py	[pip3(bcc) (build optional)]
# -- bpftrace
dpkg?	bpftrace	[bpftrace (build optional)]
rpm?	bpftrace	[bpftrace (build optional)]
# -- python pillow
dpkg?	/usr/lib/python3/*-packages/PIL/Image.py	[python3-pil (QA optional)]
rpm?	/usr/lib*/python3.*/*-packages/PIL/Image.py	[python3-pillow or python3-Pillow or python36-pillow (QA optional)]
emerge?	/usr/lib/python3.*/*-packages/PIL/Image.py	[dev-python/pillow]
pkgin?	/usr/pkg/lib/python3.*/*-packages/?/Image.py	[py36-imaging]
pkg_add?	/usr/local/lib/python3.*/*-packages/PIL/Image.py	[py3-Pillow]
F_pkg?	/usr/local/lib/python3.*/*-packages/PIL/Image.py	[py3[0-9]*-pillow (QA optional)]
S_pkg?	/usr/lib/python3.*/*-packages/PIL/Image.py	[N/A (QA optional)]
slackpkg?	/usr/lib*/python3.*/*-packages/PIL/Image.py	[python-pillow (QA optional)]
pacman?	/usr/lib/python3.*/*-packages/PIL/Image.py	[extra/python-pillow (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/Image.py	[pip3(Pillow-PIL) (QA optional)]
# -- python psycopg2 (for postgresql)
dpkg?    /usr/lib/python3/*-packages/psycopg2		[python3-psycopg2]
rpm?    /usr/lib*/python3.*/*-packages/psycopg2		[python3-psycopg2]
emerge?	/usr/lib/python3.*/*-packages/psycopg2		[dev-python/psycopg (build optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/psycopg2/sql.py	[py36-psycopg2 (build optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/psycopg2/sql.py	[py3[0-9]*-psycopg2]
S_pkg?	/usr/lib/python3.*/*-packages/psycopg2		[N/A]
slackpkg?	/usr/lib*/python3.*/*-packages/psycopg2	[python-psycopg2]
pacman?	/usr/lib/python3.*/*-packages/psycopg2/sql.py	[extra/python-psycopg2 (build optional)]
brew?	/usr/local/lib/python3.*/*-packages/psycopg2	[pip3(psycopg2)]
# -- python pyodbc (mssql PMDA)
rpm?    /usr/lib*/python3.*/*-packages/pyodbc*          [python3-pyodbc]
dpkg?	/usr/lib/python3/dist-packages/pyodbc.pyi	[python3-pyodbc]
# -- python pymongo (mongodb PMDA)
rpm?    /usr/lib*/python3.*/*-packages/pymongo*		[python3-pymongo]
dpkg?	/usr/lib/python3/dist-packages/pymongo		[python3-pymongo]
# perl modules
# -- Time::HiRes
dpkg?	Time::HiRes		[libperl[0-9][0-9.]* or libperl[0-9][0-9.]*t64]
rpm?	Time::HiRes		[perl or perl-Time-HiRes]
emerge?	Time::HiRes		[dev-lang/perl]
pkgin?	Time::HiRes		[perl]
pkg_add?	Time::HiRes	[base OpenBSD install]
F_pkg?	Time::HiRes		[perl or perl5]
S_pkg?	Time::HiRes		[runtime/perl-522]
slackpkg?	Time::HiRes	[perl]
pacman?	Time::HiRes		[core/perl]
brew?	Time::HiRes		[base Darwin install]
# -- Date::Format
dpkg?	Date::Format		[libtimedate-perl]
rpm?	Date::Format		[perl-TimeDate]
emerge?	Date::Format		[dev-perl/TimeDate]
pkgin?	Date::Format		[p5-TimeDate]
pkg_add?	Date::Format	[p5-Time-TimeDate]
F_pkg?	Date::Format		[p5-TimeDate or cpan(Date::Format)]
S_pkg?	Date::Format		[cpan(Date::Format)]
slackpkg?	Date::Format	[cpan(Date::Format)]
pacman?	Date::Format		[extra/perl-timedate]
brew?	Date::Format		[base Darwin install]
# -- Date::Manip
rpm?	Date::Manip		[perl-Date-Manip]
# -- Date::Parse
dpkg?	Date::Parse		[perl or libtimedate-perl]
rpm?	Date::Parse		[perl-TimeDate]
emerge?	Date::Parse		[dev-perl/TimeDate]
pkgin?	Date::Parse		[p5-TimeDate]
pkg_add?	Date::Parse	[p5-Time-TimeDate]
F_pkg?	Date::Parse		[p5-TimeDate or cpan(Date::Parse)]
S_pkg?	Date::Parse		[cpan(Date::Parse)]
slackpkg?	Date::Parse	[cpan(Date::Parse)]
pacman?	Date::Parse		[extra/perl-timedate]
brew?	Date::Parse		[base Darwin install]
# -- Getopt::Std
dpkg?		Getopt::Std	[perl-modules or perl-modules-[0-9][0-9.]*]
rpm?		Getopt::Std	[perl or perl-base or perl-interpreter or perl-Getopt-Std]
emerge?		Getopt::Std	[dev-lang/perl]
pkgin?		Getopt::Std	[perl]
pkg_add?	Getopt::Std	[base OpenBSD install]
F_pkg?		Getopt::Std	[perl5]
S_pkg?		Getopt::Std	[runtime/perl-522]
slackpkg?	Getopt::Std	[perl]
pacman?		Getopt::Std	[core/perl]
brew?		Getopt::Std	[base Darwin install]
# -- ExtUtils::AutoInstall
dpkg?	ExtUtils::AutoInstall	[libextutils-autoinstall-perl]
# -- ExtUtils::MakeMaker
dpkg?	ExtUtils::MakeMaker	[perl-modules or perl-modules-[0-9][0-9.]*]
rpm?	ExtUtils::MakeMaker	[perl or perl-ExtUtils-MakeMaker]
emerge?	ExtUtils::MakeMaker	[dev-lang/perl]
pkgin?	ExtUtils::MakeMaker	[perl]
pkg_add?	ExtUtils::MakeMaker	[base OpenBSD install]
F_pkg?	ExtUtils::MakeMaker	[perl or perl5]
S_pkg?	ExtUtils::MakeMaker	[runtime/perl-522]
slackpkg?	ExtUtils::MakeMaker	[perl]
pacman?	ExtUtils::MakeMaker	[core/perl]
brew?	ExtUtils::MakeMaker	[base Darwin install]
# -- YAML::XS
dpkg?	YAML::XS	[libyaml-libyaml-perl]
rpm?	YAML::XS	[perl-YAML-LibYAML or cpan(YAML::LibYAML)]
emerge?	YAML::XS	[dev-perl/YAML-LibYAML]
pkgin?	YAML::XS	[p5-YAML-LibYAML]
pkg_add?	YAML::XS		[p5-YAML-XS]
F_pkg?	YAML::XS	[p5-YAML-LibYAML]
S_pkg?	YAML::XS	[cpan(YAML::LibYAML)]
slackpkg?	YAML::XS		[cpan(YAML::LibYAML)]
pacman?	YAML::XS	[extra/perl-yaml-libyaml]
brew?	YAML::XS	[cpan(YAML::XS) or cpan(YAML::LibYAML)]
# -- XML::LibXML
dpkg?	XML::LibXML		[libxml-libxml-perl (QA optional)]
rpm?	XML::LibXML		[perl-XML-LibXML or cpan(XML::LibXML) (QA optional)]
emerge?	XML::LibXML		[dev-perl/XML-LibXML (QA optional)]
pkgin?	XML::LibXML		[p5-XML-LibXML (QA optional)]
pkg_add?	XML::LibXML	[p5-XML-LibXML (QA optional)]
F_pkg?	XML::LibXML		[p5-XML-LibXML (QA optional)]
S_pkg?	XML::LibXML		[cpan(XML::LibXML) (QA optional)]
slackpkg?	XML::LibXML	[cpan(XML::LibXML) (QA optional)]
pacman?	XML::LibXML		[extra/perl-xml-libxml or cpan(XML::LibXML) (QA optional)]
brew?	XML::LibXML		[base Darwin install (QA optional)]
# -- XML::TokeParser
dpkg?	XML::TokeParser		[libxml-tokeparser-perl]
rpm?	XML::TokeParser		[perl-XML-TokeParser or cpan(XML::TokeParser)]
emerge?	XML::TokeParser		[dev-perl/XML-TokeParser]
pkgin?	XML::TokeParser		[p5-XML-TokeParser]
pkg_add?	XML::TokeParser	[cpan(XML::TokeParser)]
F_pkg?	XML::TokeParser		[p5-XML-TokeParser]
S_pkg?	XML::TokeParser		[cpan(XML::TokeParser)]
slackpkg?	XML::TokeParser	[cpan(XML::TokeParser)]
pacman?	XML::TokeParser		[cpan(XML::TokeParser)]
brew?	XML::TokeParser		[cpan(XML::TokeParser)]
# -- File::Slurp
dpkg?	File::Slurp		[libfile-slurp-perl (QA optional)]
rpm?	File::Slurp		[perl-File-Slurp (QA optional)]
emerge?	File::Slurp		[dev-perl/File-Slurp (QA optional)]
pkgin?	File::Slurp		[p5-File-Slurp (QA optional)]
pkg_add?	File::Slurp	[p5-File-Slurp (QA optional)]
F_pkg?	File::Slurp		[p5-File-Slurp (QA optional)]
S_pkg?	File::Slurp		[cpan(File::Slurp) (QA optional)]
slackpkg?	File::Slurp	[cpan(File::Slurp) (QA optional)]
pacman?	File::Slurp		[extra/perl-file-slurp or cpan(File::Slurp) (QA optional)]
brew?	File::Slurp		[base Darwin install (QA optional)]
# -- Slurm::Hostlist ... skip this one, it comes in the pcp-testsuite package
# -- List::MoreUtils
dpkg?	List::MoreUtils		[liblist-moreutils-perl (QA optional)]
rpm?	List::MoreUtils		[perl-List-MoreUtils or cpan(List::MoreUtils) (QA optional)]
emerge?	List::MoreUtils		[dev-perl/List-MoreUtils (QA optional)]
pkgin?	List::MoreUtils		[p5-List-MoreUtils (QA optional)]
pkg_add?	List::MoreUtils	[p5-List-MoreUtils (QA optional)]
F_pkg?	List::MoreUtils		[p5-List-MoreUtils (QA optional)]
S_pkg?	List::MoreUtils		[cpan(List::MoreUtils) (QA optional)]
slackpkg?	List::MoreUtils	[cpan(List::MoreUtils) (QA optional)]
pacman?	List::MoreUtils		[extra/perl-list-moreutils or cpan(List::MoreUtils) (QA optional)]
brew?	List::MoreUtils		[base Darwin install (QA optional)]
# -- autodie
dpkg?	autodie::		[perl-modules or perl-modules-[0-9][0-9.]* (QA optional)]
rpm?	autodie::		[perl or perl-autodie (QA optional)]
emerge?	autodie::		[dev-lang/perl (QA optional)]
pkgin?	autodie::		[perl (QA optional)]
pkg_add?	autodie::	[base OpenBSD install (QA optional)]
F_pkg?	autodie::		[perl or perl5 (QA optional)]
S_pkg?	autodie::		[runtime/perl-522 (QA optional)]
slackpkg?	autodie::	[perl (QA optional)]
pacman?	autodie::		[core/perl (QA optional)]
brew?	autodie::		[base Darwin install (QA optional)]
# -- RRDs
dpkg?	RRDs::			[librrds-perl]
rpm?	RRDs::			[rrdtool-perl or perl-rrdtool or rrdtool]
emerge?	RRDs::			[N/A]
pkgin?	RRDs::			[rrdtool]
pkg_add?	RRDs::		[rrdtool]
F_pkg?	RRDs::			[rrdtool]
S_pkg?	RRDs::			[N/A]
slackpkg?	RRDs::		[N/A]
pacman?	RRDs::			[extra/rrdtool]
# -- Spreadsheet::Read
dpkg?	Spreadsheet::Read	[libspreadsheet-read-perl (QA optional)]
rpm?	Spreadsheet::Read	[perl-Spreadsheet-Read or cpan(Spreadsheet::Read) (QA optional)]
emerge?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
pkgin?	Spreadsheet::Read	[p5-Spreadsheet-Read (QA optional)]
pkg_add?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
F_pkg?	Spreadsheet::Read	[p5-Spreadsheet-Read or cpan(Spreadsheet::Read) (QA optional)]
S_pkg?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
slackpkg?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
pacman?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
brew?	Spreadsheet::Read	[cpan(Spreadsheet::Read) (QA optional)]
# -- Spreadsheet::WriteExcel
dpkg?	Spreadsheet::WriteExcel	[libspreadsheet-writeexcel-perl]
rpm?	Spreadsheet::WriteExcel	[perl-Spreadsheet-WriteExcel or cpan(Spreadsheet::WriteExcel)]
emerge?	Spreadsheet::WriteExcel	[dev-perl/Spreadsheet-WriteExcel]
pkgin?	Spreadsheet::WriteExcel	[p5-Spreadsheet-WriteExcel (QA optional)]
pkg_add?	Spreadsheet::WriteExcel	[p5-Spreadsheet-WriteExcel (QA optional)]
F_pkg?	Spreadsheet::WriteExcel	[p5-Spreadsheet-WriteExcel (QA optional)]
S_pkg?	Spreadsheet::WriteExcel	[cpan(Spreadsheet::WriteExcel) (QA optional)]
slackpkg?	Spreadsheet::WriteExcel	[cpan(Spreadsheet::WriteExcel) (QA optional)]
pacman?	Spreadsheet::WriteExcel	[cpan(Spreadsheet::WriteExcel) (QA optional)]
brew?	Spreadsheet::WriteExcel	[cpan(Spreadsheet::WriteExcel) (QA optional)]
# -- Spreadsheet::XLSX
dpkg?	Spreadsheet::XLSX	[libspreadsheet-xlsx-perl (QA optional)]
rpm?	Spreadsheet::XLSX	[perl-Spreadsheet-XLSX or cpan(Spreadsheet::XLSX) (QA optional)]
emerge?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
pkgin?	Spreadsheet::XLSX	[p5-Spreadsheet-XLSX (QA optional)]
pkg_add?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
F_pkg?	Spreadsheet::XLSX	[p5-Spreadsheet-XLSX or cpan(Spreadsheet::XLSX) (QA optional)]
S_pkg?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
slackpkg?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
pacman?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
brew?	Spreadsheet::XLSX	[cpan(Spreadsheet::XLSX) (QA optional)]
# -- Spreadsheet::ReadSXC
dpkg?	Spreadsheet::ReadSXC	[libspreadsheet-readsxc-perl (QA optional)]
rpm?	Spreadsheet::ReadSXC	[perl-Spreadsheet-ReadSXC or cpan(Spreadsheet::ReadSXC) (QA optional)]
emerge?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
pkgin?	Spreadsheet::ReadSXC	[p5-Spreadsheet-ReadSXC (QA optional)]
pkg_add?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
F_pkg?	Spreadsheet::ReadSXC	[p5-Spreadsheet-ReadSXC or cpan(Spreadsheet::ReadSXC) (QA optional)]
S_pkg?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
slackpkg?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
pacman?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
brew?	Spreadsheet::ReadSXC	[cpan(Spreadsheet::ReadSXC) (QA optional)]
# -- Text::CSV_XS
dpkg?	Text::CSV_XS		[libtext-csv-xs-perl or cpan(Text::CSV_XS) (QA optional)]
rpm?	Text::CSV_XS		[perl-Text-CSV_XS or cpan(Text::CSV_XS) (QA optional)]
emerge?	Text::CSV_XS		[dev-perl/Text-CSV_XS (QA optional)]
pkgin?	Text::CSV_XS		[p5-Text-CSV_XS (QA optional)]
pkg_add?	Text::CSV_XS	[p5-Text-CSV_XS (QA optional)]
F_pkg?	Text::CSV_XS		[p5-Text-CSV_XS (QA optional)]
S_pkg?	Text::CSV_XS		[cpan(Text::CSV_XS) (QA optional)]
slackpkg?	Text::CSV_XS	[cpan(Text::CSV_XS) (QA optional)]
pacman?	Text::CSV_XS		[cpan(Text::CSV_XS) (QA optional)]
brew?	Text::CSV_XS		[cpan(Text::CSV_XS) (QA optional)]
# -- JSON
dpkg?	JSON::			[libjson-perl]
rpm?	JSON::			[perl-JSON]
emerge?	JSON::			[dev-perl/JSON]
pkgin?	JSON::			[p5-JSON]
pkg_add?	JSON::		[p5-JSON]
F_pkg?	JSON::			[p5-JSON or cpan(JSON)]
S_pkg?	JSON::			[cpan(JSON)]
slackpkg?	JSON::		[cpan(JSON)]
pacman?	JSON::			[extra/perl-json]
brew?	JSON::			[cpan(JSON)]
# -- LDAP
rpm?	Net::LDAP		[perl-LDAP or perl-ldap]
# -- LWP::UserAgent
dpkg?	LWP::UserAgent		[perl-modules or perl-modules-[0-9][0-9.]*]
rpm?	LWP::UserAgent		[perl-libwww-perl]
emerge?	LWP::UserAgent		[dev-lang/perl]
pkgin?	LWP::UserAgent		[cpan(LWP::UserAgent)]
pkg_add?	LWP::UserAgent	[p5-libwww or cpan(LWP::UserAgent)]
F_pkg?	LWP::UserAgent		[perl5 or cpan(LWP::UserAgent)]
S_pkg?	LWP::UserAgent		[cpan(LWP::UserAgent)]
slackpkg?	LWP::UserAgent	[cpan(LWP::UserAgent)]
pacman?	LWP::UserAgent		[cpan(LWP::UserAgent)]
brew?	LWP::UserAgent		[base Darwin install]
# -- Net::SNMP
dpkg?	Net::SNMP		[libnet-snmp-perl]
rpm?	Net::SNMP		[perl-Net-SNMP or cpan(Net::SNMP)]
emerge?	Net::SNMP		[dev-perl/Net-SNMP]
pkgin?	Net::SNMP		[p5-Net-SNMP]
pkg_add?	Net::SNMP	[p5-Net-SNMP]
F_pkg?	Net::SNMP		[p5-Net-SNMP]
S_pkg?	Net::SNMP		[cpan(Net::SNMP)]
slackpkg?	Net::SNMP	[cpan(Net::SNMP)]
pacman?	Net::SNMP		[extra/perl-net-snmp]
brew?	Net::SNMP		[base Darwin install]
# -- Archive::Zip
F_pkg?	Archive::Zip		[p5-Archive-Zip]
#
# other run-time
#
# -- time(1)
dpkg?	time			[time]
rpm?	time			[time]
emerge?	time			[sys-process/time]
pkgin?	time			[base NetBSD install]
pkg_add?	time		[base OpenBSD install]
F_pkg?	time			[base FreeBSD install]
S_pkg?	time			[SUNWcs]
slackpkg?	time		[time]
pacman?	time			[extra/time]
brew?	time			[base Darwin install]
# -- sadf(1) (for sar2pcp)
dpkg?	sadf			[sysstat]
rpm?	sadf			[sysstat]
emerge?	sadf			[app-admin/sysstat]
pkgin?	sadf			[sysstat]
pkg_add?	sadf		[N/A]
F_pkg?	sadf			[N/A]
S_pkg?	sadf			[N/A]
slackpkg?	sadf		[sysstat]
pacman?	sadf			[extra/sysstat]
brew?	sadf			[N/A]
# -- host(1)
dpkg?	host			[bind9-host]
rpm?	host			[bind-utils]
emerge?	host			[net-dns/bind-tools]
pkgin?	host			[base NetBSD install]
pkg_add?	host		[base OpenBSD install]
F_pkg?	host			[base FreeBSD install]
S_pkg?	host			[network/dns/bind]
slackpkg?	host		[bind]
pacman?	host			[extra/bind]
brew?	host			[base Darwin install]
# QA
# -- bc(1)
dpkg?		bc		[bc (QA optional)]
rpm?		bc		[bc (QA optional)]
emerge?		bc		[bc (QA optional)]
pkgin?		bc		[base NetBSD (QA optional)]
pkg_add?	bc		[bc or base OpenBSD install (QA optional)]
F_pkg?		bc		[bc or base FreeBSD install (QA optional)]
S_pkg?		bc		[system/extended-system-utilities (QA optional)]
slackpkg?	bc		[bc (QA optional)]
pacman?		bc		[extra/bc (QA optional)]
brew?		bc		[bc (QA optional)]
# -- socat(1)
dpkg?		socat		[socat (QA optional)]
rpm?		socat		[socat (QA optional)]
emerge?		socat		[socat (QA optional)]
pkgin?		socat		[socat (QA optional)]
pkg_add?	socat		[socat (QA optional)]
F_pkg?		socat		[socat (QA optional)]
S_pkg?		socat		[network/socat (QA optional)]
slackpkg?	socat		[socat (QA optional)]
pacman?		socat		[extra/socat (QA optional)]
brew?		socat		[socat (QA optional)]
# -- nmap(1)
dpkg?		nmap		[nmap (QA optional)]
rpm?		nmap		[nmap (QA optional)]
emerge?		nmap		[nmap (QA optional)]
pkgin?		nmap		[nmap (QA optional)]
pkg_add?	nmap		[nmap (QA optional)]
F_pkg?		nmap		[nmap (QA optional)]
S_pkg?		nmap		[diagnostic/nmap-cli (QA optional)]
slackpkg?	nmap		[nmap (QA optional)]
pacman?		nmap		[extra/nmap (QA optional)]
brew?		nmap		[nmap (QA optional)]
# -- curl(1)
dpkg?		curl		[curl (QA optional)]
rpm?		curl		[curl (QA optional)]
emerge?		curl		[net-misc/curl (QA optional)]
pkgin?		curl		[curl (QA optional)]
pkg_add?	curl		[curl (QA optional)]
F_pkg?		curl		[curl (QA optional)]
S_pkg?		curl		[web/curl (QA optional)]
slackpkg?	curl		[curl (QA optional)]
pacman?		curl		[core/curl (QA optional)]
brew?		curl		[base Darwin install (QA optional)]
# -- valgrind(1)
dpkg?		valgrind	[valgrind (QA optional)]
rpm?		valgrind	[valgrind (QA optional)]
emerge?		valgrind	[dev-util/valgrind (QA optional)]
pkgin?		valgrind	[valgrind (QA optional)]
pkg_add?	valgrind	[N/A (QA optional)]
F_pkg?		valgrind	[valgrind (QA optional)]
S_pkg?		valgrind	[developer/debug/valgrind (QA optional)]
slackpkg?	valgrind	[valgrind (QA optional)]
pacman?		valgrind	[extra/valgrind (QA optional)]
brew?		valgrind	[N/A (QA optional)] # valgrind is "available" for Mac OS X, just fails to install on Mohave as of 30 Nov 2018
# -- avahi-browse(1)
dpkg?	avahi-browse		[avahi-tools or avahi-utils (QA optional)]
rpm?	avahi-browse		[avahi-tools or avahi-utils (QA optional)]
emerge?	avahi-browse		[net-dns/avahi (QA optional)]
pkgin?	avahi-browse		[avahi or avahi-tools or avahi-utils (QA optional)]
pkg_add?	avahi-browse	[avahi or avahi-tools or avahi-utils (QA optional)]
F_pkg?	avahi-browse		[avahi or avahi-app (QA optional)]
S_pkg?	avahi-browse		[system/network/avahi (QA optional)]
slackpkg?	avahi-browse	[N/A (QA optional)]
pacman?	avahi-browse		[extra/avahi (QA optional)]
brew?	avahi-browse		[N/A (QA optional)]
# -- ifconfig(1)
dpkg?		ifconfig	[net-tools]
rpm?		ifconfig	[net-tools or net-tools-deprecated]
emerge?		ifconfig	[sys-apps/net-tools]
pkgin?		ifconfig	[base NetBSD install]
pkg_add?	ifconfig	[base OpenBSD install]
F_pkg?		ifconfig	[base FreeBSD install]
S_pkg?		ifconfig	[SUNWcs]
slackpkg?	ifconfig	[net-tools]
pacman?		ifconfig	[core/net-tools]
brew?		ifconfig	[base Darwin install]
# -- netstat(1)
dpkg?		netstat		[net-tools]
rpm?		netstat		[net-tools or net-tools-deprecated]
emerge?		netstat		[sys-apps/net-tools]
pkgin?		netstat		[base NetBSD install]
pkg_add?	netstat		[base OpenBSD install]
F_pkg?		netstat		[base FreeBSD install]
S_pkg?		netstat		[SUNWcs]
slackpkg?	netstat		[net-tools]
pacman?		netstat		[core/net-tools]
brew?		netstat		[base Darwin install]
# -- kubectl
dpkg?		kubectl		[kubernetes-client (build optional)]
rpm?		kubectl		[kubernetes-client or kubectl (build optional)]
emerge?		kubectl		[sys-cluster/kubectl (build optional)]
pkgin?		kubectl		[N/A (build optional)]
pkg_add?	kubectl		[N/A (build optional)]
F_pkg?		kubectl		[kubectl (build optional)]
S_pkg?		kubectl		[N/A (build optional)]
slackpkg?	kubectl		[N/A (build optional)]
pacman?		kubectl		[N/A (build optional)]
brew?		kubectl		[N/A (build optional)]
# -- kubelet
dpkg?		kubelet		[N/A (build optional)]
rpm?		kubelet		[kubernetes-node or kubernetes-kubelet or kubernetes (build optional)]
emerge?		kubelet		[sys-cluster/kubelet (build optional)]
pkgin?		kubelet		[N/A (build optional)]
pkg_add?	kubelet		[N/A (build optional)]
F_pkg?		kubelet		[N/A (build optional)]
S_pkg?		kubelet		[N/A (build optional)]
slackpkg?	kubelet		[N/A (build optional)]
pacman?		kubelet		[N/A (build optional)]
brew?		kubelet		[N/A (build optional)]
# -- crontab
dpkg?		crontab		[cron]
rpm?		crontab		[cronie]
emerge?		crontab		[sys-process/cronie]
pkgin?		crontab		[base NetBSD install]
pkg_add?	crontab		[base OpenBSD install]
F_pkg?	crontab			[base FreeBSD install]
S_pkg?	crontab			[SUNWcs]
slackpkg?	crontab		[dcron]
pacman?		crontab		[extra/cronie]
brew?		crontab		[base Darwin install]
# -- mail(1)
dpkg?	mail			[bsd-mailx (QA optional)]
rpm?	mail			[mailx or s-nail (QA optional)]
emerge?	mail			[mail-client/mailx (QA optional)]
pkgin?	mail			[base NetBSD install (QA optional)]
pkg_add?	mail		[base OpenBSD install (QA optional)]
F_pkg?	mail			[base FreeBSD install (QA optional)]
S_pkg?	mail			[SUNWcs (QA optional)]
slackpkg?	mail		[s-nail (QA optional)]
pacman?	mail			[core/s-nail (QA optional)]
brew?	mail			[base Darwin install (QA optional)]
# -- httpd / apache
dpkg?	apache2			[apache2-bin or apache2 or apache2-mpm-worker (QA optional)]
rpm?	httpd|/etc/apache2/httpd.conf	[httpd or apache2 (QA optional)]
emerge?	httpd|/etc/apache2/httpd.conf	[www-servers/apache (QA optional)]
pkgin?	/usr/libexec/httpd		[base NetBSD install (QA optional)]
pkg_add?	httpd			[base OpenBSD install (QA optional)]
F_pkg?	/usr/local/etc/apache24/httpd.conf.sample	[apache24 (QA optional)]
S_pkg?	/etc/apache2/*/httpd.conf	[web/server/apache-24 (QA optional)]
slackpkg?	/etc/httpd/httpd.conf	[httpd (QA optional)]
pacman?	/etc/httpd/conf/httpd.conf	[extra/apache (QA optional)]
brew?	/usr/local/bin/httpd	[httpd (QA optional)]
# -- realpath(1)
dpkg?	realpath		[coreutils or realpath]
rpm?	realpath		[coreutils or coreutils-single or realpath]
emerge?	realpath		[sys-apps/coreutils]
pkgin?	realpath		[N/A]
pkg_add?	realpath	[base OpenBSD install]
F_pkg?	realpath		[base FreeBSD install]
S_pkg?	realpath		[file/gnu-coreutils]
slackpkg?	realpath	[coreutils]
pacman?	realpath		[core/coreutils]
brew?	realpath		[N/A]
# -- unbound
dpkg?	unbound-control		[unbound (QA optional)]
emerge?	unbound-control		[net-dns/unbound (QA optional)]
pkgin?	/usr/pkg/sbin/unbound	[unbound (QA optional)]
pkg_add?	unbound-control	[base OpenBSD install (QA optional)]
F_pkg?	unbound-control		[unbound or base FreeBSD install (QA optional)]
S_pkg?	unbound-control		[N/A (QA optional)]
slackpkg?	unbound-control	[N/A (QA optional)]
pacman?	unbound-control		[extra/unbound (QA optional)]
brew?	/usr/local/sbin/unbound-control		[unbound (QA optional)]
# -- python-requests
dpkg?	/usr/share/doc/python-requests|/usr/share/doc/packages/python-requests	[python-requests (QA optional)]
dpkg?	/usr/lib/python3/dist-packages/requests	[python3-requests (QA optional)]
rpm?	/usr/lib*/python3.*/*-packages/requests	[python3-requests or python36-requests (QA optional)]
emerge?	/usr/lib/python3.*/*-packages/requests	[dev-python/requests (QA optional)]
pkgin?	/usr/pkg/lib/python3.*/*-packages/requests/utils.py	[py36-requests (QA optional)]
pkg_add?	/usr/local/lib/python3.*/*-packages/requests/utils.py	[py3-requests (QA optional)]
F_pkg?	/usr/local/lib/python3.*/*-packages/requests/utils.py	[py3[0-9]*-requests (QA optional)]
S_pkg?	requests					[N/A (QA optional)]
slackpkg?	/usr/lib*/python3.*/*-packages/requests	[python-requests (QA optional)]
pacman?	/usr/lib/python3.*/*-packages/requests/utils.py	[extra/python-requests (QA optional)]
brew?	/usr/local/lib/python3.*/*-packages/requests	[pip3(requests) (QA optional)]
# -- python-pandas
#dpkg?		foo		[?]
rpm?	/usr/lib*/python3.*/*-packages/pandas	[python3-pandas (QA optional)]
#emerge?		foo		[?]
#pkgin?		foo		[?]
#pkg_add?	foo		[?]
#F_pkg?		foo		[?]
#S_pkg?		foo		[?]
#slackpkg?	foo		[?]
#pacman?		foo		[?]
#brew?		foo		[?]
# -- python-pyarrow
#dpkg?		foo		[?]
rpm?	/usr/lib*/python3.*/*-packages/pyarrow	[python3-pyarrow (QA optional)]
#emerge?		foo		[?]
#pkgin?		foo		[?]
#pkg_add?	foo		[?]
#F_pkg?		foo		[?]
#S_pkg?		foo		[?]
#slackpkg?	foo		[?]
#pacman?		foo		[?]
#brew?		foo		[?]
# -- logconf for ds389 PMDA
rpm?	/usr/bin/logconv.pl|/usr/lib/389-ds/bin/logconv.pl	[389-ds-base or 389-ds (QA optional)]
# -- plain authentication plugin for SASL
dpkg?	/usr/lib/*/sasl2/libplain.so	[libsasl2-modules (QA optional)]
rpm?	/usr/lib*/sasl2/libplain.so	[cyrus-sasl-plain (QA optional)]
emerge?	/usr/lib*/sasl2/libplain.so	[dev-libs/cyrus-sasl (QA optional)]
pkgin?	/usr/pkg/lib*/sasl2/libplain.so	[cy2-plain (QA optional)]
pkg_add?	/usr/local/lib/sasl2/libplain.so	[cyrus-sasl (QA optional)]
F_pkg?	/usr/local/lib/sasl2/libplain.so	[cyrus-sasl (QA optional)]
S_pkg?	/usr/lib/sasl/plain.so.1	[system/library/security/libsasl (QA optional)]
slackpkg?	/usr/lib*/sasl2/libplain.so	[cyrus-sasl (QA optional)]
pacman?	/usr/lib/sasl2/libplain.so	[core/libsasl (QA optional)]
brew?	/usr/lib/sasl2/libplain.*.so	[base Darwin install (QA optional)]
# -- digest-md5 authentication plugin for SASL
dpkg?	/usr/lib/*/sasl2/libdigestmd5.so	[libsasl2-modules (QA optional)]
rpm?	/usr/lib*/sasl2/libdigestmd5.so	[cyrus-sasl-md5 or cyrus-sasl-digestmd5 (QA optional)]
emerge?	/usr/lib*/sasl2/libdigestmd5.so	[dev-libs/cyrus-md5 (QA optional)]
pkgin?	/usr/pkg/lib*/sasl2/libdigestmd5.so	[cy2-md5 (QA optional)]
pkg_add?	/usr/local/lib/sasl2/libdigestmd5.so	[cyrus-sasl (QA optional)]
F_pkg?	/usr/local/lib/sasl2/libdigestmd5.so	[cyrus-sasl (QA optional)]
S_pkg?	/usr/lib/sasl/digestmd5.so.1	[system/library/security/libsasl (QA optional)]
slackpkg?	/usr/lib*/sasl2/libdigestmd5.so	[cyrus-sasl (QA optional)]
pacman?	/usr/lib/sasl2/libdigestmd5.so	[core/libsasl (QA optional)]
brew?	/usr/lib/sasl2/libdigestmd5.*.so	[base Darwin install (QA optional)]
# -- libsqlite3 for certutil
dpkg?		/usr/lib/*/libsqlite3.so.*	[libsqlite3-0 (QA optional)]
rpm?		/usr/lib*/libsqlite3.so.*	[sqlite-libs or libsqlite3 or libsqlite3-[0-9] or sqlite (QA optional)]
emerge?		/usr/lib*/libsqlite3.so		[dev-db/sqlite (QA optional)]
pkgin?		/usr/pkg/lib/libsqlite3.so	[sqlite3 (QA optional)]
pkg_add?	/usr/local/lib/libsqlite3.a	[sqlite3 (QA optional)]
F_pkg?		/usr/local/lib/libsqlite3.so	[sqlite3 (QA optional)]
S_pkg?		/usr/lib/*/libsqlite3.so	[database/sqlite-3 (QA optional)]
slackpkg?	/usr/lib*/libsqlite3.so		[sqlite (QA optional)]
pacman?		/usr/lib/libsqlite3.so		[core/sqlite (QA optional)]
brew?		/usr/lib/libsqlite3.dylib	[sqlite (QA optional)]
# -- libicui18n for certutil
dpkg?		/usr/lib/*/libicui18n.so.*	[libicu[0-9][0-9]* (QA optional)]
rpm?		/usr/lib*/libicui18n.so		[libicu-devel (QA optional)]
emerge?		/usr/lib*/libicui18n.so		[dev-libs/icu (QA optional)]
pkgin?		/usr/lib/*/libicui18n.so	[N/A (QA optional)]
pkg_add?	/usr/local/lib/libicui18n.a	[icu4c (QA optional)]
F_pkg?		/usr/local/lib/libicui18n.so	[icu (QA optional)]
S_pkg?		/usr/lib/libicui18n.so		[library/icu (QA optional)]
slackpkg?	/usr/lib*/libicui18n.so		[icu4c (QA optional)]
pacman?		/usr/lib/libicui18n.so		[core/icu (QA optional)]
brew?		/usr/local/Cellar/icu4c/63.1/lib/libicui18n.dylib	[icu4c (QA optional)]
# -- DBD::mysql
dpkg?	DBD::mysql		[libdbd-mysql-perl (QA optional)]
rpm?	DBD::mysql		[perl-DBD-mysql or perl-DBD-MySQL (QA optional)]
emerge?	DBD::mysql		[dev-perl/DBD-mysql (QA optional)]
pkgin?	DBD::mysql		[p5-DBD-mysql (QA optional)]
pkg_add?	DBD::mysql	[p5-DBD-mysql (QA optional)]
F_pkg?	DBD::mysql		[p5-Class-DBI-mysql or p5-DBD-mysql or N/A (QA optional)]
S_pkg?	DBD::mysql		[library/perl-5/mysql-dbi-522 (QA optional)]
slackpkg?	DBD::mysql	[perl (QA optional)]
pacman?	DBD::mysql		[extra/perl-dbd-mysql (QA optional)]
brew?	DBD::mysql		[N/A (QA optional)] # cpan(DBD::mysql) is available but fails to install on Mohave as of 1 Dec 2018
# -- memcached
dpkg?	memcached		[memcached (QA optional)]
rpm?	memcached		[memcached (QA optional)]
emerge?	memcached		[net-misc/memcached (QA optional)]
pkgin?	memcached		[memcached (QA optional)]
pkg_add?	memcached	[memcached (QA optional)]
F_pkg?	/usr/local/bin/memcached	[memcached (QA optional)]
S_pkg?	/usr/lib/memcached	[service/memcached (QA optional)]
slackpkg?	memcached	[N/A (QA optional)]
pacman?	memcached		[extra/memcached (QA optional)]
brew?	memcached		[memcached (QA optional)]
# -- zabbix
dpkg?	zabbix_agentd		[zabbix-agent (QA optional)]
rpm?	zabbix_agentd		[zabbix-agent or zabbix[0-9][.0-9]*-agent (QA optional)]
emerge?	zabbix_agentd		[net-analyzer/zabbix (QA optional)]
pkgin?	zabbix_agentd		[zabbix-agent (QA optional)]
pkg_add?	zabbix_agentd	[zabbix-agent (QA optional)]
F_pkg?	zabbix_agentd		[zabbix[0-9][0-9]*-agent (QA optional)]
S_pkg?	zabbix_agentd		[N/A (QA optional)]
slackpkg?	zabbix_agentd	[N/A (QA optional)]
pacman?	zabbix_agentd		[N/A (QA optional)]
brew?	zabbix_agentd		[N/A (QA optional)]
# -- mysql
dpkg?	mysql			[mariadb-client-core or mariadb-client-core-[0-9][0-9.]* or mysql-client-core or mysql-client-core-[0-9][0-9.]* (QA optional)]
rpm?	mysql			[mysql or community-mysql or mariadb-client or mariadb (QA optional)]
emerge?	mysql			[dev-db/mariadb (QA optional)]
pkgin?	mysql			[mysql-client (QA optional)]
pkg_add?	mysql		[mariadb-client (QA optional)]
F_pkg?	mysql			[mariadb[0-9][0-9]*-client (QA optional)]
S_pkg?	mysql			[database/mariadb-101/client (QA optional)]
slackpkg?	mysql		[mariadb (QA optional)]
pacman?	mysql			[extra/mariadb-clients (QA optional)]
brew?	mysql			[mariadb (QA optional)]
# -- microsoft sql server
rpm?	/opt/mssql/bin/sqlservr		[mssql-server (QA optional)]
rpm?	/opt/mssql-tools/bin/sqlcmd	[mssql-tools (QA optional)]
# -- postgresql
dpkg?	psql			[postgresql-client-common (QA optional)]
rpm?	psql			[postgresql (QA optional)]
emerge?	psql			[dev-db/postgresql (QA optional)]
pkgin?	psql			[postgresql-client (QA optional)]
pkg_add?	psql		[postgresql-client (QA optional)]
F_pkg?	psql			[postgresql-client or postgresql[0-9][0-9]*-client (QA optional)]
S_pkg?	psql			[database/postgres-96 (QA optional)]
slackpkg?	psql		[N/A (QA optional)]
pacman?	psql			[extra/postgresql-libs (QA optional)]
pacman?	pg_ctl			[extra/postgresql (QA optional)]
brew?	psql			[postgresql (QA optional)]
# -- mkfs.gfs2
dpkg?	mkfs.gfs2		[gfs2-utils (QA optional)]
rpm?	mkfs.gfs2		[gfs2-utils (QA optional)]
pkgin?	mkfs.gfs2		[N/A (QA optional)]
pkg_add?	mkfs.gfs2	[N/A (QA optional)]
F_pkg?	mkfs.gfs2		[N/A (QA optional)]
S_pkg?	mkfs.gfs2		[N/A (QA optional)]
slackpkg?	mkfs.gfs2	[N/A (QA optional)]
pacman?	mkfs.gfs2		[N/A (QA optional)]
brew?	mkfs.gfs2		[N/A (QA optional)]
# -- docker
dpkg?		docker		[docker.io (QA optional)]
rpm?		docker		[docker-common or docker or docker-io or podman-docker (QA optional)]
emerge?		docker		[app-emulation/docker (QA optional)]
pkgin?		docker		[docker (QA optional)]
pkg_add?	docker		[N/A (QA optional)]
F_pkg?		docker		[docker (QA optional)]
S_pkg?		docker		[N/A (QA optional)]
slackpkg?	docker		[N/A (QA optional)]
pacman?		docker		[extra/docker (QA optional)]
brew?		docker		[docker (QA optional)]
#
# pcp-gui
#
# -- Qt stuff
dpkg?		qtchooser	[qtchooser (build optional)]
rpm?		qtchooser|/usr/lib/qtchooser/qtchooser	[qtchooser (build optional)]
emerge?		qtchooser	[dev-qt/qtchooser (build optional)]
pkgin?		qtchooser	[qtchooser (build optional)]
pkg_add?	qtchooser	[qtchooser (build optional)]
F_pkg?		/usr/local/bin/qtchooser	[N/A (build optional)]
S_pkg?		qtchooser	[N/A (build optional)]
slackpkg?	qtchooser	[N/A (build optional)]
pacman?		qtchooser	[N/A (build optional)]
brew?		qtchooser	[N/A (build optional)]
# -- Qt4 qmake
dpkg?		qmake				[qt4-qmake or qtchooser (build optional)]
rpm?		qmake|/usr/lib*/qt4/bin/qmake|/usr/bin/qmake-qt5	[qt4-devel or libqt4-devel or qt5-qtbase-devel or qt-devel (build optional)]
emerge?		qmake|/usr/lib*/qt4/bin/qmake	[dev-qt/qtchooser (build optional)]
pkgin?		qmake				[N/A (build optional)]
pkg_add?	/usr/local/lib/qt5/bin/qmake	[qtbase (build optional)]
slackpkg?	qmake				[qt (build optional)]
pacman?		/usr/lib/qt4/bin/qmake		[N/A (build optional)]
brew?		qmake				[qt (build optional)]
# -- Qt4 libs
dpkg?		/usr/lib/*/libQtCore.so|/usr/lib/qt4/lib/libQtCore.so	[libqt4-dev (build optional)]
rpm?		/usr/lib*/libQtCore.so|/usr/lib/qt4/lib/libQtCore.so	[qt4-devel or libqt4-devel or qt-devel (build optional)]
emerge?		/usr/lib*/qt4/libQtCore.so	[dev-qt/qtcore (build optional)]
emerge?		/usr/lib*/qt4/libQtGui.so	[dev-qt/qtgui (build optional)]
pkgin?		/usr/pkg/qt4/lib/libQtCore.so	[N/A (build optional)]
pkgin?		/usr/pkg/qt4/lib/libQtGui.so	[N/A (build optional)]
pkg_add?	/usr/local/lib/qt5/libQtCore.so.*	[qt5 (build optional)]
pkg_add?	/usr/local/lib/qt5/libQtGui.so.*	[qt5 (build optional)]
slackpkg?	/usr/lib*/libQtCore.so.*	[qt (build optional)]
slackpkg?	/usr/lib*/libQtGui.so.*		[qt (build optional)]
pacman?		/usr/lib/libQtCore.so		[N/A (build optional)]
pacman?		/usr/lib/libQtGui.so		[N/A (build optional)]
pacman?		/usr/lib/libicuio.so		[core/icu (build optional)]
# -- Qt5 (libraries, uic and QtSvg)
dpkg?		/usr/lib/*/libQt5Core.so|/usr/lib/qt5/lib/libQtCore.so	[qtbase5-dev (build optional)]
dpkg?		/usr/lib/*/qt5/bin/uic		[qtbase5-dev-tools or qtbase5-dev (build optional)]
dpkg?		/usr/include/*/qt5/QtSvg/QtSvg|/usr/include/qt5/QtSvg/QtSvg	[libqt5svg5-dev (build optional)]
rpm?		/usr/lib*/libQt5Core.so|/usr/lib/qt5/lib/libQtCore.so	[qt5-qtbase-devel or libqt5Core-devel or libQt5Core-devel or libqt5-qtbase-devel (build optional)]
rpm?		uic|/usr/lib/qtchooser/uic	[qtchooser (build optional)]
rpm?		/usr/include/qt5/QtSvg/QtSvg	[qt5-qtsvg-devel or libqt5-qtsvg-devel (build optional)]
emerge?		/usr/lib*/libQt5Core.so		[dev-qt/qtcore (build optional)]
emerge?		/usr/lib*/libQt5PrintSupport.so	[dev-qt/qtprintsupport (build optional)]
emerge?		/usr/lib*/libQt5Network.so	[dev-qt/qtnetwork (build optional)]
emerge?		/usr/lib*/libQt5Concurrent.so	[dev-qt/qtconcurrent (build optional)]
emerge?		uic				[dev-qt/qtchooser (build optional)]
emerge?		/usr/include/qt5/QtSvg/QtSvg	[dev-qt/qtsvg (build optional)]
pkgin?		libQt5Core.so			[N/A (build optional)]
pkgin?		uic				[uic (build optional)]
pkgin?		QtSvg/QtSvg			[N/A (build optional)]
pkg_add?	/usr/local/lib/qt5/libQt5Core.so.*	[qtbase (build optional)]
pkg_add?	/usr/local/lib/qt5/bin/uic	[qtbase (build optional)]
pkg_add?	/usr/local/include/X11/qt5/QtSvg/qtsvgversion.h	[qtsvg (build optional)]
F_pkg?	 	/usr/local/lib/qt5/bin/moc		[qt5-buildtools (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Concurrent.so	[qt5-concurrent (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Core.so	[qt5-core (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Gui.so		[qt5-gui (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Network.so	[qt5-network (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5PrintSupport.so	[qt5-printsupport (build optional)]
F_pkg?	 	/usr/local/lib/qt5/bin/qmake		[qt5-qmake (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Svg.so		[qt5-svg (build optional)]
F_pkg?	 	/usr/local/lib/qt5/libQt5Widgets.so	[qt5-widgets (build optional)]
S_pkg?		/usr/lib/qt/5.*/bin/qmake	[library/qt5 (build optional)]
S_pkg?		/usr/lib/qt/5.*/lib/libQt5Core.so	[library/qt5 (build optional)]
S_pkg?		/usr/lib/qt/5.*/lib/libQt5Gui.so	[library/qt5 (build optional)]
S_pkg?		/usr/lib/qt/5.*/bin/uic		[library/qt5 (build optional)]
S_pkg?		/usr/lib/qt/*/include/QtSvg/QtSvg	[library/qt5 (build optional)]
slackpkg?	libQt5Core.so			[qt5 (build optional)]
slackpkg?	/usr/lib*/qt/include/QtSvg/QtSvg	[qt5 (build optional)]
pacman?		/usr/lib/libQt5Core.so		[extra/qt5-base (build optional)]
pacman?		uic				[extra/qt5-base (build optional)]
pacman?		/usr/include/qt/QtSvg/QtSvg	[extra/qt5-svg (build optional)]
brew?		libQt5Core.so			[N/A (build optional)]
brew?		/usr/local/bin/uic		[qt (build optional)]
brew?		QtSvg/QtSvg			[N/A (build optional)]
# -- Inventor stuff
dpkg?	/usr/include/Inventor/Qt/SoQt.h	[libsoqt-dev-common or libsoqt-dev or libsoqt520-dev (build optional)]
rpm?	/usr/include/Inventor/Qt/SoQt.h|/usr/include/Coin*/Inventor/Qt/SoQt.h	[SoQt-devel (build optional)]
emerge?	/usr/include/coin/Inventor/Xt/SoXt.h	[media-libs/SoXt (build optional)]
pkgin?	SoQt.h				[N/A (build optional)]
pkg_add?	SoQt.h			[N/A (build optional)]
F_pkg?	SoQt.h				[N/A (build optional)] # for qt5
S_pkg?	SoQt.h				[N/A (build optional)]
slackpkg?	SoQt.h			[N/A (build optional)]
pacman?	/usr/include/Inventor/Qt/SoQt.h	[N/A (build optional)]
brew?	SoQt.h				[N/A (build optional)]
dpkg?	/usr/lib/*/libCoin.so		[libcoin-dev (build optional)]
rpm?	/usr/include/Inventor/SoPath.h|/usr/include/Coin*/Inventor/SoPath.h	[Coin-devel or Coin[0-9]-devel (build optional)]
emerge?	/usr/include/coin/Inventor/SoPath.h	[media-libs/coin (build optional)]
pkgin?		SoPath.h	[N/A (build optional)]
pkg_add?	SoPath.h	[N/A (build optional)]
F_pkg?	/usr/local/include/Inventor/SoPath.h	[N/A (build optional)]
S_pkg?	SoPath.h			[N/A (build optional)]
slackpkg?	SoPath.h		[N/A (build optional)]
pacman?	/usr/include/Inventor/SoPath.h	[N/A (build optional)]
brew?	SoPath.h			[N/A (build optional)]
dpkg?	/usr/lib*/libSoQt4.so|/usr/lib/*/libSoQt4.so	[libsoqt4-dev or libsoqt-dev (build optional)]
dpkg?	/usr/lib*/libSoQt.so|/usr/lib/*/libSoQt.so	[libsoqt-dev or libsoqt520-dev (build optional)]
rpm?	/usr/lib*/libSoQt.so		[SoQt-devel (build optional)]
emerge?	/usr/lib*/libSoXt.so		[media-libs/SoXt (build optional)]
pkgin?	/usr/lib/libSoQt4.so|/usr/lib/*/libSoQt4.so	[N/A (build optional)]
pkgin?	/usr/lib/libSoQt5.so|/usr/lib/*/libSoQt5.so	[N/A (build optional)]
pkg_add?	libSoQt4.so		[N/A (build optional)]
pkg_add?	libSoQt5.so		[N/A (build optional)]
F_pkg?	libSoQt.so			[N/A (build optional)] # for qt5
S_pkg?	libSoQt.so			[N/A (build optional)]
slackpkg?	libSoQt.so		[N/A (build optional)]
pacman?	/usr/lib/libSoQt.so		[N/A (build optional)]
brew?	libSoQt.so			[N/A (build optional)]
#
# python
#
dpkg?	/usr/include/python3.*/Python.h	[libpython3-dev]
rpm?	/usr/include/python3.*/Python.h	[python3-devel or python36-devel or platform-python-devel]
emerge?	/usr/include/python3.*/Python.h	[dev-lang/python]
pkgin?	/usr/pkg/include/python3.*/Python.h	[python34]
pkg_add?	/usr/local/include/python3.*/Python.h	[python]
F_pkg?	/usr/local/include/python3.*/Python.h	[python3[0-9]*]
S_pkg?	/usr/include/python*/Python.h	[runtime/python-34]
slackpkg?	/usr/include/python*/Python.h	[python3]
pacman?	/usr/include/python3.*/Python.h	[core/python]
brew?	/usr/local/Cellar/python/3.*	[python]
dpkg?	/usr/lib*/python3.*/curses/has_key.py	[libpython3-stdlib]
rpm?	/usr/lib*/python3.*/curses/has_key.py	[python3-libs or python3-curses or system-python-libs or python36-libs]
emerge?	/usr/lib/python3.*/curses/has_key.py	[dev-lang/python]
pkgin?	/usr/pkg/lib/python3.*/curses/has_key.py	[python34]
pkg_add?	/usr/local/lib/python3.*/curses/has_key.py	[python]
F_pkg?	/usr/local/lib*/python3.*/curses/has_key.py	[python36]
S_pkg?	/usr/lib*/python*/curses/has_key.py	[runtime/python-34]
slackpkg?	/usr/lib*/python*/curses/has_key.py	[python3]
pacman?	/usr/lib/python3.*/curses/has_key.py	[extra/python]
brew?	/usr/local/lib/python3.*/*-packages/curses/has_key.py	[N/A]
# -- openssl
dpkg?	/usr/include/openssl/ssl.h	[libssl-dev (build optional)]
rpm?	/usr/include/openssl/ssl.h	[openssl-devel or libopenssl-devel (build optional)]
F_pkg?	/usr/local/include/openssl/ssl.h	[openssl (build optional)]
dpkg?	openssl				[openssl (QA optional)]
rpm?	openssl				[openssl (QA optional)]
F_pkg?	openssl				[base FreeBSD install (QA optional)]
# -- sasl
dpkg?		saslpasswd2		[sasl2-bin (QA optional)]
rpm?		saslpasswd2		[cyrus-sasl or cyrus-sasl-lib (QA optional)]
emerge?		saslpasswd2		[dev-libs/cyrus-sasl (QA optional)]
pkgin?		saslpasswd2		[cyrus-sasl (QA optional)]
pkg_add?	saslpasswd2		[cyrus-sasl (QA optional)]
F_pkg?		saslpasswd2		[cyrus-sasl (QA optional)]
S_pkg?		saslpasswd2		[N/A (QA optional)]
slackpkg?	saslpasswd2		[cyrus-sasl (QA optional)]
pacman?		saslpasswd2		[core/libsasl (QA optional)]
brew?		saslpasswd2		[N/A (QA optional)]
dpkg?		saslpluginviewer	[sasl2-bin (QA optional)]
rpm?		pluginviewer		[cyrus-sasl (QA optional)]
emerge?		pluginviewer		[dev-libs/cyrus-sasl (QA optional)]
pkgin?		pluginviewer		[cyrus-sasl (QA optional)]
pkg_add?	pluginviewer		[cyrus-sasl (QA optional)]
F_pkg?		pluginviewer		[cyrus-sasl (QA optional)]
S_pkg?		pluginviewer		[N/A (QA optional)]
slackpkg?	pluginviewer		[cyrus-sasl (QA optional)]
pacman?		pluginviewer		[core/libsasl (QA optional)]
brew?		pluginviewer		[N/A (QA optional)]
# -- selinux policy
rpm?		seinfo			[setools-console or setools or selinux-tools (build optional)]
rpm?    /usr/share/selinux/devel/Makefile [selinux-policy-devel or selinux-policy (build optional)]
rpm?    /etc/selinux/targeted/policy	[selinux-policy-targeted (build optional)]
rpm?	/usr/lib*/libselinux.so		[libselinux-devel (build optional)]
# -- systemtap
dpkg?		dtrace		[systemtap-sdt-dev (build optional)]
rpm?		dtrace		[systemtap-sdt-devel (build optional)]
emerge?		dtrace		[dev-util/systemtap (build optional)]
pkgin?		dtrace		[dtrace (build optional)]
pkg_add?	dtrace		[N/A (build optional)]
F_pkg?		dtrace		[base FreeBSD install (build optional)]
S_pkg?		dtrace		[developer/dtrace (build optional)]
slackpkg?	dtrace		[N/A (build optional)]
pacman?		dtrace		[N/A (build optional)]
brew?		dtrace		[base Darwin install (build optional)]
# -- smartctl
dpkg?		smartctl		[smartmontools (QA optional)]
rpm?		smartctl		[smartmontools (QA optional)]
emerge?		smartctl		[sys-apps/smartmontools (QA optional)]
pkgin?		smartctl		[N/A (QA optional)]
pkg_add?	smartctl		[smartmontools (QA optional)]
F_pkg?		smartctl		[smartmontools (QA optional)]
S_pkg?		smartctl		[N/A (QA optional)]
slackpkg?	smartctl		[smartmontools (QA optional)]
pacman?		smartctl		[extra/smartmontools (QA optional)]
brew?		smartctl		[smartmontools (QA optional)]
# -- ausyscall
dpkg?		ausyscall		[auditd (QA optional)]
rpm?		ausyscall		[audit (QA optional)]
emerge?		ausyscall		[sys-process/audit (QA optional)]
pkgin?		ausyscall		[N/A (QA optional)]
pkg_add?	ausyscall		[N/A (QA optional)]
F_pkg?		ausyscall		[N/A (QA optional)]
S_pkg?		ausyscall		[N/A (QA optional)]
slackpkg?	ausyscall		[N/A (QA optional)]
pacman?		ausyscall		[core/audit (QA optional)]
brew?		ausyscall		[N/A (QA optional)]
# -- xkb (for X11 apps, including pmchart, on some platforms)
dpkg?		/usr/share/X11/xkb/rules/README	[xkb-data (QA optional)]
rpm?		/usr/share/X11/xkb/rules/README	[xkeyboard-config (QA optional)]
emerge?		/usr/share/X11/xkb/rules/README	[x11-misc/xkeyboard-config (QA optional)]
pkgin?		/usr/pkg/share/X11/xkb/rules/README	[xkeyboard-config (QA optional)]
pkg_add?	/usr/X11R6/share/X11/xkb/rules/README	[base OpenBSD install (QA optional)]
F_pkg?		/usr/local/share/X11/xkb/rules/README	[xkeyboard-config (QA optional)]
S_pkg?		/usr/share/X11/xkb/rules/README	[x11/keyboard/data-xkb (QA optional)]
slackpkg?	/usr/share/X11/xkb/rules/README	[xkeyboard-config (QA optional)]
pacman?		/usr/share/X11/xkb/rules/README	[extra/xkeyboard-config (QA optional)]
brew?		/usr/share/X11/xkb/rules/README	[N/A (QA optional)]
# -- sensors (command for pmdalmsensors)
dpkg?		sensors		[lm-sensors (QA optional)]
rpm?		sensors		[lm_sensors or sensors (QA optional)]
emerge?		sensors		[sys-apps/lm_sensors (QA optional)]
pkgin?		sensors		[N/A (QA optional)]
pkg_add?	sensors		[N/A (QA optional)]
F_pkg?		sensors		[N/A (QA optional)]
S_pkg?		sensors		[N/A (QA optional)]
slackpkg?	sensors		[lm_sensors (QA optional)]
pacman?		sensors		[extra/lm_sensors (QA optional)]
brew?		sensors		[N/A (QA optional)]
# -- mkfs.xfs (bcc PMDA QA)
dpkg?		mkfs.xfs	[xfsprogs (QA optional)]
rpm?		mkfs.xfs	[xfsprogs (QA optional)]
emerge?		mkfs.xfs	[? (QA optional)]
pkgin?		mkfs.xfs	[N/A (QA optional)]
pkg_add?	mkfs.xfs	[N/A (QA optional)]
F_pkg?		mkfs.xfs	[N/A (QA optional)]
S_pkg?		mkfs.xfs	[N/A (QA optional)]
slackpkg?	mkfs.xfs	[xfsprogs (QA optional)]
pacman?		mkfs.xfs	[core/xfsprogs (QA optional)]
brew?		mkfs.xfs	[N/A (QA optional)]
# -- java (bcc PMDA QA)
dpkg?		/usr/lib/jvm/java-*/lib/server/libjvm.so [openjdk-[0-9][0-9]*-jre-headless or openjdk-[0-9][0-9]*-jre (QA optional)]
rpm?		/usr/lib/jvm/java-*/lib/server/libjvm.so [java-latest-openjdk-headless or java-[0-9][0-9]*-openjdk-headless (QA optional)]
# -- valkey (pmproxy, pmseries QA)
dpkg?		valkey-server	[valkey-server (QA optional)]
dpkg?		valkey-cli	[valkey-cli or valkey-tools (QA optional)]
rpm?		valkey-server	[valkey (QA optional)]
emerge?		valkey-server	[? (QA optional)]
pkgin?		valkey-server	[N/A (QA optional)]
pkg_add?	valkey-server	[N/A (QA optional)]
F_pkg?		valkey-server	[N/A (QA optional)]
S_pkg?		valkey-server	[N/A (QA optional)]
slackpkg?	valkey-server	[N/A (QA optional)]
pacman?		valkey-server	[community/valkey (QA optional)]
brew?		valkey-server	[valkey (QA optional)]
# -- valkeysearch (pmproxy, pmsearch QA)
rpm?		/usr/lib*/valkey/modules/valkeysearch.so	[ValkeySearch (QA optional)]
# -- redis (pmproxy, pmseries QA)
dpkg?		redis-server	[redis-server (QA optional)]
dpkg?		redis-cli	[redis-cli or redis-tools (QA optional)]
rpm?		redis-server	[redis or redis[0-9] (QA optional)]
emerge?		redis-server	[? (QA optional)]
pkgin?		redis-server	[N/A (QA optional)]
pkg_add?	redis-server	[N/A (QA optional)]
F_pkg?		redis-server	[N/A (QA optional)]
S_pkg?		redis-server	[N/A (QA optional)]
slackpkg?	redis-server	[N/A (QA optional)]
pacman?		redis-server	[extra/redis (QA optional)]
brew?		redis-server	[redis (QA optional)]
# -- redisearch (pmproxy, pmsearch QA)
dpkg?		/usr/lib*/redis/modules/redisearch.so	[redis-redisearch (QA optional)]
rpm?		/usr/lib*/redis/modules/redisearch.so	[RediSearch (QA optional)]
emerge?		redisearch.so	[? (QA optional)]
pkgin?		redisearch.so	[N/A (QA optional)]
pkg_add?	redisearch.so	[N/A (QA optional)]
F_pkg?		redisearch.so	[N/A (QA optional)]
S_pkg?		redisearch.so	[N/A (QA optional)]
slackpkg?	redisearch.so	[N/A (QA optional)]
pacman?		redisearch.so	[N/A (QA optional)]
brew?		redisearch.dylib	[RediSearch (QA optional)]
# -- zpool (bcc PMDA QA)	# may need contrib & non-free repos enabled
dpkg?		zpool		[zfsutils-linux (QA optional)]
rpm?		zpool		[zfs-fuse (QA optional)]
emerge?		zpool		[? (QA optional)]
pkgin?		zpool		[N/A (QA optional)]
pkg_add?	zpool		[N/A (QA optional)]
F_pkg?		zpool		[base FreeBSD install (QA optional)]
S_pkg?		zpool		[? (QA optional)]
slackpkg?	zpool		[N/A (QA optional)]
pacman?		zpool		[N/A (QA optional)]
brew?		zpool		[N/A (QA optional)]
# -- libvirtd & qemu (libvirt PMDA QA)
dpkg?		libvirtd		[libvirt-daemon (QA optional)]
dpkg?		/etc/libvirt/qemu.conf	[libvirt-daemon-system (QA optional)]
rpm?		libvirtd		[libvirt-daemon (QA optional)]
rpm?		/usr/lib*/libvirt/*/libvirt_driver_qemu.so	[libvirt-daemon-driver-qemu (QA optional)]
emerge?		libvirtd		[? (QA optional)]
pkgin?		libvirtd		[N/A (QA optional)]
pkg_add?	libvirtd		[N/A (QA optional)]
F_pkg?		libvirtd		[N/A (QA optional)]
S_pkg?		libvirtd		[N/A (QA optional)]
slackpkg?	libvirtd		[N/A (QA optional)]
pacman?		libvirtd		[extra/libvirt (QA optional)]
brew?		libvirtd		[? (QA optional)]
# -- device-mapper and devel for pmdadm dmstats
dpkg?	/usr/include/libdevmapper.h	[libdevmapper-dev (build optional)]
rpm?	/usr/include/libdevmapper.h	[device-mapper-devel (build optional)]
emerge?		libdevmapper.h		[N/A (build optional)]
pkgin?		libdevmapper.h		[N/A (build optional)]
pkg_add?	libdevmapper.h		[N/A (build optional)]
F_pkg?		libdevmapper.h		[N/A (build optional)]
S_pkg?		libdevmapper.h		[N/A (build optional)]
slackpkg?	libdevmapper.h		[N/A (build optional)]
pacman?	/usr/include/libdevmapper.h	[core/device-mapper (build optional)]
brew?		libdevmapper.h		[N/A (build optional)]
# -- devel packages for pmdastatsd
rpm?	/usr/include/chan/chan.h	[chan-devel (build optional)]
rpm?	/usr/include/hdr/hdr_thread.h	[HdrHistogram_c-devel (build optional)]

# -- pstree and fuser (for QA)
#
dpkg?		pstree		[psmisc (QA optional)]
rpm?		pstree		[psmisc (QA optional)]
emerge?		pstree		[? (QA optional)]
pkgin?		pstree		[? (QA optional)]
pkg_add?	pstree		[pstree (QA optional)]
F_pkg?		pstree		[pstree (QA optional)]
S_pkg?		pstree		[? (QA optional)]
slackpkg?	pstree		[procps-ng (QA optional)]
pacman?		pstree		[core/psmisc (QA optional)]
brew?		pstree		[? (QA optional)]

# -- ss sockets statistics tool (for bcc PMDA QA)
#
dpkg?		ss		[iproute2 (QA optional)]
rpm?		ss		[iproute or iproute2 (QA optional)]
emerge?		ss		[? (QA optional)]
pkgin?		ss		[? (QA optional)]
pkg_add?	ss		[N/A (QA optional)]
F_pkg?		ss		[N/A (QA optional)]
S_pkg?		ss		[? (QA optional)]
slackpkg?	ss		[iproute2 (QA optional)]
pacman?		ss		[core/iproute2 (QA optional)]
brew?		ss		[? (QA optional)]

# -- swrast graphics driver (for pmchart QA)
#
dpkg?		/usr/lib/*/dri/swrast_dri.so	[libgl1-mesa-dri (QA optional)]
rpm?		/usr/lib*/dri/swrast_dri.so	[mesa-dri-drivers (QA optional)]
emerge?		swrast_dri.so		[? (QA optional)]
pkgin?		swrast_dri.so		[? (QA optional)]
pkg_add?	swrast_dri.so		[base OpenBSD install (QA optional)]
F_pkg?		swrast_dri.so		[N/A (QA optional)]
S_pkg?		swrast_dri.so		[? (QA optional)]
slackpkg?	swrast_dri.so		[N/A (QA optional)]
pacman?		/usr/lib/dri/swrast_dri.so	[extra/mesa (QA optional)]
brew?		swrast_dri.so		[? (QA optional)]

# -- libbpf and libbpf-dev for bpf PMDA
dpkg?		/usr/lib/*/libbpf.so.*	[libbpf[0-9] (build optional)]
dpkg?		/usr/include/bpf/bpf.h	[libbpf-dev (build optional)]
rpm?		/usr/lib*/libbpf.so.*	[libbpf (build optional)]
rpm?		/usr/include/bpf/bpf.h	[libbpf-devel (build optional)]
dpkg?		/usr/include/bpf/bpf.h	[libbpf-devel (build optional)]
emerge?		?			[? (build optional)]
pkgin?		?			[? (build optional)]
pkg_add?	libbpf.so|bpf.h		[N/A (build optional)]
F_pkg?		libbpf.so		[N/A (build optional)]
S_pkg?		?			[? (build optional)]
slackpkg?	?			[N/A (build optional)]
pacman?		?			[? (build optional)]
brew?		?			[? (QA optional)]

# -- expect (for bpf PMDA QA)
#
dpkg?		expect			[expect (QA optional)]
rpm?		expect			[expect (QA optional)]
emerge?		expect			[? (QA optional)]
pkgin?		expect			[? (QA optional)]
pkg_add?	expect			[N/A (QA optional)] # no bpf PMDA here
F_pkg?		expect			[expect (QA optional)]
S_pkg?		expect			[? (QA optional)]
slackpkg?	expect			[expect (QA optional)]
pacman?		expect			[? (QA optional)]
brew?		expect			[? (QA optional)]

# -- llvm-strip (for bpf PMDA)
#
dpkg?		llvm-strip			[llvm (build optional)]
rpm?		llvm-strip			[llvm or llvm-devel (build optional)]
emerge?		llvm-strip			[? (build optional)]
pkgin?		llvm-strip			[? (build optional)]
pkg_add?	llvm-strip			[N/A (build optional)] # no bpf PMDA here
F_pkg?		llvm-strip			[N/A (build optional)]
S_pkg?		llvm-strip			[? (build optional)]
slackpkg?	llvm-strip			[N/A (build optional)]
pacman?		llvm-strip			[? (build optional)]
brew?		llvm-strip			[? (build optional)]

# -- clang (for bpf PMDA)
#
dpkg?		clang			[clang (build optional)]
rpm?		clang			[clang (build optional)]
emerge?		clang			[? (build optional)]
pkgin?		clang			[? (build optional)]
pkg_add?	clang			[N/A (build optional)] # no bpf PMDA here
F_pkg?		clang			[base FreeBSD install (build optional)]
S_pkg?		clang			[? (build optional)]
slackpkg?	clang			[N/A (build optional)]
pacman?		clang			[? (build optional)]
brew?		clang			[? (build optional)]

# -- libcmocka (for url encode/decode QA)
#
dpkg?		/usr/lib/*/libcmocka.so		[libcmocka-dev (QA optional)]
rpm?		/usr/lib*/libcmocka.so.*	[libcmocka-devel (QA optional)]
emerge?		?				[? (QA optional)]
pkgin?		?				[? (QA optional)]
pkg_add?	/usr/local/lib/libcmocka.so.*	[cmocka (QA optional)]
F_pkg?		/usr/local/lib/libcmocka.so	[cmocka (QA optional)]
S_pkg?		?				[? (QA optional)]
slackpkg?	?				[N/A (QA optional)]
pacman?		?				[? (QA optional)]
brew?		?				[? (QA optional)]

# -- libdrm (for amdgpu PMDA)
dpkg?		/usr/lib/*/libdrm.so		[libdrm-dev (QA optional)]
rpm?		/usr/lib*/libdrm.so.*		[libdrm-devel or libdrm2-devel (QA optional)]
emerge?		?				[? (QA optional)]
pkgin?		?				[? (QA optional)]
pkg_add?	/usr/X11R6/lib/libdrm.so.*	[xbase74 (QA optional)]
F_pkg?		libdrm.so			[N/A (QA optional)]
S_pkg?		?				[? (QA optional)]
slackpkg?	?				[N/A (QA optional)]
pacman?		?				[? (QA optional)]
brew?		?				[? (QA optional)]

# -- libinih (optional for libpcp_web)
#
dpkg?		/usr/include/ini.h		[libinih-dev (build optional)]
rpm?		/usr/include/ini.h		[inih-devel or libinih-devel (build optional)]
emerge?		/usr/include/ini.h		[dev-libs/inih (build optional)]
pkgin?		/usr/include/ini.h		[N/A (build optional)]
pkg_add?	/usr/include/ini.h		[inih (build optional)]
F_pkg?		/usr/include/ini.h		[inih (build optional)]
S_pkg?		/usr/include/ini.h		[? (build optional)]
slackpkg?	/usr/include/ini.h		[inih (build optional)]
pacman?		/usr/include/ini.h		[libinih (build optional)]
brew?		/usr/include/ini.h		[? (build optional)]

# -- jq (for pmproxy/pmseries QA)
#
dpkg?		jq			[jq (QA optional)]
rpm?		jq			[jq (QA optional)]
emerge?		jq			[? (QA optional)]
pkgin?		jq			[? (QA optional)]
pkg_add?	jq			[jq (QA optional)]
F_pkg?		jq			[jq (QA optional)]
S_pkg?		jq			[? (QA optional)]
slackpkg?	jq			[N/A (QA optional)]
pacman?		jq			[? (QA optional)]
brew?		jq			[? (QA optional)]

# -- stap (for pmcd QA)
#
dpkg?		stap			[systemtap (QA optional)]
dpkg?		staprun			[systemtap-runtime (QA optional)]
rpm?		stap			[systemtap-devel or systemtap (QA optional)]
rpm?		staprun			[systemtap-runtime (QA optional)]
emerge?		stap			[? (QA optional)]
pkgin?		stap			[? (QA optional)]
pkg_add?	stap			[N/A (QA optional)]
F_pkg?		stap			[N/A (QA optional)]
S_pkg?		stap			[? (QA optional)]
slackpkg?	stap			[N/A (QA optional)]
pacman?		stap			[? (QA optional)]
brew?		stap			[? (QA optional)]

# -- tplist or tplist-bpfcc (for bcc PMDA QA)
#
dpkg?		tplist|tplist-bpfcc		[bpfcc-tools (QA optional)]
rpm?		/usr/share/bcc/tools/tplist	[bcc-tools (QA optional)]
emerge?		tplist|tplist-bpfcc		[? (QA optional)]
pkgin?		tplist|tplist-bpfcc		[? (QA optional)]
pkg_add?	tplist|tplist-bpfcc		[N/A (QA optional)]
F_pkg?		tplist|tplist-bpfcc		[N/A (QA optional)]
S_pkg?		tplist|tplist-bpfcc		[? (QA optional)]
slackpkg?	tplist|tplist-bpfcc		[N/A (QA optional)]
pacman?		tplist|tplist-bpfcc		[? (QA optional)]
brew?		tplist|tplist-bpfcc		[? (QA optional)]

# -- bpftrace-dbgsym (for bpftrace PMDA QA?)
#
dpkg?		/usr/share/doc/bpftrace-dbgsym	[bpftrace-dbgsym]

# -- zstd
#
dpkg?		zstd		[zstd]
rpm?		zstd		[zstd]
emerge?		zstd		[?]
pkgin?		zstd		[?]
pkg_add?	zstd		[zstd]
F_pkg?		zstd		[base FreeBSD install]
S_pkg?		zstd		[?]
slackpkg?	zstd		[zstd]
pacman?		zstd 		[core/zstd]
brew?		zstd		[?]

# sudo
#
dpkg?		sudo		[sudo]
rpm?		sudo		[sudo]
emerge?		sudo		[? {Gentoo}]
pkgin?		sudo		[? {NetBSD}]]
pkg_add?	sudo		[? {OpenBSD}]]
F_pkg?		sudo		[? {FreeBSD}]
S_pkg?		sudo		[? {Solaris}]
slackpkg?	sudo		[? {Slackware}]
pacman?		sudo		[? {Arch Linux}]
brew?		sudo		[? {MacOS?}]

# misc
#
rpm?		/usr/sbin/qshape	[postfix-perl-scripts]
mandriva?	/usr/sbin/qshape	[postfix]
suse?		/usr/share/doc/packages/postfix-doc/auxiliary/qshape/qshape.pl		[postfix-doc]
arch?		/usr/bin/qshape		[N/A (build optional)]
F_pkg?		/usr/local/bin/qshape	[postfix]
F_pkg?		gdiff			[diffutils]
netbsd?		gdiff			[diffutils]
pkg_add?	gdiff			[gdiff]
pkg_add?	unzip			[unzip]
rpm?		/usr/sbin/service|/sbin/service	[initscripts or aaa_base]
dpkg?		/usr/src/linux-headers-*	[linux-headers-.*]
