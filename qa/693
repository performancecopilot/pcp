#!/bin/sh
# PCP QA Test No. 693
# Another reinitMetric() issue for pmie.
#
# Copyright (c) 2018 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
    pmstore sample.ghosts.visible -1 >>$seq_full
}

# find at uniq lines (modulo datestamp differences) like ...
# Tue Oct 30 20:03:44 2018: <something> ok!
#
_filter()
{
    sed -n \
	-e '/ ok!$/{
s/.*:/DATE:/
p
}' \
    | sort \
    | uniq
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

cat <<'End-of-File' >$tmp.pmie
sample.ghosts.state #'Duppy' == 0 -> print "Duppy is dead, ok!";
sample.ghosts.state #'Pocong' == 1 -> print "Pocong is alive, ok!";
some_inst(sample.ghosts.state == sample.ghosts.state #'Duppy') -> print "some_inst & #inst ok!";
End-of-File

# real QA test starts here
echo "=== with metric visible from the start ===" | tee -a $seq_full
pmstore sample.ghosts.visible 8 >>$seq_full
pmie -t 0.1sec -T2.5sec -c $tmp.pmie -v >$tmp.out 2>&1
cat $tmp.out >>$seq_full
_filter <$tmp.out

echo | tee -a $seq_full
echo "=== with metric invisible from the start ===" | tee -a $seq_full
pmstore sample.ghosts.visible -1 >>$seq_full
pmie -t 0.1sec -T5.5sec -c $tmp.pmie -v >$tmp.out 2>&1 &
pmsleep 1sec
pmstore sample.ghosts.visible 4 >>$seq_full
pmsleep 1.5sec
pmstore sample.ghosts.visible 8 >>$seq_full
wait
cat $tmp.out >>$seq_full
_filter <$tmp.out

# success, all done
status=0
exit
