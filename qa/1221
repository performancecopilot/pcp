#!/bin/sh
# PCP QA Test No. 1221
# test pmda openmetrics labels
#
# Note: if anything gets added or changed in qa/openmetrics/samples directory,
# then this test (and all tests in group pmda.openmetrics) will need to be remade.
#
# Copyright (c) 2017 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.openmetrics

_pmdaopenmetrics_check || _notrun "openmetrics pmda and/or load generator not installed"
_have_python266 && _notrun "no scripts support on python 2.6.6, check_output method not available"

status=1	# failure is the default!

_filter()
{
    sed \
    -e 's/"userid":[0-9]*/"userid":NUM/' \
    -e 's/"groupid":[0-9]*/"groupid":NUM/' \
    -e 's/"url":"file:.*\.txt"/"url":FILEURL/' \
    -e 's/"hostname":"[a-z0-9][a-z0-9_.-]*"/"hostname":HOSTNAME/' \
    -e 's/"machineid":"[a-z0-9][a-z0-9_.-]*"/"machineid":MACHINEID/' \
    -e 's/"domainname":"[a-z0-9][a-z0-9_.-]*"/"domainname":DOMAINNAME/' \
    -e 's;'$PCP_PMDAS_DIR';PCP_PMDAS_DIR;'
}

_cleanup()
{
    cd $here
    $sudo rm -rf $PCP_ETC_DIR/pcp/labels/*
    _restore_config $PCP_ETC_DIR/pcp/labels
    _sighup_pmcd
    _pmdaopenmetrics_cleanup
    $sudo rm -rf $tmp $tmp.*
}

_prepare_pmda openmetrics
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

_save_config $PCP_ETC_DIR/pcp/labels
$sudo rm -rf $PCP_ETC_DIR/pcp/labels/*

_pmdaopenmetrics_save_config
_pmdaopenmetrics_install

# add all the sample text files as urls.
# need to be a place the user $PCP_USER (pmcd) can read
#
( cd $here/openmetrics/samples; ls -1 *.txt ) | sort | while read file
do
    cp $here/openmetrics/samples/$file $tmp.$file
    urlbase=`basename "$file" .txt | tr .- _`
    echo 'file://'$tmp.$file >$tmp.tmp
    $sudo cp $tmp.tmp $PCP_PMDAS_DIR/openmetrics/config.d/$urlbase.url
done
ls -l $PCP_PMDAS_DIR/openmetrics/config.d >>$seq_full

# add all the sample scripts
cp -a $here/openmetrics/scripts/* $PCP_PMDAS_DIR/openmetrics/config.d
rm -f $PCP_PMDAS_DIR/openmetrics/config.d/GNU*

if ! _pmdaopenmetrics_wait_for_metric openmetrics.thermostat
then
    status=1
    exit
fi

if pminfo -l `pminfo openmetrics | grep -F -v openmetrics.control | LC_COLLATE=POSIX sort` 2> $tmp.err | _filter | tee $tmp.info
then
    :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi
cat $tmp.info $tmp.err

_pmdaopenmetrics_remove >/dev/null 2>&1

# success, all done
status=0
exit
