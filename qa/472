#!/bin/sh
# PCP QA Test No. 472
# multi-thread - instance domain services for contented contexts
#
# Copyright (c) 2011 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_get_libpcp_config
$multi_threaded || _notrun "No libpcp threading support"

status=0	# success is the default!
$sudo rm -f /tmp/func?.out
trap "rm -f $tmp.* /tmp/func?.out; exit \$status" 0 1 2 3 15

# real QA test starts here
echo "Only one context ..."
src/multithread6 localhost
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo
echo "Two contexts, same host, different fd's ..."
src/multithread6 `hostname` localhost
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo
echo "Two contexts, same host, same fd's ..."
src/multithread6 `hostname` `hostname`
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo
echo "Three contexts, same host, different fd's ..."
src/multithread6 `hostname` localhost 127.0.0.1
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo
echo "Three contexts, same host, same fd's ..."
src/multithread6 `hostname` `hostname` `hostname`
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

# success, all done
exit
