#!/bin/sh
# PCP QA Test No. 942
# lock correctness for:
#	pmGetDesc and multiple contexts
# 	instance domain services for contented contexts
#
# See qa/470 for the non-helgrind versions of these tests.
# See qa/472 for the non-helgrind versions of these tests.
#
# Copyright (c) 2017 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_check_valgrind
_check_helgrind
_get_libpcp_config
$multi_threaded || _notrun "No libpcp threading support"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
echo "=== pmDesc with three contexts, same host, different fd's ===" | tee -a $seq_full
$sudo rm -f /tmp/func?.out
_run_helgrind src/multithread5 `hostname` localhost 127.0.0.1
cat $tmp.valgrind.out
if [ -s $tmp.valgrind.err ]
then
    echo "=== stderr ==="
    cat $tmp.valgrind.err
fi
echo "=== output files ==="
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo | tee -a $seq_full
echo "=== pmDesc with three contexts, same host, same fd's ===" | tee -a $seq_full
$sudo rm -f /tmp/func?.out
_run_helgrind src/multithread5 `hostname` `hostname` `hostname`
cat $tmp.valgrind.out
if [ -s $tmp.valgrind.err ]
then
    echo "=== stderr ==="
    cat $tmp.valgrind.err
fi
echo "=== output files ==="
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo | tee -a $seq_full
echo "=== indom services with three contexts, same host, different fd's ===" | tee -a $seq_full
_run_helgrind src/multithread6 `hostname` localhost 127.0.0.1
cat $tmp.valgrind.out
if [ -s $tmp.valgrind.err ]
then
    echo "=== stderr ==="
    cat $tmp.valgrind.err
fi
echo "=== output files ==="
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

echo | tee -a $seq_full
echo "=== indom services with three contexts, same host, same fd's ===" | tee -a $seq_full
_run_helgrind src/multithread6 `hostname` `hostname` `hostname`
cat $tmp.valgrind.out
if [ -s $tmp.valgrind.err ]
then
    echo "=== stderr ==="
    cat $tmp.valgrind.err
fi
echo "=== output files ==="
cat /tmp/func?.out | LC_COLLATE=POSIX sort | uniq -c | sed -e 's/  */ /g'

# success, all done
status=0
exit
