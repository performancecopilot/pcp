#!/bin/sh
# PCP QA Test No. 1901
# test pmlogger FD leak on SIGUSR2 reexec
#
# Copyright (c) 2021 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check
. ./common.secure

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15
mkdir -p $tmp
cd $tmp
PMLOGGER=$PCP_BIN_DIR/pmlogger
spec=qa-$seq-%Y%m%d.%H.%M

echo "== checking SIGUSR2 reexec does not leak FDs" | tee -a $seq_full
$PMLOGGER -U$username -t 2s -c config.default -l pmlogger.log $spec 2>$seq.err &
pid=$!
echo "pid=$pid" >>$seq_full
_wait_for_pmlogger $pid pmlogger.log || _exit 1
sleep 5
before=`$sudo pminfo -f proc.fd.count | awk '$2 ~ /^\['$pid'$/ {print $NF}'`
echo "before=$before" >>$seq_full
$sudo -u $username kill -USR2 $pid
sleep 5
after=`$sudo pminfo -f proc.fd.count | awk '$2 ~ /^\['$pid'$/ {print $NF}'`
echo "after=$pid" >>$seq_full
echo === log === >>$seq_full; cat pmlogger.log >>$seq_full
echo === err === >>$seq_full; cat $seq.err >>$seq_full
if [ "$before" != "$after" ]
then
    echo "FAILED $before not equal to $after"
    echo pid=$pid
    status=1
else
    status=0
fi
$sudo -u $username kill -TERM $pid
_wait_pmlogger_end $pid || _exit 1

exit
