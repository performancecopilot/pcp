#!/bin/sh
# PCP QA Test No. 1284
# Check for Linux kernel waitio time "counters" going backwards
#
# Copyright (c) 2020 Ken McDonell.  All Rights Reserved.
#

if [ $# -eq 0 ]
then
    seq=`basename $0`
    echo "QA output created by $seq"
else
    # use $seq from caller, unless not set
    [ -n "$seq" ] || seq=`basename $0`
    echo "QA output created by `basename $0` $*"
fi

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ $PCP_PLATFORM = linux ] || _notrun "Linux PMDA waitio testing"
which pmrep >/dev/null 2>&1 || _notrun "no pmrep executable"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=0	# success is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
    tee -a $seq_full \
    | $PCP_AWK_PROG '
/k.a.c.w.total/	{ next }
/millisec/	{ next }
/cpu/		{ lab[1] = "all"; prior[1] = 0
		  for (i = 1; i <= NF; i++) {
		      lab[i+1] = $i
		      prior[i+1] = 0
		  }
		  next
		}
		{ for (i = 1; i <= NF; i++) {
		    if ($i < prior[i]) {
			print NR ": " lab[i] " went backwards: prior: " prior[i] " this: " $i
		    }
		    prior[i] = $i
		  }
		}'
}

# real QA test starts here
echo "Silence is golden ..."

pmrep -t 5msec -s 1000 -r -P 0 \
    kernel.all.cpu.wait.total kernel.percpu.cpu.wait.total \
| _filter

# success, all done
exit
