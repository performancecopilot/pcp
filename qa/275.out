QA output created by 275
=== expression trees and pmDesc propagation ===

my.space_over_time1 = sample.mirage + sample.mirage_longlong
my.space_over_time2 = sample.mirage_longlong + sample.mirage
my.space_over_time3 = sample.mirage_longlong + sample.mirage - sample.byte_rate
my.space_over_time4 = sample.byte_rate + sample.byte_rate_perhour
my.space = sample.byte_ctr + sample.kbyte_ctr
my.byte1 = sample.byte_rate * sample.scale_step.time_up_secs
my.byte2 = sample.byte_rate * sample.scale_step.time_up_nanosecs
my.x1 = sample.scale_step.bytes_down / sample.scale_step.time_up_secs
my.x2 = sample.scale_step.bytes_down / sample.scale_step.time_up_secs + sample.mirage
my.x3 = sample.scale_step.count_up * sample.scale_step.count_down
my.x4 = sample.scale_step.count_down / sample.scale_step.count_up
# discrete and instantaneous combinations
my.i1 = 42 + sample.scale_step.none_up
my.i2 = sample.scale_step.none_up + 42
my.i3 = pmcd.pmlogger.port - pmcd.pmlogger.port

pmRegisterDerived: name="event.flags" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[0] event.flags = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-0>...
expr node <addr-0> type=ANON left=<addr-1> right=(nil) save_last=0
expr node <addr-1> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] primary=1
pmRegisterDerived: name="event.missed" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[1] event.missed = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-2>...
expr node <addr-2> type=ANON left=<addr-3> right=(nil) save_last=0
expr node <addr-3> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] primary=1
Derived metric initialization from $PCP_DERIVED_CONFIG
pmLoadDerivedConfig("TMP.config")
pmRegisterDerived: name="my.space_over_time1" expr="sample.mirage + sample.mirage_longlong"
derive_lex() -> type=L_NAME "sample.mirage"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.mirage_longlong"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[2] my.space_over_time1 = sample.mirage + sample.mirage_longlong
Derived metric expr dump from <addr-4>...
expr node <addr-4> type=PLUS left=<addr-5> right=<addr-6> save_last=0
expr node <addr-5> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage] primary=1
expr node <addr-6> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage_longlong] primary=1
pmRegisterDerived: name="my.space_over_time2" expr="sample.mirage_longlong + sample.mirage"
derive_lex() -> type=L_NAME "sample.mirage_longlong"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.mirage"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[3] my.space_over_time2 = sample.mirage_longlong + sample.mirage
Derived metric expr dump from <addr-7>...
expr node <addr-7> type=PLUS left=<addr-8> right=<addr-9> save_last=0
expr node <addr-8> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage_longlong] primary=1
expr node <addr-9> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage] primary=1
pmRegisterDerived: name="my.space_over_time3" expr="sample.mirage_longlong + sample.mirage - sample.byte_rate"
derive_lex() -> type=L_NAME "sample.mirage_longlong"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.mirage"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_NAME "sample.byte_rate"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[4] my.space_over_time3 = sample.mirage_longlong + sample.mirage - sample.byte_rate
Derived metric expr dump from <addr-10>...
expr node <addr-10> type=MINUS left=<addr-11> right=<addr-14> save_last=0
expr node <addr-11> type=PLUS left=<addr-12> right=<addr-13> save_last=0
expr node <addr-12> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage_longlong] primary=1
expr node <addr-13> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage] primary=1
expr node <addr-14> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate] primary=1
pmRegisterDerived: name="my.space_over_time4" expr="sample.byte_rate + sample.byte_rate_perhour"
derive_lex() -> type=L_NAME "sample.byte_rate"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.byte_rate_perhour"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[5] my.space_over_time4 = sample.byte_rate + sample.byte_rate_perhour
Derived metric expr dump from <addr-15>...
expr node <addr-15> type=PLUS left=<addr-16> right=<addr-17> save_last=0
expr node <addr-16> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate] primary=1
expr node <addr-17> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate_perhour] primary=1
pmRegisterDerived: name="my.space" expr="sample.byte_ctr + sample.kbyte_ctr"
derive_lex() -> type=L_NAME "sample.byte_ctr"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.kbyte_ctr"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[6] my.space = sample.byte_ctr + sample.kbyte_ctr
Derived metric expr dump from <addr-18>...
expr node <addr-18> type=PLUS left=<addr-19> right=<addr-20> save_last=0
expr node <addr-19> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_ctr] primary=1
expr node <addr-20> type=NAME left=(nil) right=(nil) save_last=0 [sample.kbyte_ctr] primary=1
pmRegisterDerived: name="my.byte1" expr="sample.byte_rate * sample.scale_step.time_up_secs"
derive_lex() -> type=L_NAME "sample.byte_rate"
derive_lex() -> type=L_STAR "*"
derive_lex() -> type=L_NAME "sample.scale_step.time_up_secs"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[7] my.byte1 = sample.byte_rate * sample.scale_step.time_up_secs
Derived metric expr dump from <addr-21>...
expr node <addr-21> type=STAR left=<addr-22> right=<addr-23> save_last=0
expr node <addr-22> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate] primary=1
expr node <addr-23> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.time_up_secs] primary=1
pmRegisterDerived: name="my.byte2" expr="sample.byte_rate * sample.scale_step.time_up_nanosecs"
derive_lex() -> type=L_NAME "sample.byte_rate"
derive_lex() -> type=L_STAR "*"
derive_lex() -> type=L_NAME "sample.scale_step.time_up_nanosecs"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[8] my.byte2 = sample.byte_rate * sample.scale_step.time_up_nanosecs
Derived metric expr dump from <addr-24>...
expr node <addr-24> type=STAR left=<addr-25> right=<addr-26> save_last=0
expr node <addr-25> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate] primary=1
expr node <addr-26> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.time_up_nanosecs] primary=1
pmRegisterDerived: name="my.x1" expr="sample.scale_step.bytes_down / sample.scale_step.time_up_secs"
derive_lex() -> type=L_NAME "sample.scale_step.bytes_down"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_NAME "sample.scale_step.time_up_secs"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[9] my.x1 = sample.scale_step.bytes_down / sample.scale_step.time_up_secs
Derived metric expr dump from <addr-27>...
expr node <addr-27> type=SLASH left=<addr-28> right=<addr-29> save_last=0
expr node <addr-28> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.bytes_down] primary=1
expr node <addr-29> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.time_up_secs] primary=1
pmRegisterDerived: name="my.x2" expr="sample.scale_step.bytes_down / sample.scale_step.time_up_secs + sample.mirage"
derive_lex() -> type=L_NAME "sample.scale_step.bytes_down"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_NAME "sample.scale_step.time_up_secs"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.mirage"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[10] my.x2 = sample.scale_step.bytes_down / sample.scale_step.time_up_secs + sample.mirage
Derived metric expr dump from <addr-30>...
expr node <addr-30> type=PLUS left=<addr-31> right=<addr-34> save_last=0
expr node <addr-31> type=SLASH left=<addr-32> right=<addr-33> save_last=0
expr node <addr-32> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.bytes_down] primary=1
expr node <addr-33> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.time_up_secs] primary=1
expr node <addr-34> type=NAME left=(nil) right=(nil) save_last=0 [sample.mirage] primary=1
pmRegisterDerived: name="my.x3" expr="sample.scale_step.count_up * sample.scale_step.count_down"
derive_lex() -> type=L_NAME "sample.scale_step.count_up"
derive_lex() -> type=L_STAR "*"
derive_lex() -> type=L_NAME "sample.scale_step.count_down"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[11] my.x3 = sample.scale_step.count_up * sample.scale_step.count_down
Derived metric expr dump from <addr-35>...
expr node <addr-35> type=STAR left=<addr-36> right=<addr-37> save_last=0
expr node <addr-36> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.count_up] primary=1
expr node <addr-37> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.count_down] primary=1
pmRegisterDerived: name="my.x4" expr="sample.scale_step.count_down / sample.scale_step.count_up"
derive_lex() -> type=L_NAME "sample.scale_step.count_down"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_NAME "sample.scale_step.count_up"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[12] my.x4 = sample.scale_step.count_down / sample.scale_step.count_up
Derived metric expr dump from <addr-38>...
expr node <addr-38> type=SLASH left=<addr-39> right=<addr-40> save_last=0
expr node <addr-39> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.count_down] primary=1
expr node <addr-40> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.count_up] primary=1
pmRegisterDerived: name="my.i1" expr="42 + sample.scale_step.none_up"
derive_lex() -> type=L_INTEGER "42"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.scale_step.none_up"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[13] my.i1 = 42 + sample.scale_step.none_up
Derived metric expr dump from <addr-41>...
expr node <addr-41> type=PLUS left=<addr-42> right=<addr-43> save_last=0
expr node <addr-42> type=INTEGER left=(nil) right=(nil) save_last=0 [42] primary=1
expr node <addr-43> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.none_up] primary=1
pmRegisterDerived: name="my.i2" expr="sample.scale_step.none_up + 42"
derive_lex() -> type=L_NAME "sample.scale_step.none_up"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_INTEGER "42"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[14] my.i2 = sample.scale_step.none_up + 42
Derived metric expr dump from <addr-44>...
expr node <addr-44> type=PLUS left=<addr-45> right=<addr-46> save_last=0
expr node <addr-45> type=NAME left=(nil) right=(nil) save_last=0 [sample.scale_step.none_up] primary=1
expr node <addr-46> type=INTEGER left=(nil) right=(nil) save_last=0 [42] primary=1
pmRegisterDerived: name="my.i3" expr="pmcd.pmlogger.port - pmcd.pmlogger.port"
derive_lex() -> type=L_NAME "pmcd.pmlogger.port"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_NAME "pmcd.pmlogger.port"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[15] my.i3 = pmcd.pmlogger.port - pmcd.pmlogger.port
Derived metric expr dump from <addr-47>...
expr node <addr-47> type=MINUS left=<addr-48> right=<addr-49> save_last=0
expr node <addr-48> type=NAME left=(nil) right=(nil) save_last=0 [pmcd.pmlogger.port] primary=1
expr node <addr-49> type=NAME left=(nil) right=(nil) save_last=0 [pmcd.pmlogger.port] primary=1
__dmopencontext(->ctx 0) called, 16 derived metrics
__dmgetpmid: metric "my.space_over_time1" -> PMID 511.0.3
__dmtraverse: name="my" added "my.space_over_time1"
__dmgetpmid: metric "my.space_over_time2" -> PMID 511.0.4
__dmtraverse: name="my" added "my.space_over_time2"
__dmgetpmid: metric "my.space_over_time3" -> PMID 511.0.5
__dmtraverse: name="my" added "my.space_over_time3"
__dmgetpmid: metric "my.space_over_time4" -> PMID 511.0.6
__dmtraverse: name="my" added "my.space_over_time4"
__dmgetpmid: metric "my.space" -> PMID 511.0.7
__dmtraverse: name="my" added "my.space"
__dmgetpmid: metric "my.byte1" -> PMID 511.0.8
__dmtraverse: name="my" added "my.byte1"
__dmgetpmid: metric "my.byte2" -> PMID 511.0.9
__dmtraverse: name="my" added "my.byte2"
__dmgetpmid: metric "my.x1" -> PMID 511.0.10
__dmtraverse: name="my" added "my.x1"
__dmgetpmid: metric "my.x2" -> PMID 511.0.11
__dmtraverse: name="my" added "my.x2"
__dmgetpmid: metric "my.x3" -> PMID 511.0.12
__dmtraverse: name="my" added "my.x3"
__dmgetpmid: metric "my.x4" -> PMID 511.0.13
__dmtraverse: name="my" added "my.x4"
__dmgetpmid: metric "my.i1" -> PMID 511.0.14
__dmtraverse: name="my" added "my.i1"
__dmgetpmid: metric "my.i2" -> PMID 511.0.15
__dmtraverse: name="my" added "my.i2"
__dmgetpmid: metric "my.i3" -> PMID 511.0.16
__dmtraverse: name="my" added "my.i3"
__dmgetpmid: metric "my.space_over_time1" -> PMID 511.0.3
__dmgetpmid: metric "my.space_over_time2" -> PMID 511.0.4
__dmgetpmid: metric "my.space_over_time3" -> PMID 511.0.5
__dmgetpmid: metric "my.space_over_time4" -> PMID 511.0.6
__dmgetpmid: metric "my.space" -> PMID 511.0.7
__dmgetpmid: metric "my.byte1" -> PMID 511.0.8
__dmgetpmid: metric "my.byte2" -> PMID 511.0.9
__dmgetpmid: metric "my.x1" -> PMID 511.0.10
__dmgetpmid: metric "my.x2" -> PMID 511.0.11
__dmgetpmid: metric "my.x3" -> PMID 511.0.12
__dmgetpmid: metric "my.x4" -> PMID 511.0.13
__dmgetpmid: metric "my.i1" -> PMID 511.0.14
__dmgetpmid: metric "my.i2" -> PMID 511.0.15
__dmgetpmid: metric "my.i3" -> PMID 511.0.16

my.space_over_time1
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: Kbyte / sec

my.space_over_time2
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: Kbyte / sec

my.space_over_time3
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: Kbyte / sec

my.space_over_time4
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: byte / hour

my.space
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: Kbyte

my.byte1
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: byte

my.byte2
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: byte

my.x1
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: byte / sec

my.x2
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: Kbyte / sec

my.x3
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count^2 / sec

my.x4
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: sec

my.i1
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none

my.i2
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none

my.i3
    Data Type: 32-bit unsigned int  InDom: 2.1 0x800001
    Semantics: discrete  Units: none

=== fetch values exercises ===


sample.mirage
    inst [0 or "m-00"] value 26
    inst [46 or "m-46"] value 4625
    inst [47 or "m-47"] value 4724
    inst [10 or "m-10"] value 1023
    inst [15 or "m-15"] value 1522
    inst [16 or "m-16"] value 1621
    inst [17 or "m-17"] value 1720
    inst [18 or "m-18"] value 1819

sample.mirage_longlong
    inst [0 or "m-00"] value 34000000
    inst [46 or "m-46"] value 4633000000
    inst [47 or "m-47"] value 4732000000
    inst [10 or "m-10"] value 1031000000
    inst [15 or "m-15"] value 1530000000
    inst [16 or "m-16"] value 1629000000
    inst [17 or "m-17"] value 1728000000
    inst [18 or "m-18"] value 1827000000

sample.scale_step.bytes_up
    value 1

sample.scale_step.bytes_down
    value 1

sample.scale_step.count_up
    value 1

sample.scale_step.count_down
    value 1

sample.scale_step.time_up_secs
    value 1

sample.scale_step.time_up_nanosecs
    value 1

sample.scale_step.none_up
    value 1

sample.byte_ctr
    value 23833

sample.byte_rate
    value 767

sample.kbyte_ctr
    value 23132

sample.byte_rate_perhour
    value 770

pmcd.pmlogger.archive
    inst [3931 or "3931"] value "/home/kenj/src/pcpqa/src/sample_expr"

pmcd.pmlogger.port
    inst [3931 or "3931"] value 4331

pmcd.pmlogger.host
    inst [3931 or "3931"] value "bozo.localdomain"

event.flags
No value(s) available!

event.missed
No value(s) available!

my.space_over_time1
    inst [0 or "m-00"] value 33203151
    inst [46 or "m-46"] value 4524418687.5
    inst [47 or "m-47"] value 4621098474
    inst [10 or "m-10"] value 1006836960.5
    inst [15 or "m-15"] value 1494142147
    inst [16 or "m-16"] value 1590821933.5
    inst [17 or "m-17"] value 1687501720
    inst [18 or "m-18"] value 1784181506.5

my.space_over_time2
    inst [0 or "m-00"] value 33203151
    inst [46 or "m-46"] value 4524418687.5
    inst [47 or "m-47"] value 4621098474
    inst [10 or "m-10"] value 1006836960.5
    inst [15 or "m-15"] value 1494142147
    inst [16 or "m-16"] value 1590821933.5
    inst [17 or "m-17"] value 1687501720
    inst [18 or "m-18"] value 1784181506.5

my.space_over_time3
    inst [0 or "m-00"] value 33203150.25097656
    inst [46 or "m-46"] value 4524418686.750977
    inst [47 or "m-47"] value 4621098473.250977
    inst [10 or "m-10"] value 1006836959.750977
    inst [15 or "m-15"] value 1494142146.250977
    inst [16 or "m-16"] value 1590821932.750977
    inst [17 or "m-17"] value 1687501719.250977
    inst [18 or "m-18"] value 1784181505.750977

my.space_over_time4
    value 2761970

my.space
    value 23155.2744140625

my.byte1
    value 767

my.byte2
    value 7.67e-07

my.x1
    value 1

my.x2
    inst [0 or "m-00"] value 26.0009765625
    inst [46 or "m-46"] value 4625.0009765625
    inst [47 or "m-47"] value 4724.0009765625
    inst [10 or "m-10"] value 1023.0009765625
    inst [15 or "m-15"] value 1522.0009765625
    inst [16 or "m-16"] value 1621.0009765625
    inst [17 or "m-17"] value 1720.0009765625
    inst [18 or "m-18"] value 1819.0009765625

my.x3
    value 1

my.x4
    value 1

my.i1
    value 43

my.i2
    value 43

my.i3
    inst [3931 or "3931"] value 0

=== some more scale conversion tests ===

gcov.a = ( 1 / sample.mirage_longlong ) / (1 / sample.mirage )
gcov.b = ( 1 / sample.mirage ) / (1 / sample.mirage_longlong )
gcov.c = sample.seconds + disk.all.total
gcov.d = sample.ulong.count.base - sample.ulong.count.kilo
gcov.e = sample.ulong.count.mega - sample.ulong.count.kilo
# avoid floating point rounding differences across platforms
# by making the result NOT close to zero (initial 2 multiplier
# added Jan 2023)
gcov.f = 2*(1/sample.ulong.count.base) - (1/sample.ulong.count.kilo)
gcov.g = 2*(1/sample.ulong.count.mega) - (1/sample.ulong.count.kilo)
pmRegisterDerived: global metric[0] event.flags = anon(PM_TYPE_U32)
pmRegisterDerived: global metric[1] event.missed = anon(PM_TYPE_U32)
Derived metric initialization from $PCP_DERIVED_CONFIG
pmLoadDerivedConfig("TMP.config")
pmRegisterDerived: global metric[2] gcov.a = ( 1 / sample.mirage_longlong ) / (1 / sample.mirage )
pmRegisterDerived: global metric[3] gcov.b = ( 1 / sample.mirage ) / (1 / sample.mirage_longlong )
pmRegisterDerived: global metric[4] gcov.c = sample.seconds + disk.all.total
pmRegisterDerived: global metric[5] gcov.d = sample.ulong.count.base - sample.ulong.count.kilo
pmRegisterDerived: global metric[6] gcov.e = sample.ulong.count.mega - sample.ulong.count.kilo
pmRegisterDerived: global metric[7] gcov.f = 2*(1/sample.ulong.count.base) - (1/sample.ulong.count.kilo)
pmRegisterDerived: global metric[8] gcov.g = 2*(1/sample.ulong.count.mega) - (1/sample.ulong.count.kilo)
__dmopencontext(->ctx 0) called, 9 derived metrics
__dmgetpmid: metric "gcov.a" -> PMID 511.0.3
__dmtraverse: name="gcov" added "gcov.a"
__dmgetpmid: metric "gcov.b" -> PMID 511.0.4
__dmtraverse: name="gcov" added "gcov.b"
__dmgetpmid: metric "gcov.c" -> PMID 511.0.5
Semantic error: derived metric gcov.c: sample.seconds + disk.all.total: Dimensions are not the same
__dmbind: check_expr failed for metric[4] gcov.c
Derived metric expr dump from <addr-0>...
expr node <addr-0> type=PLUS left=<addr-1> right=<addr-2> save_last=0
    PMID: PM_ID_NULL (29.0.2 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: sec
expr node <addr-1> type=NAME left=(nil) right=(nil) save_last=0 [sample.seconds] primary=0
    PMID: 29.0.2 (29.0.2 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: sec
expr node <addr-2> type=NAME left=(nil) right=(nil) save_last=0 [disk.all.total] primary=0
    PMID: DISK.ALL.TOTAL (DISK.ALL.TOTAL from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
__dmtraverse: name="gcov", omitting invalid child gcov.c [511.0.5]
__dmgetpmid: metric "gcov.d" -> PMID 511.0.6
__dmtraverse: name="gcov" added "gcov.d"
__dmgetpmid: metric "gcov.e" -> PMID 511.0.7
__dmtraverse: name="gcov" added "gcov.e"
__dmgetpmid: metric "gcov.f" -> PMID 511.0.8
__dmtraverse: name="gcov" added "gcov.f"
__dmgetpmid: metric "gcov.g" -> PMID 511.0.9
__dmtraverse: name="gcov" added "gcov.g"
__dmgetpmid: metric "gcov.a" -> PMID 511.0.3
__dmgetpmid: metric "gcov.b" -> PMID 511.0.4
__dmgetpmid: metric "gcov.d" -> PMID 511.0.6
__dmgetpmid: metric "gcov.e" -> PMID 511.0.7
__dmgetpmid: metric "gcov.f" -> PMID 511.0.8
__dmgetpmid: metric "gcov.g" -> PMID 511.0.9

gcov.a
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: none

gcov.b
    Data Type: double  InDom: 29.3 0x7400003
    Semantics: instant  Units: none

gcov.d
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count x 10^3 / Mbyte

gcov.e
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count x 10^6 / Mbyte

gcov.f
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: Mbyte / count x 10^3

gcov.g
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: Mbyte / count x 10^6

gcov.d
    value 0

gcov.e
    value 0

gcov.f
    value 2.380952380952381e-05

gcov.g
    value 0.0238095238095238
