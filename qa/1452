#!/bin/sh
# PCP QA Test No. 1452
# Exercise the BPF PMDA CO-RE biosnoop module - install, remove and values.
#
# Copyright (c) 2022 Sohaib Mohamed.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bpf

_pmdabpf_check
_pmdabpf_require_kernel_version 5 0
_pmdabpf_require_libbpf_version 0 7

# https://github.com/iovisor/bcc/issues/4261
ksyms=/proc/kallsyms
test -f $ksyms || _notrun "No $ksyms kernel file available"

# the biosnoop BPF module uses kprobes that might attach to kernel symbols
# that are not present ... add to the list below as required
#
for symbol in blk_account_io_start
do
    grep " T $symbol\$" /proc/kallsyms >/dev/null || _notrun "kernel does not contain required $symbol symbol"
done

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal

cat <<EOF >$tmp.conf
# Installed by PCP QA test $seq on `date`
[biosnoop.so]
enabled=true
EOF
_pmdabpf_tryload $tmp.conf

_cleanup()
{
    _pmdabpf_cleanup
    $sudo rm -rf $tmp $tmp.*
}

_prepare_pmda bpf
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
_pmdabpf_install $tmp.conf
_pmdabpf_wait_for_metric

# Generate system activity for the CO-RE biosnoop module
dd if=/dev/zero of=$tmp.dd count=5000 >/dev/null 2>&1
sync $tmp.dd

echo "=== report metric values for comm ==="
pminfo -dfmtT bpf.biosnoop.comm 2>&1 | tee -a $seq_full \
| _value_filter_any

echo "=== report metric values for pid ==="
pminfo -dfmtT bpf.biosnoop.pid 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for disk ==="
pminfo -dfmtT bpf.biosnoop.disk 2>&1 | tee -a $seq_full \
| _value_filter_any

echo "=== report metric values for rwbs ==="
pminfo -dfmtT bpf.biosnoop.rwbs 2>&1 | tee -a $seq_full \
| _value_filter_any

echo "=== report metric values for sector ==="
pminfo -dfmtT bpf.biosnoop.sector 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for bytes ==="
pminfo -dfmtT bpf.biosnoop.bytes 2>&1 | tee -a $seq_full \
| _value_filter_nonzero

echo "=== report metric values for lat ==="
pminfo -dfmtT bpf.biosnoop.lat 2>&1 | tee -a $seq_full \
| _value_filter_any

_pmdabpf_remove

status=0
exit
