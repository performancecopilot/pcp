#!/bin/sh
# PCP QA Test No. 852
# Exercise pmdaproc per-process per-thread metric extraction.
#
# Copyright (c) 2016 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

pminfo proc.nprocs >/dev/null 2>&1 || _notrun "proc PMDA not installed"
[ $PCP_PLATFORM = linux ] || _notrun "Linux proc test, only works with Linux"

status=1	# failure is the default!
trap "cd $here; rm -rf $tmp $tmp.*; exit \$status" 0 1 2 3 15

_filter()
{
    cat >$tmp.out
    grep -v 'inst \[' $tmp.out
    sed -n -e 's/inst \[[0-9][0-9]*/inst [N/p' $tmp.out \
    | LC_COLLATE=POSIX sort
}

# real QA test starts here
root=$tmp.root
export PROC_STATSPATH=$root
export PROC_PAGESIZE=4096
export PROC_THREADS=1
export PROC_HERTZ=100
pmda=$PCP_PMDAS_DIR/proc/pmda_proc.so,proc_init
metrics="proc.psinfo.rss proc.psinfo.pid proc.psinfo.psargs"

for tgz in $here/linux/procpid-*-root-*.tgz
do
    cd $here
    $sudo rm -fr $root
    mkdir $root || _fail "root in use when processing $tgz"
    cd $root
    tar xzf $tgz
    base=`basename $tgz`

    for metric in $metrics
    do
	echo; echo "== Fetching per-thread $metric metric - $base"
	pminfo -L -K clear -K add,3,$pmda -f $metric | _filter
    done
done

# success, all done
status=0
exit
