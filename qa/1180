#!/bin/sh
# PCP QA Test No. 1180
# test pmlogger_daily_report(1)
#
# NOTE: if any of pmrep :sar-FOO configs get changed, then it's likely
# the qualified output for this test will need to be remade.
#
# Copyright (c) 2018 Red Hat.  All Rights Reserved.
#
# check-group-include: pmrep

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.python

$python -c "from pcp import pmapi" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "python pcp pmapi module not installed"

[ -x $PCP_BINADM_DIR/pmlogger_daily_report ] || \
	_notrun pmlogger_daily_report not installed

[ "$PCP_PLATFORM" = freebsd ] && _notrun "Insufficient metrics on FreeBSD to exercise sar-like reporting"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
	-e '/^Host: /s/: .*/: .../' \
	-e '/^Report created: /s/: .*/: .../' \
	-e "s@$tmp@TMP@g" \
    # end
}

# real QA test starts here
mkdir -p $tmp
$sudo chown pcp:pcp $tmp
if xzcat archives/crontab-sar-report.tar.xz >$tmp.tar
then
    :
else
    echo "Arrgh: xzcat failed"
    exit
fi
if $sudo -u pcp tar xf $tmp.tar -C $tmp
then
    :
else
    echo "Arrgh: tar failed"
    exit
fi
ls -lR $tmp/crontab-sar-report* >>$seq_full
$sudo -u pcp $PCP_BINADM_DIR/pmlogger_daily_report -A -a $tmp/crontab-sar-report -l $tmp/LOG -f $tmp/OUT -t 30m || exit
[ -f $tmp/LOG ] && $sudo cat $tmp/LOG >> $seq_full
$sudo cat $tmp/OUT | tee -a $seq_full | _filter

# optional stuff if your test has verbose output to help resolve problems
echo
echo "If failure, check $seq.full"

# success, all done
status=0
exit
