#!/bin/sh
# PCP QA Test No. 1070
# Exercise pmrep csv / sheet2pcp / pmrep csv roundtrip compatibility.
#
# Copyright (c) 2016 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.check
. ./common.setup
[ -f common.python ] || _notrun "No python bindings installed"

. ./common.python

$python -c "from pcp import pmapi" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "python pcp pmapi module not installed"
$python -c "from collections import OrderedDict" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "python collections OrderedDict module not installed"
which pmrep >/dev/null 2>&1 || _notrun "pmrep not installed"

perl -e "use XML::TokeParser" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "perl XML::TokeParser module not installed"
perl -e "use Spreadsheet::Read" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "perl Spreadsheet::Read module not installed"
which sheet2pcp >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "sheet2pcp not installed"
[ -f ${PCP_LIB_DIR}/libpcp_import.${DSO_SUFFIX} ] || \
	_notrun "No support for libpcp_import"
perl -e "use PCP::LogImport" 2>/dev/null || \
	_notrun "Perl PCP::LogImport module is not installed"
perl -e "use Text::CSV_XS" 2>/dev/null || \
	_notrun "Perl Text::CSV_XS module is not installed"

status=1        # failure is the default!
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

_path_filter()
{
    sed \
        -e "s#$here#QAPATH#g" \
    #end
}

#  timezone: :Australia/Melbourne (reporting, current is AEDT-11)
#  this is not deterministic .... ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_archive_filter()
{
    sed \
	-e '/timezone/s/ (reporting.*)//' \
    #end
}

log="--archive $here/archives/20130706 -z -O 30m"

# real QA test starts here
echo "== pmrep csv / sheet2pcp / pmrep csv roundtrip compatibility"
echo "Test data to be used:"
pmrep -s 5 -t 2 $log -p -o stdout -x hinv.machine mem.util.used kernel.all.sysfork hinv.cpu.clock 2>&1 \
| _path_filter \
| _archive_filter
pmrep -s 5 -t 2 $log -p -o csv -r -F 1070.csv hinv.machine mem.util.used kernel.all.sysfork hinv.cpu.clock 2>&1 \
| _archive_filter
sheet2pcp 1070.csv 1070.map 1070-archive
pmrep -s 5 -t 2 -a 1070-archive -z -p -o csv -r -F 1070.csv2 hinv.machine mem.util.used kernel.all.sysfork hinv.cpu.clock 2>&1 \
| _archive_filter
echo "Diff of CSV files start (no output expected)"
diff 1070.csv 1070.csv2
echo "Diff of CSV files end"
echo "Test data from temp archive:"
pmrep -s 5 -t 2 -a 1070-archive -z -p -o stdout -x hinv.machine mem.util.used kernel.all.sysfork hinv.cpu.clock 2>&1 \
| _archive_filter
rm -f 1070-archive* 1070.csv*

# success, all done
echo "== done"
status=0
exit
