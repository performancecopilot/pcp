#
# Common shell routines for testing the OpenMetrics PMDA.
#
# Copyright (c) 2017,2019 Red Hat.
#

# get standard environment, filters and checks
. ./common.python

$python -c "import requests" >/dev/null 2>&1
[ $? -eq 0 ] || _notrun "python requests module not installed"

CONFIG_DIR=$PCP_PMDAS_DIR/openmetrics/config.d

_pmdaopenmetrics_check()
{
    [ -f $PCP_PMDAS_DIR/openmetrics/pmdaopenmetrics.python ] || return 1
    [ -f $here/openmetrics/openmetrics_endpoint.python ] || return 1
    return 0
}

_have_python266()
{
    __v=`python -V 2>&1 | awk '{print $NF}'`
    [ "$__v" = "2.6.6" ] && return 0
    return 1
}

_pmdaopenmetrics_remove()
{
    echo
    echo "=== remove openmetrics agent ===" | tee -a $seq_full
    cd $PCP_PMDAS_DIR/openmetrics
    $sudo ./Remove >$tmp.out 2>&1
    cat $tmp.out >>$seq_full
    _filter_pmda_remove <$tmp.out \
    | $PCP_AWK_PROG '
BEGIN		{ state = 0 }
/ Xferd / || / XXffeerrdd / { state = 1; next }
state == 1 && /^\[/	{ state = 0 }
state == 0	{ print }' \
    | sed \
	-e '/ Info: /d' \
    # end
}

_pmdaopenmetrics_install()
{
    # start from known starting points
    cd $PCP_PMDAS_DIR/openmetrics
    $sudo ./Remove >/dev/null 2>&1
    _service pmcd stop 2>&1 | _filter_pcp_stop

    echo
    echo "=== openmetrics agent installation ==="
    $sudo ./Install </dev/null >$tmp.out 2>&1
    cat $tmp.out >>$seq_full
}

_pmdaopenmetrics_save_config()
{
    $sudo rm -rf $CONFIG_DIR.$seq
    $sudo mv $CONFIG_DIR $CONFIG_DIR.$seq
    $sudo mkdir -p $CONFIG_DIR
    $sudo chmod 777 $CONFIG_DIR
    for __f in $PCP_VAR_DIR/config/pmda/144.*.py; do
	[ -f "$__f" ] && $sudo mv -f $__f $__f.$seq
    done
    # turn off all pmloggers when running open metrics tests
    _stop_auto_restart pmlogger
    _service pmlogger stop 2>&1 | _filter_pcp_stop
}

_pmdaopenmetrics_restore_config()
{
    if [ -d $CONFIG_DIR.$seq ]; then
	$sudo rm -rf $CONFIG_DIR
	$sudo mv $CONFIG_DIR.$seq $CONFIG_DIR
	$sudo chmod 755 $CONFIG_DIR
    fi
    $sudo rm -f $PCP_VAR_DIR/config/pmda/144.*.py
    for __f in $PCP_VAR_DIR/config/pmda/144.*.py.$seq; do
	[ -f "$__f" ] && $sudo mv -f $__f `echo $__f | sed -e "s/\.$seq//"`
    done
}

_pmdaopenmetrics_cleanup()
{
    echo "=== openmetrics PMDA log ===" >>$seq_full
    if [ -f $PCP_LOG_DIR/pmcd/openmetrics.log ]
    then
	cat $PCP_LOG_DIR/pmcd/openmetrics.log >>$seq_full
    else
	echo "Error: PMDA log file is missing" >>$seq_full
    fi

    _pmdaopenmetrics_restore_config
    # note: _restore_auto_restart pmcd done in _cleanup_pmda()
    _cleanup_pmda openmetrics
    # restart all pmloggers after running open metrics tests
    _restore_auto_restart pmlogger
    _service pmlogger restart 2>&1 | _filter_pcp_start
    _wait_for_pmlogger
}

# wait for the PMDA to dynamically create a named metric (or subtree)
_pmdaopenmetrics_wait_for_metric()
{
    __metric="$1"
    [ -z "$__metric" ] && __metric=openmetrics.control.calls

    # wait for the requested metric to appear in the pmns
    __i=0
    while [ $__i -lt 30 ]
    do
    	if pminfo $__metric >/dev/null 2>&1
	then
	    # all good
	    return 0
	fi
	sleep 1
	__i=`expr $__i + 1`
    done

    # timeout, fail
    echo _pmdaopenmetrics_wait_for_metric FAILED for metric $__metric
    return 1
}
