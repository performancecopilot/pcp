#!/bin/sh
# PCP QA Test No. 1116
# Exercise the BCC PMDA bioperpid module - install, remove and values.
#
# Copyright (c) 2018 Andreas Gerstmayr.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bcc

_pmdabcc_check
_bcc_check_ArgString || _notrun "bcc is broken (ArgString bug) on this platform"

# the bioperpid BCC module uses kprobes that might attach to kernel symbols
# that are not present ... add to the list below as required
#
for symbol in blk_account_io_done
do
    grep " T $symbol\$" /proc/kallsyms >/dev/null || _notrun "kernel does not contain required $symbol symbol"
done

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal

write_size=`expr 20 \* 1024 \* 1024` # number of bytes to write into testfile
out_file="$PCP_TMPFILE_DIR/pcp-qa-$seq" # block device required here (no tmpfs)

_value_filter()
{
    cat > $tmp.value
    echo === input to _value_filter >>$seq_full
    cat $tmp.value >> $seq_full

    _values=`awk '/inst.*value/ {print $NF}' $tmp.value`
    for value in $_values
    do
        if _within_tolerance "Expecting ${write_size} +- 20%" $value ${write_size} 20%; then
            echo "found value ${write_size} +- 20%"
            break
	else
	    echo "failed: $value not in range `expr 80 \* ${write_size} / 100` ... `expr 120 \* ${write_size} / 100`" >>$seq_full
        fi
    done
}

_cleanup()
{
    _pmdabcc_cleanup
    $sudo rm -f "$out_file"
}

cat <<EOF >$tmp.conf
# Installed by PCP QA test $seq on `date`
[pmda]
modules = bioperpid
prefix = bcc.
[bioperpid]
module = bioperpid
cluster = 1
EOF

_pmdabcc_try_compile $tmp.conf

_prepare_pmda bcc
trap "_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
_pmdabcc_install <$tmp.conf
_pmdabcc_wait_for_metric

# Generate system activity for the BCC bioperpid module
dd if=/dev/zero of=${out_file} bs=${write_size} count=1 oflag=direct 2>/dev/null

echo "=== report metric values ==="
pminfo -dfmtT bcc.proc.io.total 2>&1 | tee -a $seq_full \
| _value_filter

_pmdabcc_remove

status=0
exit
