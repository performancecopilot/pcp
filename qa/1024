#!/bin/sh
# PCP QA Test No. 1024
# Exercise Linux PMDA block driver metrics.
#
# Copyright (c) 2015 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ $PCP_PLATFORM = linux ] || _notrun "Linux-specific block dev metrics testing"

status=1	# failure is the default!
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

# instance assignments (internal ids) are not deterministic
# due to the local indom cache state that is outside the control
# of QA, so map all internal instance ids to N and sort ...
# need to alternate slicing between sort and don't sort blocks
#
_slice_sort_reassemble()
{
    sed \
	-e 's/\([0-9][0-9]*\) or "docker/N or "docker/' \
	-e 's/\([0-9][0-9]*\) or "cciss/N or "cciss/' \
	-e 's/\([0-9][0-9]*\) or "home/N or "home/' \
	-e 's/\([0-9][0-9]*\) or "md/N or "md/' \
	-e 's/\([0-9][0-9]*\) or "sd/N or "sd/' \
	-e 's/\([0-9][0-9]*\) or "sr/N or "sr/' \
	-e 's/\([0-9][0-9]*\) or "vd/N or "vd/' \
	-e 's/\([0-9][0-9]*\) or "rbd/N or "rbd/' \
	-e 's/\([0-9][0-9]*\) or "nbd/N or "nbd/' \
    | $here/src/sortinst
}

# real QA test starts here
root=$tmp.root
export LINUX_STATSPATH=$root
export LINUX_MDADM=/bin/true
pmda=$PCP_PMDAS_DIR/linux/pmda_linux.so,linux_init
metrics=`pminfo -L -K clear -K add,60,$pmda disk.all disk.dev disk.dm disk.md disk.partitions hinv.map.dmname hinv.map.mdname | LC_COLLATE=POSIX sort`

for tgz in $here/linux/blkdev-root-*.tgz
do
    rm -fr $root
    mkdir $root || _fail "root in use when processing $tgz"
    cd $root
    tar xzf $tgz
    base=`basename $tgz`

    echo "== Checking metric values - $base" | tee -a $seq_full
    pminfo -L -K clear -K add,60,$pmda -f $metrics 2>&1 \
    | tee -a $seq_full \
    | _slice_sort_reassemble
    ( echo && echo "== done" && echo ) | tee -a $seq_full
    cd $here
done

# success, all done
status=0
exit
