#!/bin/sh
# PCP QA Test No. 740
# Exercise transfer of pid, uid, gid from client to PMDA
# when using Unix domain sockets.
#
# Copyright (c) 2013 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_get_libpcp_config
$unix_domain_sockets || _notrun "No unix domain socket support available"

status=1	# failure is the default!
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

rm -f $seq.out
case $PCP_PLATFORM
in
    darwin)
	ln $seq.out.darwin $seq.out || exit 1
	;;
    *)
	ln $seq.out.default $seq.out || exit 1
	;;
esac

_filter()
{
    grep -i attribute | \
    sed \
	-e "s/processid=$pid/processid=PID/" \
	-e '/processid=/{
/processid=PID/!d
}' \
	-e "s/groupid=$gid/groupid=GID/" \
	-e '/groupid=/{
/groupid=GID/!d
}' \
	-e "s/userid=$uid/userid=UID/" \
	-e '/userid=/{
/userid=UID/!d
}' \
	-e '/ctx=[0-9][0-9]*/s//ctx=N/' \
	-e '/pmdasample([0-9][0-9]*)/s//pmdasample(PID)/' \
	-e 's/^\[[A-Z].. [A-Z]..  *[0-9][0-9]* ..:..:..]/[DATETIME]/'
}

# real QA test starts here
if ! _service pmcd restart >/dev/null 2>&1; then _exit 1; fi
_wait_for_pmcd || _exit 1

# store to enable verbose attribute diagnostics
authdbg=`pmdbg -o -l | grep DBG_TRACE_AUTH | awk '{ print $2 }'`
pmstore sample.control $authdbg

# let pmdasample complete setup
for i in 1 2 3 4 5 6 7 8 9 10
do
    [ -f $PCP_LOG_DIR/pmcd/sample.log ] && break
    pmsleep 0.5
done
pmsleep 0.5

# unix domain fetch (with attribute transfer)
pminfo -h unix: sample.long.one &
pid=$!
uid=`id -u`
gid=`id -g`
wait $!

cat $PCP_LOG_DIR/pmcd/sample.log \
| tee -a $seq_full \
| _filter
pmstore sample.control 0

# success, all done
status=0
exit
