QA output created by 430

# PCP archive logging configuration/control - for qa/430
#
$version=1.1
$PMLOGGER_CHECK_SKIP_JANITOR=yes
#
# 1. Test duplicate directory names;  non-primary and then primary
#
LOCALHOSTNAME	n   n	TMP -c TMP/config
LOCALHOSTNAME	y   n	TMP	-c TMP/config
# 

Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK: [TMP/control:LINE]
Error: Cannot start more than one pmlogger instance for archive directory "TMP"
[dots] logging for host "LOCALHOST" unchanged

# PCP archive logging configuration/control - for qa/430
#
$version=1.1
$PMLOGGER_CHECK_SKIP_JANITOR=yes
#
# 2. Test duplicate directory names ; primary and then non-primary
#
LOCALHOSTNAME	y   n	TMP	-c TMP/config
LOCALHOSTNAME	n   n	TMP	-c TMP/config
# 

Restarting primary pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK: [TMP/control:LINE]
Error: Cannot start more than one pmlogger instance for archive directory "TMP"
[dots] logging for host "LOCALHOST" unchanged

# PCP archive logging configuration/control - for qa/430
#
$version=1.1
$PMLOGGER_CHECK_SKIP_JANITOR=yes
#
# 3. Test directory names which are subnames 
#
LOCALHOSTNAME	y   n   TMP.subname  -c TMP/config
LOCALHOSTNAME	n   n   TMP -c TMP/config
# 

Restarting primary pmlogger for host "LOCALHOST" [dots] [process PID]  done
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done

# PCP archive logging configuration/control - for qa/430
#
$version=1.1
$PMLOGGER_CHECK_SKIP_JANITOR=yes
#
# 4. Test when have hosts which are subnames
#
LOCALHOST	y   n   TMP/LOCALHOST  -c TMP/config
LOCALHOSTsuper	n   n   TMP/LOCALHOSTsuper -c TMP/config
#

PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP/LOCALHOST) for PCP archive files
Restarting primary pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP/LOCALHOSTsuper) for PCP archive files
Restarting pmlogger for host "LOCALHOSTsuper" [dots] [process PID]  done

# PCP archive logging configuration/control - for qa/430
#
$version=1.1
$PMLOGGER_CHECK_SKIP_JANITOR=yes
#
# 5. Putting all the cases together
#
LOCALHOSTNAME	y   n   TMP.1 -c TMP/config
LOCALHOSTNAME	n   n   TMP.2 -c TMP/config
LOCALHOST	        n   n   TMP.3 -c TMP/config
LOCALHOST	        n   n   TMP.4 -c TMP/config
LOCALHOSTsuper	        n   n   TMP.5 -c TMP/config
LOCALHOSTsuper	        n   n   TMP.6 -c TMP/config

PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.1) for PCP archive files
Restarting primary pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.2) for PCP archive files
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.3) for PCP archive files
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.4) for PCP archive files
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.5) for PCP archive files
Restarting pmlogger for host "LOCALHOSTsuper" [dots] [process PID]  done
PMLOGGER.CHECK [TMP/control:LINE]
Warning: creating directory (TMP.6) for PCP archive files
Restarting pmlogger for host "LOCALHOSTsuper" [dots] [process PID]  done

Restart tests while other pmloggers are running ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
PCP_TMP_DIR/pmlogger/primary: missing?
Contents of PCP_TMP_DIR/pmlogger
...
Restarting primary pmlogger for host "LOCALHOST" [dots] [process PID]  done
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Doing compression [dots]
End: ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
primary pmlogger process PID identified, OK
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Doing compression [dots]
End: ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
primary pmlogger process PID identified, OK
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Doing compression [dots]
End: ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
primary pmlogger process PID identified, OK
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Restarting pmlogger for host "LOCALHOST" [dots] [process PID]  done
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Doing compression [dots]
End: ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
primary pmlogger process PID identified, OK
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Restarting pmlogger for host "LOCALHOSTsuper" [dots] [process PID]  done
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Doing compression [dots]
End: ...

Kill off one pmlogger ...
Check ...
Start: ...
[TMP/control:LINE] host="$version=1.1" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="$PMLOGGER_CHECK_SKIP_JANITOR=yes" primary="" socks="" dir="" args=""
[TMP/control:LINE] host="LOCALHOSTNAME" primary="y" socks="n" dir="TMP.1" args="-c TMP/config"
Checking for: pmlogger -P -h LOCALHOST [dots] in TMP.1 ...
Acquired lock:
...
PID PMLOGGER.CHECK
primary pmlogger process PID identified, OK
[TMP/control:LINE] host="LOCALHOSTNAME" primary="n" socks="n" dir="TMP.2" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.2 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.3" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.3 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOST" primary="n" socks="n" dir="TMP.4" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOST [dots] in TMP.4 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.5" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.5 ...
Acquired lock:
...
PID PMLOGGER.CHECK
[TMP/control:LINE] host="LOCALHOSTsuper" primary="n" socks="n" dir="TMP.6" args="-c TMP/config"
Checking for: pmlogger -h LOCALHOSTsuper [dots] in TMP.6 ...
Acquired lock:
...
PID PMLOGGER.CHECK
Restarting pmlogger for host "LOCALHOSTsuper" [dots] [process PID]  done
Doing compression [dots]
End: ...

Cleaning up
