QA output created by 1533
== Valgrind checking metric descriptors and values
=== std out ===

zfs.abd.linear_cnt PMID: 153.1.1 [number of linear ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of linear ABDs which are currently allocated, excluding
ABDs which don't own their data (for instance the ones which were
allocated through abd_get_offset() and abd_get_from_buf()). If an
ABD takes ownership of its buf then it will become tracked.
    value 153

zfs.abd.linear_data_size PMID: 153.1.2 [size of linear ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Amount of data stored in all linear ABDs tracked by linear_cnt 
    value 153

zfs.abd.scatter.chunk_waste PMID: 153.1.5 [size of scatter ABD chunk waste]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The amount of space wasted at the end of the last chunk across all
scatter ABDs tracked by scatter_cnt.
    value 153

zfs.abd.scatter.cnt PMID: 153.1.3 [number of scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of scatter ABDs which are currently allocated, excluding
ABDs which don't own their data (for instance the ones which were
allocated through abd_get_offset()).
    value 153

zfs.abd.scatter.data_size PMID: 153.1.4 [size of scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Amount of data stored in all scatter ABDs tracked by scatter_cnt 
    value 153

zfs.abd.scatter.order_0 PMID: 153.1.6 [number of 0th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 0th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_1 PMID: 153.1.7 [number of 1st order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 1st order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_10 PMID: 153.1.16 [number of 10th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 10th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_2 PMID: 153.1.8 [number of 2nd order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 2nd order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_3 PMID: 153.1.9 [number of 3rd order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 3rd order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_4 PMID: 153.1.10 [number of 4th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 4th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_5 PMID: 153.1.11 [number of 5th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 5th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_6 PMID: 153.1.12 [number of 6th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 6th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_7 PMID: 153.1.13 [number of 7th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 7th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_8 PMID: 153.1.14 [number of 8th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 8th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.order_9 PMID: 153.1.15 [number of 9th order scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of compound allocations of the 9th order.  These
allocations are spread over all currently allocated ABDs, and
act as a measure of memory fragmentation.
    value 153

zfs.abd.scatter.page_alloc_retry PMID: 153.1.19 [number of scatter ABD allocation retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The total number of retries encountered when attempting to
allocate the pages to populate the scatter ABD.
    value 153

zfs.abd.scatter.page_multi_chunk PMID: 153.1.17 [number of multi-chunk scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of scatter ABDs which contain multiple chunks.
ABDs are preferentially allocated from the minimum number of
contiguous multi-page chunks, a single chunk is optimal.
    value 153

zfs.abd.scatter.page_multi_zone PMID: 153.1.18 [number of split scatter ABDs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of scatter ABDs which are split across memory zones.
ABDs are preferentially allocated using pages from a single zone.
    value 153

zfs.abd.scatter.sg_table_retry PMID: 153.1.20 [number of scatter ABD SG table allocation retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The total number of retries encountered when attempting to
allocate the SG table for an ABD.
    value 153

zfs.abd.struct_size PMID: 153.1.0 [size of allocated ABD structs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Amount of memory occupied by all of the abd_t struct allocations 
    value 153

zfs.arc.abd_chunk_waste_size PMID: 153.0.115 [size of scattered ABD chunks in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
This includes space wasted by all scatter ABD's, not just those allocated
by the ARC.  But the vast majority of scatter ABD's come from the ARC,
because other users are very short-lived.
    value 153

zfs.arc.access_skip PMID: 153.0.16 [ARC buffers skipped]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of buffers skipped when updating the access state due to the
header having already been released after acquiring the hash lock.
    value 153

zfs.arc.anon_evictable_data PMID: 153.0.43 [size of evictable anon data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that meet the
following criteria: backing buffers of type ARC_BUFC_DATA,
residing in the arc_anon state, and are eligible for eviction
(e.g. have no outstanding holds on the buffer).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.anon_evictable_metadata PMID: 153.0.44 [size of evictable anon metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that meet the
following criteria: backing buffers of type ARC_BUFC_METADATA,
residing in the arc_anon state, and are eligible for eviction
(e.g. have no outstanding holds on the buffer).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.anon_size PMID: 153.0.42 [size of buffers in anon state]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Total number of bytes consumed by ARC buffers residing in the
arc_anon state. This includes *all* buffers in the arc_anon
state; e.g. data, metadata, evictable, and unevictable buffers
are all included in this value.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.async_upgrade_sync PMID: 153.0.92 [ARC async upgrade sync]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
This is a sync read that needs to wait for an in-flight async read. Request that the
zio have its priority upgraded.
    value 153

zfs.arc.bonus_size PMID: 153.0.41 [bytes consumed by bonus buffers.]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by bonus buffers.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.c PMID: 153.0.29 [target size of cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
target size of cache
    value 153

zfs.arc.c_max PMID: 153.0.31 [max target cache size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
max target cache size
    value 153

zfs.arc.c_min PMID: 153.0.30 [min target cache size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
min target cache size
    value 153

zfs.arc.cached_only_in_progress PMID: 153.0.114 [ARC cached only in progress]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC cached only in progress
    value 153

zfs.arc.compressed_size PMID: 153.0.33 [compressed size of entire ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of compressed bytes stored in the arc_buf_hdr_t's b_pabd.
Note that the compressed bytes may match the uncompressed bytes
if the block is either not compressed or compressed arc is disabled.
    value 153

zfs.arc.data_size PMID: 153.0.37 [size of ARC buffers]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers of type equal to
ARC_BUFC_DATA. This is generally consumed by buffers backing
on disk user data (e.g. plain file contents).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.dbuf_size PMID: 153.0.39 [size of dbufs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by dmu_buf_impl_t objects.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.deleted PMID: 153.0.14 [ARC deletions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC deletions
    value 153

zfs.arc.demand.data_hits PMID: 153.0.2 [ARC demand data hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC demand data hits
    value 153

zfs.arc.demand.data_misses PMID: 153.0.3 [ARC demand data misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Demand misses mean that programs are waiting on disk IO.
    value 153

zfs.arc.demand.hit_predictive_prefetch PMID: 153.0.93 [ARC demand hit predictive prefetch number]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC demand hit predictive prefetch number
    value 153

zfs.arc.demand.hit_prescient_prefetch PMID: 153.0.94 [ARC demand hit prescient prefetch number]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC demand hit prescient prefetch number
    value 153

zfs.arc.demand.metadata_hits PMID: 153.0.4 [ARC demand metadata hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC demand metadata hits
    value 153

zfs.arc.demand.metadata_misses PMID: 153.0.5 [ARC demand metadata misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC demand metadata misses
    value 153

zfs.arc.dnode_limit PMID: 153.0.89 [ARC dnode limit]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC dnode limit
    value 153

zfs.arc.dnode_size PMID: 153.0.40 [size of dnodes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by dnode_t objects.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.evict.l2_cached PMID: 153.0.19 [ARC evicted data cached in L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC evicted data cached in L2ARC
    value 153

zfs.arc.evict.l2_eligible PMID: 153.0.20 [ARC evicted data eligible for L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC evicted data eligible for L2ARC
    value 153

zfs.arc.evict.l2_ineligible PMID: 153.0.21 [ARC evicted data not eligible for L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC evicted data not eligible for L2ARC
    value 153

zfs.arc.evict.l2_skip PMID: 153.0.22 [ARC evicted data not cached in L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC evicted data not cached in L2ARC
    value 153

zfs.arc.evict.not_enough PMID: 153.0.18 [ARC buffers that could not be evicted]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times arc_evict_state() was unable to evict enough
buffers to reach its target amount.
    value 153

zfs.arc.evict.skip PMID: 153.0.17 [ARC evicted buffers skipped]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of buffers skipped because they have I/O in progress, are
indirect prefetch buffers that have not lived long enough, or are
not from the spa we're trying to evict from.
    value 153

zfs.arc.hash.chain_max PMID: 153.0.27 [maximum number of chains in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: count
Help:
maximum number of chains in ARC
    value 153

zfs.arc.hash.chains PMID: 153.0.26 [number of hash chains in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count
Help:
number of hash chains in ARC
    value 153

zfs.arc.hash.collisions PMID: 153.0.25 [number of hash collisions in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of hash collisions in ARC
    value 153

zfs.arc.hash.elements PMID: 153.0.23 [number of hash elements in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count
Help:
number of hash elements in ARC
    value 153

zfs.arc.hash.elements_max PMID: 153.0.24 [maximum number of has elements in ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: count
Help:
maximum number of has elements in ARC
    value 153

zfs.arc.hdr_size PMID: 153.0.36 [size of internal ARC structures]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by internal ARC structures necessary
for tracking purposes; these structures are not actually
backed by ARC buffers. This includes arc_buf_hdr_t structures
(allocated via arc_buf_hdr_t_full and arc_buf_hdr_t_l2only
caches), and arc_buf_t structures (allocated via arc_buf_t
cache).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.hits PMID: 153.0.0 [ARC hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times a data block was in the ARC DRAM cache and returned.
    value 153

zfs.arc.l2.abort_lowmem PMID: 153.0.71 [number of L2ARC low memory aborts]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of L2ARC low memory aborts
    value 153

zfs.arc.l2.asize PMID: 153.0.75 [L2ARC aligned size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
L2ARC aligned size
    value 153

zfs.arc.l2.cksum_bad PMID: 153.0.72 [number of L2ARC bad checksum errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of L2ARC bad checksum errors
    value 153

zfs.arc.l2.data_to_meta_ratio PMID: 153.0.102 [L2ARC data to metadata ratio]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC data to metadata ratio
    value 153

zfs.arc.l2.evict_l1cached PMID: 153.0.69 [L2ARC evictions of L1-cached data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC evictions of L1-cached data
    value 153

zfs.arc.l2.evict_lock_retry PMID: 153.0.67 [number of L2ARC evict lock retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of L2ARC evict lock retries
    value 153

zfs.arc.l2.evict_reading PMID: 153.0.68 [L2ARC evictions upon reading]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC evictions upon reading
    value 153

zfs.arc.l2.feeds PMID: 153.0.59 [L2ARC feeds]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC feeds
    value 153

zfs.arc.l2.free_on_write PMID: 153.0.70 [size of L2ARC free on write data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
size of L2ARC free on write data
    value 153

zfs.arc.l2.hdr_size PMID: 153.0.76 [Size of L2ARC internal data structures]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Size of L2ARC internal data structures
    value 153

zfs.arc.l2.hits PMID: 153.0.57 [L2ARC hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC hits
    value 153

zfs.arc.l2.io_error PMID: 153.0.73 [number of L2ARC IO errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of L2ARC IO errors
    value 153

zfs.arc.l2.log.blk_asize PMID: 153.0.100 [L2ARC log block aligned size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
L2ARC log block aligned size
    value 153

zfs.arc.l2.log.blk_avg_asize PMID: 153.0.99 [L2ARC log block average size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
L2ARC log block average size
    value 153

zfs.arc.l2.log.blk_count PMID: 153.0.101 [L2ARC log block count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC log block count
    value 153

zfs.arc.l2.log.blk_writes PMID: 153.0.98 [L2ARC log block writes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC log block writes
    value 153

zfs.arc.l2.misses PMID: 153.0.58 [L2ARC misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC misses
    value 153

zfs.arc.l2.read_bytes PMID: 153.0.61 [L2ARC bytes read]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
L2ARC bytes read
    value 153

zfs.arc.l2.rebuild.asize PMID: 153.0.110 [aligned size of restored buffers in the L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
aligned size of restored buffers in the L2ARC
    value 153

zfs.arc.l2.rebuild.bufs PMID: 153.0.111 [L2ARC rebuild buffers]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC rebuild buffers
    value 153

zfs.arc.l2.rebuild.bufs_precached PMID: 153.0.112 [L2ARC rebuild buffers prefetched]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC rebuild buffers prefetched
    value 153

zfs.arc.l2.rebuild.cksum_lb_errors PMID: 153.0.107 [L2ARC log block checksum errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC log block checksum errors
    value 153

zfs.arc.l2.rebuild.dh_errors PMID: 153.0.106 [L2ARC device header errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC device header errors
    value 153

zfs.arc.l2.rebuild.io_errors PMID: 153.0.105 [L2ARC rebuild IO errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC rebuild IO errors
    value 153

zfs.arc.l2.rebuild.log_blks PMID: 153.0.113 [L2ARC rebuild log blocks]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC rebuild log blocks
    value 153

zfs.arc.l2.rebuild.lowmem PMID: 153.0.108 [L2ARC low memory errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC low memory errors
    value 153

zfs.arc.l2.rebuild.size PMID: 153.0.109 [logical size of restored buffers in the L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
logical size of restored buffers in the L2ARC
    value 153

zfs.arc.l2.rebuild.success PMID: 153.0.103 [L2ARC rebuild state]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC rebuild state
    value 153

zfs.arc.l2.rebuild.unsupported PMID: 153.0.104 [L2ARC rebuild unsupported]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Attempt to rebuild a device containing no actual dev hdr or containing a header
from some other pool or from another version of persistent L2ARC.
    value 153

zfs.arc.l2.rw_clash PMID: 153.0.60 [L2ARC read/write clashes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
L2ARC read/write clashes
    value 153

zfs.arc.l2.size PMID: 153.0.74 [L2ARC size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
L2ARC size
    value 153

zfs.arc.l2.write_bytes PMID: 153.0.62 [L2ARC bytes written]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
L2ARC bytes written
    value 153

zfs.arc.l2.writes_done PMID: 153.0.64 [number of writes done in L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of writes done in L2ARC
    value 153

zfs.arc.l2.writes_error PMID: 153.0.65 [number of write errors in L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of write errors in L2ARC
    value 153

zfs.arc.l2.writes_lock_retry PMID: 153.0.66 [number of L2ARC write lock retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of L2ARC write lock retries
    value 153

zfs.arc.l2.writes_sent PMID: 153.0.63 [number of writes sent to L2ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of writes sent to L2ARC
    value 153

zfs.arc.loaned_bytes PMID: 153.0.85 [ARC loaned bytes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC loaned bytes
    value 153

zfs.arc.memory.all_bytes PMID: 153.0.80 [ARC all memory]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC all memory
    value 153

zfs.arc.memory.available_bytes PMID: 153.0.82 [ARC available memory]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC available memory
    value 153

zfs.arc.memory.direct_count PMID: 153.0.78 [ARC memory direct count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC memory direct count
    value 153

zfs.arc.memory.free_bytes PMID: 153.0.81 [ARC free memory]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC free memory
    value 153

zfs.arc.memory.indirect_count PMID: 153.0.79 [ARC memory indirect count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC memory indirect count
    value 153

zfs.arc.memory.throttle_count PMID: 153.0.77 [ARC memory throttle count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC memory throttle count
    value 153

zfs.arc.meta_limit PMID: 153.0.88 [ARC metadata buffers limit]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC will evict meta buffers that exceed arc_meta_limit. This
tunable make arc_meta_limit adjustable for different workloads.
    value 153

zfs.arc.meta_max PMID: 153.0.90 [nax size of ARC metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
nax size of ARC metadata
    value 153

zfs.arc.meta_min PMID: 153.0.91 [nin size of ARC metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
nin size of ARC metadata
    value 153

zfs.arc.meta_used PMID: 153.0.87 [ARC metadata buffers used]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC metadata buffers used
    value 153

zfs.arc.metadata_size PMID: 153.0.38 [size of ARC metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers of type equal to
ARC_BUFC_METADATA. This is generally consumed by buffers
backing on disk data that is used for internal ZFS
structures (e.g. ZAP, dnode, indirect blocks, etc).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mfu.evictable_data PMID: 153.0.52 [size of most frequently used evictable data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that are eligible for
eviction, of type ARC_BUFC_DATA, and reside in the arc_mfu
state.
Not updated directly; only synced in arc_kstat_update
    value 153

zfs.arc.mfu.evictable_metadata PMID: 153.0.53 [size of most frequently used evictable metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that are eligible for
eviction, of type ARC_BUFC_METADATA, and reside in the
arc_mfu state.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mfu.ghost_evictable_data PMID: 153.0.55 [size of most frequently used evictable ghost data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes that *would have been* consumed by ARC
buffers that are eligible for eviction, of type
ARC_BUFC_DATA, and linked off the arc_mfu_ghost state.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mfu.ghost_evictable_metadata PMID: 153.0.56 [size of most frequently used evictable ghost metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes that *would have been* consumed by ARC
buffers that are eligible for eviction, of type
ARC_BUFC_METADATA, and linked off the arc_mru_ghost state.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mfu.ghost_hits PMID: 153.0.13 [ARC most frequently used metadata hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC most frequently used metadata hits
    value 153

zfs.arc.mfu.ghost_size PMID: 153.0.54 [size of most frequently used ghost list]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Total number of bytes that *would have been* consumed by ARC
buffers in the arc_mfu_ghost state. See the comment above
arcstat_mru_ghost_size for more details.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mfu.hits PMID: 153.0.12 [ARC most frequently used data hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC most frequently used data hits
    value 153

zfs.arc.mfu.size PMID: 153.0.51 [size of most frequently used data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Total number of bytes consumed by ARC buffers residing in the
arc_mfu state. This includes *all* buffers in the arc_mfu
state; e.g. data, metadata, evictable, and unevictable buffers
are all included in this value.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.misses PMID: 153.0.1 [ARC misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times a data block was not in the ARC DRAM cache. It will 
be read from the L2ARC cache devices (if available and the data is 
cached on them) or the pool disks.
    value 153

zfs.arc.mru.evictable_data PMID: 153.0.46 [size of most recently used evictable data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that meet the
following criteria: backing buffers of type ARC_BUFC_DATA,
residing in the arc_mru state, and are eligible for eviction
(e.g. have no outstanding holds on the buffer).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mru.evictable_metadata PMID: 153.0.47 [size of most recently used evictable metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes consumed by ARC buffers that meet the
following criteria: backing buffers of type ARC_BUFC_METADATA,
residing in the arc_mru state, and are eligible for eviction
(e.g. have no outstanding holds on the buffer).
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mru.ghost_evictable_data PMID: 153.0.49 [size of most recently used evictable ghost data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes that *would have been* consumed by ARC
buffers that are eligible for eviction, of type
ARC_BUFC_DATA, and linked off the arc_mru_ghost state.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mru.ghost_evictable_metadata PMID: 153.0.50 [size of most recently used evictable ghost metadata]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes that *would have been* consumed by ARC
buffers that are eligible for eviction, of type
ARC_BUFC_METADATA, and linked off the arc_mru_ghost state.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mru.ghost_hits PMID: 153.0.11 [ARC most recently used metadata hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC most recently used metadata hits
    value 153

zfs.arc.mru.ghost_size PMID: 153.0.48 [size of most recently used ghost list]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Total number of bytes that *would have been* consumed by ARC
buffers in the arc_mru_ghost state. The key thing to note
here, is the fact that this size doesn't actually indicate
RAM consumption. The ghost lists only consist of headers and
don't actually have ARC buffers linked off of these headers.
Thus, *if* the headers had associated ARC buffers, these
buffers *would have* consumed this number of bytes.
    value 153

zfs.arc.mru.hits PMID: 153.0.10 [ARC most recently used data hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC most recently used data hits
    value 153

zfs.arc.mru.size PMID: 153.0.45 [size of most recently used data]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Total number of bytes consumed by ARC buffers residing in the
arc_mru state. This includes *all* buffers in the arc_mru
state; e.g. data, metadata, evictable, and unevictable buffers
are all included in this value.
Not updated directly; only synced in arc_kstat_update.
    value 153

zfs.arc.mutex_miss PMID: 153.0.15 [ARC mutex miss]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of buffers that could not be evicted because the hash lock
was held by another thread.  The lock may not necessarily be held
by something using the same buffer, since hash locks are shared
by multiple buffers.
    value 153

zfs.arc.need_free PMID: 153.0.95 [ARC bytes to be freed]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC bytes to be freed
    value 153

zfs.arc.no_grow PMID: 153.0.83 [ARC no grow setting]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: count
Help:
ARC no grow setting
    value 153

zfs.arc.overhead_size PMID: 153.0.35 [number of bytes in the arc from arc_buf_t's]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Number of bytes stored in all the arc_buf_t's. This is classified
as "overhead" since this data is typically short-lived and will
be evicted from the arc when it becomes unreferenced unless the
zfs_keep_uncompressed_metadata or zfs_keep_uncompressed_level
values have been set (see comment in dbuf.c for more information).
    value 153

zfs.arc.p PMID: 153.0.28 [target size of MRU]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
target size of MRU
    value 153

zfs.arc.prefetch.data_hits PMID: 153.0.6 [ARC prefetch data hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Prefetch identified a sequential workload, and requested that the data
be cached in the ARC ahead of time by performing ARC accesses for that
data.  As it turned out, the data was already in the ARC - so these
accesses returned as "hits" (and so the prefetch ARC access was not
actually needed).  This happens if cached data is repeatedly read in a
sequential manner.
    value 153

zfs.arc.prefetch.data_misses PMID: 153.0.7 [ARC prefetch data misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Prefetch identified a sequential workload, and requested that the data
be cached in the ARC ahead of time by performing ARC accesses for that data. 
The data was not in the cache already, and so this is a "miss" and the data
is read from disk.  This is normal, and is how prefetch populates the ARC
from disk.
    value 153

zfs.arc.prefetch.metadata_hits PMID: 153.0.8 [ARC prefetch metadata hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC prefetch metadata hits
    value 153

zfs.arc.prefetch.metadata_misses PMID: 153.0.9 [ARC prefetch metadata misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
ARC prefetch metadata misses
    value 153

zfs.arc.prune PMID: 153.0.86 [ARC objects to scan for prune]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC objects to scan for prune
    value 153

zfs.arc.raw_size PMID: 153.0.97 [size of all b_rabd's in entire ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
size of all b_rabd's in entire ARC
    value 153

zfs.arc.size PMID: 153.0.32 [size of ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Not updated directly; only synced in arc_kstat_update
    value 153

zfs.arc.sys_free PMID: 153.0.96 [ARC target system free bytes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC target system free bytes
    value 153

zfs.arc.tempreserve PMID: 153.0.84 [ARC tempreserve space]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
ARC tempreserve space
    value 153

zfs.arc.uncompressed_size PMID: 153.0.34 [uncompressed size of entire ARC]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
Uncompressed size of the data stored in b_pabd. If compressed
arc is disabled then this value will be identical to the stat
above.
    value 153

zfs.dbuf.cache.count PMID: 153.2.0 [number of elements in the dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of elements in the dbuf cache
    value 153

zfs.dbuf.cache.hiwater_bytes PMID: 153.2.5 [high bounds on the dbuf cache size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
high bounds on the dbuf cache size
    value 153

zfs.dbuf.cache.level_0 PMID: 153.2.7 [the distribution of dbufs level 0 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 0 in the cache
    value 153

zfs.dbuf.cache.level_0_bytes PMID: 153.2.19 [the total size of dbufs level 0 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 0 in the cache
    value 153

zfs.dbuf.cache.level_1 PMID: 153.2.8 [the distribution of dbufs level 1 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 1 in the cache
    value 153

zfs.dbuf.cache.level_10 PMID: 153.2.17 [the distribution of dbufs level 10 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 10 in the cache
    value 153

zfs.dbuf.cache.level_10_bytes PMID: 153.2.29 [the total size of dbufs level 10 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 10 in the cache
    value 153

zfs.dbuf.cache.level_11 PMID: 153.2.18 [the distribution of dbufs level 11 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 11 in the cache
    value 153

zfs.dbuf.cache.level_11_bytes PMID: 153.2.30 [the total size of dbufs level 11 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 11 in the cache
    value 153

zfs.dbuf.cache.level_1_bytes PMID: 153.2.20 [the total size of dbufs level 1 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 1 in the cache
    value 153

zfs.dbuf.cache.level_2 PMID: 153.2.9 [the distribution of dbufs level 2 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 2 in the cache
    value 153

zfs.dbuf.cache.level_2_bytes PMID: 153.2.21 [the total size of dbufs level 2 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 2 in the cache
    value 153

zfs.dbuf.cache.level_3 PMID: 153.2.10 [the distribution of dbufs level 3 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 3 in the cache
    value 153

zfs.dbuf.cache.level_3_bytes PMID: 153.2.22 [the total size of dbufs level 3 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 3 in the cache
    value 153

zfs.dbuf.cache.level_4 PMID: 153.2.11 [the distribution of dbufs level 4 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 4 in the cache
    value 153

zfs.dbuf.cache.level_4_bytes PMID: 153.2.23 [the total size of dbufs level 4 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 4 in the cache
    value 153

zfs.dbuf.cache.level_5 PMID: 153.2.12 [the distribution of dbufs level 5 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 5 in the cache
    value 153

zfs.dbuf.cache.level_5_bytes PMID: 153.2.24 [the total size of dbufs level 5 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 5 in the cache
    value 153

zfs.dbuf.cache.level_6 PMID: 153.2.13 [the distribution of dbufs level 6 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 6 in the cache
    value 153

zfs.dbuf.cache.level_6_bytes PMID: 153.2.25 [the total size of dbufs level 6 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 6 in the cache
    value 153

zfs.dbuf.cache.level_7 PMID: 153.2.14 [the distribution of dbufs level 7 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 7 in the cache
    value 153

zfs.dbuf.cache.level_7_bytes PMID: 153.2.26 [the total size of dbufs level 7 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 7 in the cache
    value 153

zfs.dbuf.cache.level_8 PMID: 153.2.15 [the distribution of dbufs level 8 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 8 in the cache
    value 153

zfs.dbuf.cache.level_8_bytes PMID: 153.2.27 [the total size of dbufs level 8 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 8 in the cache
    value 153

zfs.dbuf.cache.level_9 PMID: 153.2.16 [the distribution of dbufs level 9 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
the distribution of dbufs level 9 in the cache
    value 153

zfs.dbuf.cache.level_9_bytes PMID: 153.2.28 [the total size of dbufs level 9 in the cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
the total size of dbufs level 9 in the cache
    value 153

zfs.dbuf.cache.lowater_bytes PMID: 153.2.4 [low bounds on the dbuf cache size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
low bounds on the dbuf cache size
    value 153

zfs.dbuf.cache.size_bytes PMID: 153.2.1 [size of the dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
size of the dbuf cache
    value 153

zfs.dbuf.cache.size_bytes_max PMID: 153.2.2 [max size of the dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
max size of the dbuf cache
    value 153

zfs.dbuf.cache.target_bytes PMID: 153.2.3 [target bounds on the dbuf cache size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: byte
Help:
target bounds on the dbuf cache size
    value 153

zfs.dbuf.cache.total_evicts PMID: 153.2.6 [total number of dbuf cache evictions that have occurred]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
total number of dbuf cache evictions that have occurred
    value 153

zfs.dbuf.hash.chain_max PMID: 153.2.37 [max number of dbuf hash chains]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
max number of dbuf hash chains
    value 153

zfs.dbuf.hash.chains PMID: 153.2.36 [number of dbuf hash chains]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of sublists containing more than one dbuf in the dbuf
hash table. Keep track of the longest hash chain.
    value 153

zfs.dbuf.hash.collisions PMID: 153.2.33 [dbuf hash table collisions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
dbuf hash table collisions
    value 153

zfs.dbuf.hash.elements PMID: 153.2.34 [number of dbuf hash table elements]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of dbuf hash table elements
    value 153

zfs.dbuf.hash.elements_max PMID: 153.2.35 [max number of dbuf hash table elements]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
max number of dbuf hash table elements
    value 153

zfs.dbuf.hash.hits PMID: 153.2.31 [dbuf hash table hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
dbuf hash table hits
    value 153

zfs.dbuf.hash.insert_race PMID: 153.2.38 [number of dbug hash insert races]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times a dbuf_create() discovers that a dbuf was
already created and in the dbuf hash table.
    value 153

zfs.dbuf.hash.misses PMID: 153.2.32 [dbuf hash table misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
dbuf hash table misses
    value 153

zfs.dbuf.metadata_cache.count PMID: 153.2.39 [number of elements in the metadata dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of elements in the metadata dbuf cache
    value 153

zfs.dbuf.metadata_cache.overflow PMID: 153.2.42 [number of the metadata dbuf cache overflows]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
For diagnostic purposes, this is incremented whenever we can't add
something to the metadata cache because it's full, and instead put
the data in the regular dbuf cache.
    value 153

zfs.dbuf.metadata_cache.size_bytes PMID: 153.2.40 [size of the metadata dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
size of the metadata dbuf cache
    value 153

zfs.dbuf.metadata_cache.size_bytes_max PMID: 153.2.41 [max size of the metadata dbuf cache]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
max size of the metadata dbuf cache
    value 153

zfs.dmu_tx.assigned PMID: 153.3.0 [number of DMU transactions assigned]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of DMU transactions assigned
    value 153

zfs.dmu_tx.delay PMID: 153.3.1 [number of DMU transactions delayed]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: millisec
Help:
number of DMU transactions delayed
    value 153

zfs.dmu_tx.dirty_delay PMID: 153.3.8 [number of DMU transaction delays]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: millisec
Help:
number of DMU transaction delays
    value 153

zfs.dmu_tx.dirty_frees_delay PMID: 153.3.10 [number of DMU transaction frees delayed]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: millisec
Help:
number of DMU transaction frees delayed
    value 153

zfs.dmu_tx.dirty_over_max PMID: 153.3.9 [number of DMU transactions over the maximum limit]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
number of DMU transactions over the maximum limit
    value 153

zfs.dmu_tx.dirty_throttle PMID: 153.3.7 [number of DMU transaction throttles]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: millisec
Help:
number of DMU transaction throttles
    value 153

zfs.dmu_tx.error PMID: 153.3.2 [number of DMU transaction errors]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of DMU transaction errors
    value 153

zfs.dmu_tx.group PMID: 153.3.4 [number of DMU transaction gropus]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of DMU transaction gropus
    value 153

zfs.dmu_tx.memory_reclaim PMID: 153.3.6 [size of memory reclaimed for DMU transactions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
size of memory reclaimed for DMU transactions
    value 153

zfs.dmu_tx.memory_reserve PMID: 153.3.5 [size of memory reserved for DMU transactions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
size of memory reserved for DMU transactions
    value 153

zfs.dmu_tx.quota PMID: 153.3.11 [DMU transaction quota]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
DMU transaction quota
    value 153

zfs.dmu_tx.suspended PMID: 153.3.3 [number of DMU transactions suspended]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of DMU transactions suspended
    value 153

zfs.dnode.alloc.next_block PMID: 153.4.20 [number of dnode allocations to another block]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dmu_object_alloc*() was forced to advance to the
next meta dnode dbuf due to an error from  dmu_object_next().
    value 153

zfs.dnode.alloc.next_chunk PMID: 153.4.18 [number of dnode allocations to another chunk]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dmu_object_alloc*() reached the end of the existing
object ID chunk and advanced to a new one.
    value 153

zfs.dnode.alloc.race PMID: 153.4.19 [number of dnode allocation race conditions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times multiple threads attempted to allocate a dnode
from the same block of free dnodes.
    value 153

zfs.dnode.allocate PMID: 153.4.15 [number of new dnodes allocations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of new dnodes allocated by dnode_allocate().
    value 153

zfs.dnode.buf_evict PMID: 153.4.17 [number of dnode dbuf evictions]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of meta dnode dbufs evicted.
    value 153

zfs.dnode.free_interior_lock_retry PMID: 153.4.14 [number of dnode dbufs free lock retries due to interior references]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_free_interior_slots() needed to retry
acquiring a slot zrl lock due to contention.
    value 153

zfs.dnode.hold.alloc_hits PMID: 153.4.2 [number of dnode allocation hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) was able
to hold the requested object number which was allocated.  This is
the common case when looking up any allocated object number.
    value 153

zfs.dnode.hold.alloc_interior PMID: 153.4.4 [number of failed dnode dbuf holds due to interior references]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) was not
able to hold the request object number because the object number
refers to an interior large dnode slot.
    value 153

zfs.dnode.hold.alloc_lock_misses PMID: 153.4.6 [number of dnode dbuf lock misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) did not
need to create the dnode because another thread did so after
dropping the read lock but before acquiring the write lock.
    value 153

zfs.dnode.hold.alloc_lock_retry PMID: 153.4.5 [number of dnode dbuf lock retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) needed
to retry acquiring slot zrl locks due to contention.
    value 153

zfs.dnode.hold.alloc_misses PMID: 153.4.3 [number of dnode allocation misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) was not
able to hold the request object number because it was not allocated.
    value 153

zfs.dnode.hold.alloc_type_none PMID: 153.4.7 [number of unallocated dnode dbuf holds]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_ALLOCATED) found
a free dnode instantiated by dnode_create() but not yet allocated
by dnode_allocate().
    value 153

zfs.dnode.hold.dbuf_hold PMID: 153.4.0 [number of failed dnode dbuf holds]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of failed attempts to hold a meta dnode dbuf.
    value 0

zfs.dnode.hold.dbuf_read PMID: 153.4.1 [number of failed dnode dbuf reads]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of failed attempts to read a meta dnode dbuf.
    value 0

zfs.dnode.hold.free_hits PMID: 153.4.8 [number of dnode dbuf hold hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) was able
to hold the requested range of free dnode slots.
    value 153

zfs.dnode.hold.free_lock_misses PMID: 153.4.10 [number of dnode dbuf free lock misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) was not
able to hold the requested range of free dnode slots because
after acquiring the zrl lock at least one slot was allocated.
    value 153

zfs.dnode.hold.free_lock_retry PMID: 153.4.11 [number of dnode dbuf free lock retries]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) needed
to retry acquiring slot zrl locks due to contention.
    value 153

zfs.dnode.hold.free_misses PMID: 153.4.9 [number of dnode dbuf hold misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) was not
able to hold the requested range of free dnode slots because
at least one slot was allocated.
    value 153

zfs.dnode.hold.free_overflow PMID: 153.4.12 [number of dnode dbuf free overflows]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) requested
a range of dnode slots which would overflow the dnode_phys_t.
    value 153

zfs.dnode.hold.free_refcount PMID: 153.4.13 [number of referenced dnode dbufs]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times dnode_hold(..., DNODE_MUST_BE_FREE) requested
a range of dnode slots which were held by another thread.
    value 153

zfs.dnode.move.active PMID: 153.4.27 [number of active dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.handle PMID: 153.4.25 [number of handle dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.invalid PMID: 153.4.21 [number invalid dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.recheck1 PMID: 153.4.22 [number of recheck1 dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.recheck2 PMID: 153.4.23 [number of recheck2 dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.rwlock PMID: 153.4.26 [number of RW lock dnode moves]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.move.special PMID: 153.4.24 [number of special dnode modes]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Statistics for tracking dnodes which have been moved.
    value 153

zfs.dnode.reallocate PMID: 153.4.16 [number of new dnodes reallocations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of dnodes re-allocated by dnode_reallocate().
    value 153

zfs.fm.erpt_dropped PMID: 153.5.0 [number of erpts dropped on post]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of erpts dropped on post
    value 153

zfs.fm.erpt_set_failed PMID: 153.5.1 [number of erpt set failures]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of erpt set failures
    value 153

zfs.fm.fmri_set_failed PMID: 153.5.2 [number of fmri set failures]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of fmri set failures
    value 153

zfs.fm.payload_set_failed PMID: 153.5.3 [number of payload set failures]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
number of payload set failures
    value 153

zfs.pool.nread PMID: 153.10.1 [number of bytes read]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: byte
Help:
number of bytes read
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.nwritten PMID: 153.10.2 [number of bytes written]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: byte
Help:
number of bytes written
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.rcnt PMID: 153.10.12 [count of elements in run state]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: count
Help:
count of elements in run state
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.reads PMID: 153.10.3 [number of read operations]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: count
Help:
number of read operations
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.rlentime PMID: 153.10.9 [cumulative run length*time product]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
cumulative run length*time product
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.rtime PMID: 153.10.8 [cumulative run (service) time]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
cumulative run (service) time
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.rupdate PMID: 153.10.10 [last time run queue changed]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
last time run queue changed
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.state PMID: 153.10.0 [number corresponding to the pool state]
    Data Type: 32-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: discrete  Units: count
Help:
OFFLINE  = 0, ONLINE  = 1, 
DEGRADED = 2, FAULTED = 3, REMOVED = 4, 
UNAVAIL  = 5, UNKNOWN = 13
    inst [0-or-1 or "pmdazfs_test"] value 1

zfs.pool.wcnt PMID: 153.10.11 [count of elements in wait state]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: count
Help:
count of elements in wait state
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.wlentime PMID: 153.10.6 [cumulative wait len*time product]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
cumulative wait len*time product
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.writes PMID: 153.10.4 [number of write operations]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: count
Help:
number of write operations
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.wtime PMID: 153.10.5 [cumulative wait (pre-service) time]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
cumulative wait (pre-service) time
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.pool.wupdate PMID: 153.10.7 [last time wait queue changed]
    Data Type: 64-bit unsigned int  InDom: 153.0 0x26400000
    Semantics: counter  Units: nanosec
Help:
last time wait queue changed
    inst [0-or-1 or "pmdazfs_test"] value 153

zfs.vdev.cache.delegations PMID: 153.6.0 [vdev cache delegations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
vdev cache delegations
    value 153

zfs.vdev.cache.hits PMID: 153.6.1 [vdev cache hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
vdev cache hits
    value 153

zfs.vdev.cache.misses PMID: 153.6.2 [vdev cache misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
vdev cache misses
    value 153

zfs.vdev.mirror.non_rotating_linear PMID: 153.6.6 [vdev mirror linear non-rotations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
New IO follows directly the last IO  (nonrot) 
    value 153

zfs.vdev.mirror.non_rotating_seek PMID: 153.6.7 [vdev mirror random seeks non-rot]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
New IO requires random seek (nonrot) 
    value 153

zfs.vdev.mirror.preferred_found PMID: 153.6.8 [vdev mirror preferred found]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Preferred child vdev found 
    value 153

zfs.vdev.mirror.preferred_not_found PMID: 153.6.9 [vdev mirror preferred not found]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Preferred child vdev not found or equal load  
    value 153

zfs.vdev.mirror.rotating_linear PMID: 153.6.3 [vdev mirror linear rotations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
New IO follows directly the last IO 
    value 153

zfs.vdev.mirror.rotating_offset PMID: 153.6.4 [vdev mirror offset rotations]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
New IO is within zfs_vdev_mirror_rotating_seek_offset of the last 
    value 153

zfs.vdev.mirror.rotating_seek PMID: 153.6.5 [vdev mirror random seeks]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
New IO requires random seek 
    value 153

zfs.xuio.onloan_read_buf PMID: 153.7.0 [loaned yet not returned arc_buf read]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
loaned yet not returned arc_buf read
    value 153

zfs.xuio.onloan_write_buf PMID: 153.7.1 [loaned yet not returned arc_buf written]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
loaned yet not returned arc_buf written
    value 153

zfs.xuio.read_buf_copied PMID: 153.7.2 [whether a copy is made when loaning out a read buffer ]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
whether a copy is made when loaning out a read buffer 
    value 153

zfs.xuio.read_buf_nocopy PMID: 153.7.3 [whether a copy is not made when loaning out a read buffer ]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
whether a copy is not made when loaning out a read buffer 
    value 153

zfs.xuio.write_buf_copied PMID: 153.7.4 [whether a copy is made when assigning a write buffer ]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
whether a copy is made when assigning a write buffer 
    value 153

zfs.xuio.write_buf_nocopy PMID: 153.7.5 [whether a copy is not made when assigning a write buffer ]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
whether a copy is not made when assigning a write buffer 
    value 153

zfs.zfetch.hits PMID: 153.8.0 [zfetch hits]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
zfetch hits
    value 153

zfs.zfetch.max_streams PMID: 153.8.2 [maximum number of streams per zfetch]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
maximum number of streams per zfetch
    value 153

zfs.zfetch.misses PMID: 153.8.1 [zfetch misses]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
zfetch misses
    value 153

zfs.zil.commit.count PMID: 153.9.0 [ZIL commit count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times a ZIL commit (e.g. fsync) has been requested.
    value 153

zfs.zil.commit.writer_count PMID: 153.9.1 [ZIL commit writer count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of times the ZIL has been flushed to stable storage.
This is less than zil_commit_count when commits are merged
(see the documentation above zil_commit()).
    value 153

zfs.zil.itx.copied_bytes PMID: 153.9.6 [size of ZIL data copied]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The size of the data copied into lr_write_t.
Note that bytes accumulates the length of the transactions
(i.e. data), not the actual log record sizes.
    value 153

zfs.zil.itx.copied_count PMID: 153.9.5 [number of ZIL transactions copied]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of transactions copied into lr_write_t.
    value 153

zfs.zil.itx.count PMID: 153.9.2 [ZIL transation count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
Number of transactions (reads, writes, renames, etc.)
that have been committed.
    value 153

zfs.zil.itx.indirect_bytes PMID: 153.9.4 [ZIL indirect transaction data size]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The size of the the large data portions to write.
Note that bytes accumulates the length of the transactions
(i.e. data), not the actual log record sizes.
    value 153

zfs.zil.itx.indirect_count PMID: 153.9.3 [ZIL indirect transaction count]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of indirect transactions.
    value 153

zfs.zil.itx.metaslab.normal_bytes PMID: 153.9.10 [size of ZIL transaction data allocated]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The size of transactions which have been allocated to the normal
(i.e. not slog) storage pool. Note that bytes accumulate
the actual log record sizes - which do not include the actual
data in case of indirect writes.
    value 153

zfs.zil.itx.metaslab.normal_count PMID: 153.9.9 [number of ZIL transactions allocated]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of transactions which have been allocated to the normal
(i.e. not slog) storage pool. Note that bytes accumulate
the actual log record sizes - which do not include the actual
data in case of indirect writes.
    value 153

zfs.zil.itx.metaslab.slog_bytes PMID: 153.9.12 [size of ZIL transaction data in slog]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The size of transactions which have been allocated to the slog storage pool.
If there are no separate log devices, this is the same as the
normal pool.
    value 153

zfs.zil.itx.metaslab.slog_count PMID: 153.9.11 [number of ZIL transactions in slog]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of transactions which have been allocated to the slog storage pool.
If there are no separate log devices, this is the same as the
normal pool.
    value 153

zfs.zil.itx.needcopy_bytes PMID: 153.9.8 [size of ZIL transaction data to be copied]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: byte
Help:
The size of the data that needs to be copied if pushed.
Note that bytes accumulates the length of the transactions
(i.e. data), not the actual log record sizes.
    value 153

zfs.zil.itx.needcopy_count PMID: 153.9.7 [number of ZIL transactions to be copied]
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: counter  Units: count
Help:
The number of transactions that need to be copied if pushed.
    value 153
=== std err ===
=== filtered valgrind report ===
Memcheck, a memory error detector
Command: pminfo -L -K clear -K add,153,PCP_PMDAS_DIR/zfs/pmda_zfs.so,zfs_init -n PCP_PMDAS_DIR/zfs/root -dfmtT zfs.abd.linear_cnt zfs.abd.linear_data_size zfs.abd.scatter.chunk_waste zfs.abd.scatter.cnt zfs.abd.scatter.data_size zfs.abd.scatter.order_0 zfs.abd.scatter.order_1 zfs.abd.scatter.order_10 zfs.abd.scatter.order_2 zfs.abd.scatter.order_3 zfs.abd.scatter.order_4 zfs.abd.scatter.order_5 zfs.abd.scatter.order_6 zfs.abd.scatter.order_7 zfs.abd.scatter.order_8 zfs.abd.scatter.order_9 zfs.abd.scatter.page_alloc_retry zfs.abd.scatter.page_multi_chunk zfs.abd.scatter.page_multi_zone zfs.abd.scatter.sg_table_retry zfs.abd.struct_size zfs.arc.abd_chunk_waste_size zfs.arc.access_skip zfs.arc.anon_evictable_data zfs.arc.anon_evictable_metadata zfs.arc.anon_size zfs.arc.async_upgrade_sync zfs.arc.bonus_size zfs.arc.c zfs.arc.c_max zfs.arc.c_min zfs.arc.cached_only_in_progress zfs.arc.compressed_size zfs.arc.data_size zfs.arc.dbuf_size zfs.arc.deleted zfs.arc.demand.data_hits zfs.arc.demand.data_misses zfs.arc.demand.hit_predictive_prefetch zfs.arc.demand.hit_prescient_prefetch zfs.arc.demand.metadata_hits zfs.arc.demand.metadata_misses zfs.arc.dnode_limit zfs.arc.dnode_size zfs.arc.evict.l2_cached zfs.arc.evict.l2_eligible zfs.arc.evict.l2_ineligible zfs.arc.evict.l2_skip zfs.arc.evict.not_enough zfs.arc.evict.skip zfs.arc.hash.chain_max zfs.arc.hash.chains zfs.arc.hash.collisions zfs.arc.hash.elements zfs.arc.hash.elements_max zfs.arc.hdr_size zfs.arc.hits zfs.arc.l2.abort_lowmem zfs.arc.l2.asize zfs.arc.l2.cksum_bad zfs.arc.l2.data_to_meta_ratio zfs.arc.l2.evict_l1cached zfs.arc.l2.evict_lock_retry zfs.arc.l2.evict_reading zfs.arc.l2.feeds zfs.arc.l2.free_on_write zfs.arc.l2.hdr_size zfs.arc.l2.hits zfs.arc.l2.io_error zfs.arc.l2.log.blk_asize zfs.arc.l2.log.blk_avg_asize zfs.arc.l2.log.blk_count zfs.arc.l2.log.blk_writes zfs.arc.l2.misses zfs.arc.l2.read_bytes zfs.arc.l2.rebuild.asize zfs.arc.l2.rebuild.bufs zfs.arc.l2.rebuild.bufs_precached zfs.arc.l2.rebuild.cksum_lb_errors zfs.arc.l2.rebuild.dh_errors zfs.arc.l2.rebuild.io_errors zfs.arc.l2.rebuild.log_blks zfs.arc.l2.rebuild.lowmem zfs.arc.l2.rebuild.size zfs.arc.l2.rebuild.success zfs.arc.l2.rebuild.unsupported zfs.arc.l2.rw_clash zfs.arc.l2.size zfs.arc.l2.write_bytes zfs.arc.l2.writes_done zfs.arc.l2.writes_error zfs.arc.l2.writes_lock_retry zfs.arc.l2.writes_sent zfs.arc.loaned_bytes zfs.arc.memory.all_bytes zfs.arc.memory.available_bytes zfs.arc.memory.direct_count zfs.arc.memory.free_bytes zfs.arc.memory.indirect_count zfs.arc.memory.throttle_count zfs.arc.meta_limit zfs.arc.meta_max zfs.arc.meta_min zfs.arc.meta_used zfs.arc.metadata_size zfs.arc.mfu.evictable_data zfs.arc.mfu.evictable_metadata zfs.arc.mfu.ghost_evictable_data zfs.arc.mfu.ghost_evictable_metadata zfs.arc.mfu.ghost_hits zfs.arc.mfu.ghost_size zfs.arc.mfu.hits zfs.arc.mfu.size zfs.arc.misses zfs.arc.mru.evictable_data zfs.arc.mru.evictable_metadata zfs.arc.mru.ghost_evictable_data zfs.arc.mru.ghost_evictable_metadata zfs.arc.mru.ghost_hits zfs.arc.mru.ghost_size zfs.arc.mru.hits zfs.arc.mru.size zfs.arc.mutex_miss zfs.arc.need_free zfs.arc.no_grow zfs.arc.overhead_size zfs.arc.p zfs.arc.prefetch.data_hits zfs.arc.prefetch.data_misses zfs.arc.prefetch.metadata_hits zfs.arc.prefetch.metadata_misses zfs.arc.prune zfs.arc.raw_size zfs.arc.size zfs.arc.sys_free zfs.arc.tempreserve zfs.arc.uncompressed_size zfs.dbuf.cache.count zfs.dbuf.cache.hiwater_bytes zfs.dbuf.cache.level_0 zfs.dbuf.cache.level_0_bytes zfs.dbuf.cache.level_1 zfs.dbuf.cache.level_10 zfs.dbuf.cache.level_10_bytes zfs.dbuf.cache.level_11 zfs.dbuf.cache.level_11_bytes zfs.dbuf.cache.level_1_bytes zfs.dbuf.cache.level_2 zfs.dbuf.cache.level_2_bytes zfs.dbuf.cache.level_3 zfs.dbuf.cache.level_3_bytes zfs.dbuf.cache.level_4 zfs.dbuf.cache.level_4_bytes zfs.dbuf.cache.level_5 zfs.dbuf.cache.level_5_bytes zfs.dbuf.cache.level_6 zfs.dbuf.cache.level_6_bytes zfs.dbuf.cache.level_7 zfs.dbuf.cache.level_7_bytes zfs.dbuf.cache.level_8 zfs.dbuf.cache.level_8_bytes zfs.dbuf.cache.level_9 zfs.dbuf.cache.level_9_bytes zfs.dbuf.cache.lowater_bytes zfs.dbuf.cache.size_bytes zfs.dbuf.cache.size_bytes_max zfs.dbuf.cache.target_bytes zfs.dbuf.cache.total_evicts zfs.dbuf.hash.chain_max zfs.dbuf.hash.chains zfs.dbuf.hash.collisions zfs.dbuf.hash.elements zfs.dbuf.hash.elements_max zfs.dbuf.hash.hits zfs.dbuf.hash.insert_race zfs.dbuf.hash.misses zfs.dbuf.metadata_cache.count zfs.dbuf.metadata_cache.overflow zfs.dbuf.metadata_cache.size_bytes zfs.dbuf.metadata_cache.size_bytes_max zfs.dmu_tx.assigned zfs.dmu_tx.delay zfs.dmu_tx.dirty_delay zfs.dmu_tx.dirty_frees_delay zfs.dmu_tx.dirty_over_max zfs.dmu_tx.dirty_throttle zfs.dmu_tx.error zfs.dmu_tx.group zfs.dmu_tx.memory_reclaim zfs.dmu_tx.memory_reserve zfs.dmu_tx.quota zfs.dmu_tx.suspended zfs.dnode.alloc.next_block zfs.dnode.alloc.next_chunk zfs.dnode.alloc.race zfs.dnode.allocate zfs.dnode.buf_evict zfs.dnode.free_interior_lock_retry zfs.dnode.hold.alloc_hits zfs.dnode.hold.alloc_interior zfs.dnode.hold.alloc_lock_misses zfs.dnode.hold.alloc_lock_retry zfs.dnode.hold.alloc_misses zfs.dnode.hold.alloc_type_none zfs.dnode.hold.dbuf_hold zfs.dnode.hold.dbuf_read zfs.dnode.hold.free_hits zfs.dnode.hold.free_lock_misses zfs.dnode.hold.free_lock_retry zfs.dnode.hold.free_misses zfs.dnode.hold.free_overflow zfs.dnode.hold.free_refcount zfs.dnode.move.active zfs.dnode.move.handle zfs.dnode.move.invalid zfs.dnode.move.recheck1 zfs.dnode.move.recheck2 zfs.dnode.move.rwlock zfs.dnode.move.special zfs.dnode.reallocate zfs.fm.erpt_dropped zfs.fm.erpt_set_failed zfs.fm.fmri_set_failed zfs.fm.payload_set_failed zfs.pool.nread zfs.pool.nwritten zfs.pool.rcnt zfs.pool.reads zfs.pool.rlentime zfs.pool.rtime zfs.pool.rupdate zfs.pool.state zfs.pool.wcnt zfs.pool.wlentime zfs.pool.writes zfs.pool.wtime zfs.pool.wupdate zfs.vdev.cache.delegations zfs.vdev.cache.hits zfs.vdev.cache.misses zfs.vdev.mirror.non_rotating_linear zfs.vdev.mirror.non_rotating_seek zfs.vdev.mirror.preferred_found zfs.vdev.mirror.preferred_not_found zfs.vdev.mirror.rotating_linear zfs.vdev.mirror.rotating_offset zfs.vdev.mirror.rotating_seek zfs.xuio.onloan_read_buf zfs.xuio.onloan_write_buf zfs.xuio.read_buf_copied zfs.xuio.read_buf_nocopy zfs.xuio.write_buf_copied zfs.xuio.write_buf_nocopy zfs.zfetch.hits zfs.zfetch.max_streams zfs.zfetch.misses zfs.zil.commit.count zfs.zil.commit.writer_count zfs.zil.itx.copied_bytes zfs.zil.itx.copied_count zfs.zil.itx.count zfs.zil.itx.indirect_bytes zfs.zil.itx.indirect_count zfs.zil.itx.metaslab.normal_bytes zfs.zil.itx.metaslab.normal_count zfs.zil.itx.metaslab.slog_bytes zfs.zil.itx.metaslab.slog_count zfs.zil.itx.needcopy_bytes zfs.zil.itx.needcopy_count
LEAK SUMMARY:
definitely lost: 0 bytes in 0 blocks
indirectly lost: 0 bytes in 0 blocks
ERROR SUMMARY: 0 errors from 0 contexts ...

== done

