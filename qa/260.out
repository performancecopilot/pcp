QA output created by 260
=== expression trees and pmDesc propagation ===

delta.m1 = delta(sample.const_rate.value)
delta.m2 = delta(sampledso.const_rate.value) + sample.bigid
delta.m3 = sample.bigid - delta(sampledso.const_rate.value)
delta.m4 = sample.bigid - 3 * delta(sampledso.const_rate.value) / sample.long.ten
delta.m5 =  delta(sample.const_rate.value) / ( delta(sample.const_rate.value) + delta(sampledso.const_rate.value) )
delta.m6 =  delta(sample.const_rate.value) / delta(sample.const_rate.value) - delta(sampledso.const_rate.value) / delta(sample.const_rate.value)

=== delta ===
pmRegisterDerived: name="event.flags" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[0] event.flags = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-0>...
expr node <addr-0> type=ANON left=<addr-1> right=(nil) save_last=0
expr node <addr-1> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] primary=1
pmRegisterDerived: name="event.missed" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[1] event.missed = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-2>...
expr node <addr-2> type=ANON left=<addr-3> right=(nil) save_last=0
expr node <addr-3> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] primary=1
Derived metric initialization from $PCP_DERIVED_CONFIG
pmLoadDerivedConfig("TMP.config")
pmRegisterDerived: name="delta.m1" expr="delta(sample.const_rate.value)"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[2] delta.m1 = delta(sample.const_rate.value)
Derived metric expr dump from <addr-4>...
expr node <addr-4> type=DELTA left=<addr-5> right=(nil) save_last=0
expr node <addr-5> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
pmRegisterDerived: name="delta.m2" expr="delta(sampledso.const_rate.value) + sample.bigid"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sampledso.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_NAME "sample.bigid"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[3] delta.m2 = delta(sampledso.const_rate.value) + sample.bigid
Derived metric expr dump from <addr-6>...
expr node <addr-6> type=PLUS left=<addr-7> right=<addr-9> save_last=0
expr node <addr-7> type=DELTA left=<addr-8> right=(nil) save_last=0
expr node <addr-8> type=NAME left=(nil) right=(nil) save_last=1 [sampledso.const_rate.value] primary=1
expr node <addr-9> type=NAME left=(nil) right=(nil) save_last=0 [sample.bigid] primary=1
pmRegisterDerived: name="delta.m3" expr="sample.bigid - delta(sampledso.const_rate.value)"
derive_lex() -> type=L_NAME "sample.bigid"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sampledso.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[4] delta.m3 = sample.bigid - delta(sampledso.const_rate.value)
Derived metric expr dump from <addr-10>...
expr node <addr-10> type=MINUS left=<addr-11> right=<addr-12> save_last=0
expr node <addr-11> type=NAME left=(nil) right=(nil) save_last=0 [sample.bigid] primary=1
expr node <addr-12> type=DELTA left=<addr-13> right=(nil) save_last=0
expr node <addr-13> type=NAME left=(nil) right=(nil) save_last=1 [sampledso.const_rate.value] primary=1
pmRegisterDerived: name="delta.m4" expr="sample.bigid - 3 * delta(sampledso.const_rate.value) / sample.long.ten"
derive_lex() -> type=L_NAME "sample.bigid"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_INTEGER "3"
derive_lex() -> type=L_STAR "*"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sampledso.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_NAME "sample.long.ten"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[5] delta.m4 = sample.bigid - 3 * delta(sampledso.const_rate.value) / sample.long.ten
Derived metric expr dump from <addr-14>...
expr node <addr-14> type=MINUS left=<addr-15> right=<addr-16> save_last=0
expr node <addr-15> type=NAME left=(nil) right=(nil) save_last=0 [sample.bigid] primary=1
expr node <addr-16> type=SLASH left=<addr-17> right=<addr-21> save_last=0
expr node <addr-17> type=STAR left=<addr-18> right=<addr-19> save_last=0
expr node <addr-18> type=INTEGER left=(nil) right=(nil) save_last=0 [3] primary=1
expr node <addr-19> type=DELTA left=<addr-20> right=(nil) save_last=0
expr node <addr-20> type=NAME left=(nil) right=(nil) save_last=1 [sampledso.const_rate.value] primary=1
expr node <addr-21> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] primary=1
pmRegisterDerived: name="delta.m5" expr="delta(sample.const_rate.value) / ( delta(sample.const_rate.value) + delta(sampledso.const_rate.value) )"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_PLUS "+"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sampledso.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[6] delta.m5 = delta(sample.const_rate.value) / ( delta(sample.const_rate.value) + delta(sampledso.const_rate.value) )
Derived metric expr dump from <addr-22>...
expr node <addr-22> type=SLASH left=<addr-23> right=<addr-25> save_last=0
expr node <addr-23> type=DELTA left=<addr-24> right=(nil) save_last=0
expr node <addr-24> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
expr node <addr-25> type=PLUS left=<addr-26> right=<addr-28> save_last=0
expr node <addr-26> type=DELTA left=<addr-27> right=(nil) save_last=0
expr node <addr-27> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
expr node <addr-28> type=DELTA left=<addr-29> right=(nil) save_last=0
expr node <addr-29> type=NAME left=(nil) right=(nil) save_last=1 [sampledso.const_rate.value] primary=1
pmRegisterDerived: name="delta.m6" expr="delta(sample.const_rate.value) / delta(sample.const_rate.value) - delta(sampledso.const_rate.value) / delta(sample.const_rate.value)"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sampledso.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_SLASH "/"
derive_lex() -> type=L_DELTA "delta"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "sample.const_rate.value"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: global metric[7] delta.m6 = delta(sample.const_rate.value) / delta(sample.const_rate.value) - delta(sampledso.const_rate.value) / delta(sample.const_rate.value)
Derived metric expr dump from <addr-30>...
expr node <addr-30> type=MINUS left=<addr-31> right=<addr-36> save_last=0
expr node <addr-31> type=SLASH left=<addr-32> right=<addr-34> save_last=0
expr node <addr-32> type=DELTA left=<addr-33> right=(nil) save_last=0
expr node <addr-33> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
expr node <addr-34> type=DELTA left=<addr-35> right=(nil) save_last=0
expr node <addr-35> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
expr node <addr-36> type=SLASH left=<addr-37> right=<addr-39> save_last=0
expr node <addr-37> type=DELTA left=<addr-38> right=(nil) save_last=0
expr node <addr-38> type=NAME left=(nil) right=(nil) save_last=1 [sampledso.const_rate.value] primary=1
expr node <addr-39> type=DELTA left=<addr-40> right=(nil) save_last=0
expr node <addr-40> type=NAME left=(nil) right=(nil) save_last=1 [sample.const_rate.value] primary=1
__dmopencontext(->ctx 0) called, 8 derived metrics
__dmgetpmid: metric "delta.m1" -> PMID 511.0.3
__dmtraverse: name="delta" added "delta.m1"
__dmgetpmid: metric "delta.m2" -> PMID 511.0.4
__dmtraverse: name="delta" added "delta.m2"
__dmgetpmid: metric "delta.m3" -> PMID 511.0.5
__dmtraverse: name="delta" added "delta.m3"
__dmgetpmid: metric "delta.m4" -> PMID 511.0.6
__dmtraverse: name="delta" added "delta.m4"
__dmgetpmid: metric "delta.m5" -> PMID 511.0.7
__dmtraverse: name="delta" added "delta.m5"
__dmgetpmid: metric "delta.m6" -> PMID 511.0.8
__dmtraverse: name="delta" added "delta.m6"
__dmgetpmid: metric "delta.m1" -> PMID 511.0.3
__dmgetpmid: metric "delta.m2" -> PMID 511.0.4
__dmgetpmid: metric "delta.m3" -> PMID 511.0.5
__dmgetpmid: metric "delta.m4" -> PMID 511.0.6
__dmgetpmid: metric "delta.m5" -> PMID 511.0.7
__dmgetpmid: metric "delta.m6" -> PMID 511.0.8

delta.m1 PMID: 511.0.3
    Data Type: 64-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count

delta.m2 PMID: 511.0.4
    Data Type: 64-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count

delta.m3 PMID: 511.0.5
    Data Type: 64-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count

delta.m4 PMID: 511.0.6
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: count

delta.m5 PMID: 511.0.7
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none

delta.m6 PMID: 511.0.8
    Data Type: double  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none

=== fetch values exercises ===
r_xpect_one_quarter: ?
l_xpect_0: ?
ull_xpect_0: ?
f_xpect_0: ?
d_xpect_0: ?
pmie_xpect_120: ?
derived_xpect_120: ?
pmie_xpect_360: ?
derived_xpect_360: ?

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: <skipped>
pmie_xpect_360: 360
derived_xpect_360: <skipped>

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

r_xpect_one_quarter: 0.25
l_xpect_0: 0
ull_xpect_0: 0
f_xpect_0: 0
d_xpect_0: 0
pmie_xpect_120: 120
derived_xpect_120: 120
pmie_xpect_360: 360
derived_xpect_360: 360

pmie: note - evaluator exiting
