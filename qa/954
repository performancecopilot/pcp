#!/bin/sh
# PCP QA Test No. 954
# Missing mutex unlock in pmLoadDerivedConfig()
#
# Copyright (c) 2017 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

# libpcp_fault WILL have lock_debug=true, if it is installed
#
if [ -f $PCP_LIB_DIR/libpcp_fault.so ]
then
    export LD_PRELOAD=$PCP_LIB_DIR/libpcp_fault.so
fi

pmconfig -L | grep lock_debug=true >/dev/null || _notrun libpcp not built with -DPM_MULTI_THREAD_DEBUG

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

_filter()
{
    sed \
	-e "s@$tmp@TMP@g" \
	-e '/\.y:[0-9]/s/.*\.y:[0-9][0-9]* //' \
    # end
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

echo "qa.a = sample.long.one" >$tmp.c1
echo "qa.b = sample.long.hundred" >$tmp.c2

# no extra derived metrics, thanks
#
export PCP_DERIVED_CONFIG=''

# real QA test starts here
echo "=== one config ===" | tee -a $seq_full
src/loadconfig2 -D lock -c $tmp.c1 qa 2>$tmp.err \
| _filter
cat $tmp.err >>$seq_full
grep derived_metric $tmp.err | _filter

echo | tee -a $seq_full
echo "=== two configs ===" | tee -a $seq_full
src/loadconfig2 -D lock -c $tmp.c1 -c $tmp.c2 qa 2>$tmp.err \
| _filter
cat $tmp.err >>$seq_full
grep derived_metric $tmp.err | _filter

# success, all done
status=0
exit
