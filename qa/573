#!/bin/sh
# PCP QA Test No. 573
# Extended prologue (aka preamble) record for pmlogger
#
# Copyright (c) 2017 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

_filter()
{
    pid=`pmprobe -v pmcd.pid | sed -n -e '/ 1 /s/.* //p'`
    if [ -z "$pid" ]
    then
	echo "Arrgh: cannot pid from `pmprobe -v pmcd.pid`"
	pid=0
    fi
    seqnum=`pmprobe -v pmcd.seqnum | sed -n -e '/ 1 /s/.* //p'`
    if [ -z "$seqnum" ]
    then
	echo "Arrgh: cannot seqnum from `pmprobe -v pmcd.seqnum`"
	seqnum=0
    fi
    echo "pid=$pid" >>$seq_full
    echo "seqnum=$seqnum" >>$seq_full
    # in CI hostname looks like a FQDN, but hostname -f contains
    # extra subdomains and gethostname() is something different
    # - get all the known possibilities
    # - sort uniq longest name to shortest name
    # - build 2nd sed script on the fly
    #
    HOSTNAME=`hostname`
    HOSTNAME_F=`hostname -f`
    PMHOSTNAME=`pmhostname`
    echo "hostname -> $HOSTNAME" >>$seq_full
    echo "hostname -f -> $HOSTNAME_F" >>$seq_full
    echo "pmhostname -> $PMHOSTNAME" >>$seq_full
    pmhostname -Dappl0 >>$seq_full 2>&1
    cat <<End-of-File >$tmp.tmp
$HOSTNAME
$HOSTNAME_F
$PMHOSTNAME
End-of-File
    $PCP_AWK_PROG <$tmp.tmp '{ print length($1),$1 }' \
    | sort -nr \
    | uniq \
    | $PCP_AWK_PROG '{ print $2 }' \
    | sed >$tmp.sed \
	-e 's;.*;/pmcd\\.pmlogger\\.host/s/&/HOSTNAME/;'
    # end
    cat $tmp.sed >>$seq_full
    tee -a $seq_full \
    | sed \
	-e "s@$tmp@TMP@g" \
	-e "s/ $pid\$/ PID/" \
	-e "s/ $seqnum\$/ SEQNUM/" \
	-e '/pmcd.*inst/s/\[.*]/[INST]/' \
	-e '/pmcd\.pmlogger\.port/s/ [0-9][0-9]*$/ PORT/' \
    | sed -f $tmp.sed
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

# real QA test starts here
cat <<End-of-File >$tmp.config
log mandatory on once sample.bin
End-of-File

pmlogger -s 1 -c $tmp.config $tmp

pmdumplog $tmp \
| _filter_pmdumplog \
| _filter

# success, all done
status=0
exit
