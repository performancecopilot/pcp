#!/bin/sh
# PCP QA Test No. 893
# Exercise fix for RH BZ 1365424 where init script terminates
# like-named processes.
#
# Really a test for _get_pids_by_name() from /etc/pcp.env, as invoked
# from the pmcd "rc" script.
#
# Copyright (c) 2016 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

signal=$PCP_BINADM_DIR/pmsignal
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    if [ -n "$pid" ]
    then
        echo "Terminating local pmcd process"
        $signal -s TERM $pid
        wait
        pid=""
    fi
    cd $here; rm -rf $tmp.*
}

# real QA test starts here
mkdir $tmp.pmcd
cp $PCP_BINADM_DIR/pmsleep $tmp.pmcd/pmcd
$tmp.pmcd/pmcd 60 &
pid=$!
echo "Fake pmcd pid=$pid" >>$seq_full
echo "Before restart ..." >>$seq_full
$PCP_PS_PROG $PCP_PS_ALL_FLAGS | grep -E '[P]PID|/[p]mcd( |$)' >>$seq_full
echo "_get_pids_by_name pmcd -> `_get_pids_by_name pmcd`" >>$seq_full
if ! _service pmcd restart 2>&1; then _exit 1; fi | _filter_pcp_start
_wait_for_pmcd || _exit 1
_wait_for_pmlogger || _exit 1
echo "After restart ..." >>$seq_full
$PCP_PS_PROG $PCP_PS_ALL_FLAGS | grep -E '[P]PID|/[p]mcd( |$)' >>$seq_full
$PCP_ECHO_PROG $PCP_ECHO_N "Local pmcd count: ""$PCP_ECHO_C"
$PCP_PS_PROG $PCP_PS_ALL_FLAGS \
| grep "$tmp.pmcd/[p]mcd" \
| wc -l \
| sed -e 's/ //g'

# success, all done
status=0
exit
