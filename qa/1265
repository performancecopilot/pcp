#!/bin/sh
# PCP QA Test No. 1265
# Exercise Linux kernel PMDA /proc/locks metrics.
#
# Copyright (c) 2018 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_check_valgrind
[ $PCP_PLATFORM = linux ] || _notrun "Tests Linux kernel lock metrics"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
	-e "s,$PCP_PMDAS_DIR,PCP_PMDAS_DIR,g" \
    #end
}

# real QA test starts here
root=$tmp.root
export LINUX_STATSPATH=$root
pmda="60,$PCP_PMDAS_DIR/linux/pmda_linux.so,linux_init"
metrics=`pminfo vfs.locks | LC_COLLATE=POSIX sort`

for tgz in $here/linux/locks-root-*.tgz
do
    $sudo rm -fr $root
    mkdir $root || _fail "root in use when processing $tgz"
    cd $root
    $sudo tar xzf $tgz
    base=`basename $tgz`

    echo "== Valgrind checking metric descriptors and values - $base"
    _run_valgrind pminfo -L -K clear -K add,$pmda -dfmtT $metrics 2>&1 \
    | _filter
    echo && echo "== done" && echo
    cd $here
done

# success, all done
status=0
exit
