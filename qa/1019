#!/bin/sh
# PCP QA Test No. 1019
# Exercise QmcGroup illustrating simple clients and protocols
#
seq=`basename $0`
echo "QA output created by $seq"

status=1	# failure is the default!
. ./common.qt
host=`hostname`

_cleanup()
{
    if [ ! -f $tmp.done ]
    then
	cd $here/pmdas/dynamic
	$sudo ./Remove >>$seq_full
	cd $here
	touch $tmp.done
    fi
    _cleanup_qt
}

trap "_cleanup; exit \$status" 0 1 2 3 15

[ -x qt/qmc_group/qmc_group ] || _notrun "qmc_group not built or installed"

_filter1()
{
    sed \
	-e "s/$host [:A-Z][A-Z]*[-A-Za-z0-9,/:\.]*/HOST TIMEZONE/" \
	-e "s/localhost [:A-Z][A-Z]*[-A-Za-z0-9,/:\.]*/LOCALHOST TIMEZONE/" \
	-e "s/^\- [0-9][0-9]*\.[0-9][0-9]*$/- NUM/" \
	-e "s/^\- [0-9][0-9]*$/- NUM/" \
	-e "s/: Line [0-9][0-9]* /: Line <N> /" \
    | $PCP_AWK_PROG '
BEGIN		{ mode = 0 }
/Client1/	{ mode = 1; print; next }
/Client2/	{ mode = 1; print; next }
$1 == "FETCH" && mode == 1			{ mode = 2; print; next }
$1 == "CONTEXT" && $2 == "0" && mode == 2	{ printf("CONTEXT 0 DELTA SEC USEC\n"); next }
		{ mode = 0; print; next }'
}

_filter2()
{
    sed -n \
	-e '/^\*\*\*/p' \
	-e '/pmGetPDU/p' \
	-e '/pmXmitPDU/p' \
	-e '/^PMC_/p' \
    | sed \
	-e "s/^\[[0-9]*\]//" \
	-e "s/fd=[0-9]/fd=#/" \
	-e "s/from=[0-9]*/from=###/" \
	-e "s/$host/HOST/" \
	-e "s/id = [0-9]*/id = ##########/" \
	-e "s/ptr = 0x0/ptr = NULL/" \
	-e "s/ptr = 0x[0-9a-f]*/ptr = 0x########/" \
    > $tmp.filtered

    echo
    echo "*** PDUs ***"
    sed -n < $tmp.filtered \
	-e '/pmGetPDU/p' \
	-e '/pmXmitPDU/p' \
    | sed \
	-e "s/ fd=.*//" \
    | sort \
    | uniq -c \
    | sed -e 's/  */ /g'

    echo "*** Transactions ***" >> $seq_full
    echo >> $seq_full
    cat $tmp.filtered >> $seq_full
}

# real QA test starts here
cd $here/pmdas/dynamic
$sudo $PCP_MAKE_PROG >$seq_full 2>&1
$sudo ./Install </dev/null >>$seq_full
cd $here
_check_metric dynamic.numinsts || _exit 1

pmstore dynamic.control.del "-1"
qt/qmc_group/qmc_group -DPDU,PMC 2>$tmp.stderr | _filter1
cat $tmp.stderr | _filter2

status=0
exit
