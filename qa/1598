#!/bin/sh
# PCP QA Test No. 1598
# Exercise the statsd PMDA Install/Remove process.
#
# Copyright (c) 2019 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

test -e $PCP_PMDAS_DIR/statsd/pmdastatsd || _notrun "statsd PMDA not installed"

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter_statsd()
{
    # cull message resulting from no running statsd
    # or no activity
    #
    grep -v 'Information not currently available' \
    | grep -v 'No value(s) available'
}

pmdastatsd_remove()
{
    echo
    echo "=== remove statsd agent ==="
    $sudo ./Remove >$tmp.out 2>&1
    _filter_pmda_remove <$tmp.out
}

pmdastatsd_install()
{
    # start from known starting points
    cd $PCP_PMDAS_DIR/statsd
    $sudo ./Remove >/dev/null 2>&1

    echo
    echo "=== statsd agent installation ==="
    $sudo ./Install </dev/null >$tmp.out 2>&1
    cat $tmp.out >>$seq_full
    # Check statsd metrics have appeared ... X metrics and Y values
    _filter_pmda_install <$tmp.out \
    | sed \
        -e 's/[0-9][0-9]* warnings, //' \
    | $PCP_AWK_PROG '
/Check statsd metrics have appeared/    { if ($7 >= 1 && $7 <= 100) $7 = "X"
                                          if ($10 >= 0 && $10 <= 100) $10 = "Y"
                                        }
                                        { print }'
}

_prepare_pmda statsd
# note: _restore_auto_restart pmcd done in _cleanup_pmda()
trap "_cleanup_pmda statsd; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
pmdastatsd_install

# pmcd should have been started by the Install process - check metrics
if pminfo --verify statsd > $tmp.info 2> $tmp.err
then
    :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi
cat $tmp.info $tmp.err | _filter_statsd

pmdastatsd_remove
status=0
exit
