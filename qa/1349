#!/bin/sh
# PCP QA Test No. 1349
# Test that item labels can be created, deleted and rewritten
# by pmlogrewrite(1)
#
# Copyright (c) 2018 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_filter()
{
    tmpx=`echo $tmp`
    sed -e 's/^Archive:.* Host:/ARCHIVE: Host:/' \
	-e "s|$tmpx|TMP|g" \
	-e 's|PID for pmlogger: [0-9]*|PID for pmlogger: PID|'
}

# find these lines, report 'em and the next one
# PMIDs 60.0.20, 60.0.21, 60.0.22 and 60.0.127 labels
#
_pick1()
{
    tee -a $seq_full \
    | $PCP_AWK_PROG '
$1 == "PMID" && $3 == "labels" {
		if ($2 == "60.0.20" || $2 == "60.0.21" ||
		    $2 == "60.0.22" || $2 == "60.0.127")
			want = 2
	    }
want > 0    { print; want-- }' \
    | _filter
}

# find these lines, report 'em and the next one
# PMIDs 60.0.* and 60.1.* labels
#
_pick2()
{
    tee -a $seq_full \
    | $PCP_AWK_PROG '
$1 == "PMID" && $3 == "labels" {
		if ($2 ~ /^60\.0\./ || $2 ~ /^60\.1\./)
			want = 2
	    }
want > 0    { print; want-- }' \
    | _filter
}

# find these lines, report 'em and the next one
# PMIDs 60.*.* and 127.*.* labels
#
_pick3()
{
    tee -a $seq_full \
    | $PCP_AWK_PROG '
$1 == "PMID" && $3 == "labels" {
		if ($2 ~ /^60\./ || $2 ~ /^127\./)
			want = 2
	    }
want > 0    { print; want-- }' \
    | _filter
}

# find these lines, report 'em and the next one
# PMIDs 60.*.* and 127.*.* labels
#
_pick4()
{
    tee -a $seq_full \
    | $PCP_AWK_PROG '
$1 == "PMID" && $3 == "labels" {
		if ($2 == "60.0.20" || $2 == "60.0.21" ||
		    $2 == "60.0.22" || $2 == "60.0.23" ||
		    $2 == "60.0.34" || $2 == "60.0.35" ||
		    $2 == "60.0.53" || $2 == "60.0.54" ||
		    $2 == "60.0.55" || $2 == "60.0.60" ||
		    $2 == "60.0.78")
			want = 2
	    }
want > 0    { print; want-- }' \
    | _filter
}

# real QA test starts here
DIR=archives

# First, run pmlogrewrite against the archive, deleting and reassociating some item labels
echo "=== LABEL ITEM changes ==="
CONFIG=$tmp.config
cat > $CONFIG << EOF
LABEL ITEM kernel.all.cpu.user { } # does nothing
LABEL ITEM kernel.all.cpu.user { DELETE } # 60.0.20
LABEL ITEM 60.0.21 { DELETE }
LABEL ITEM 60.0.22 { ITEM -> 60.0.127 }
EOF
echo contents of $CONFIG >> $seq_full
echo ........................ >> $seq_full
cat $CONFIG >> $seq_full
echo ........................ >> $seq_full
IN=$DIR/20180416.10.00
OUT=$tmp.pmlogrewrite
rm -f $OUT.*
echo "Running pmlogrewrite -c $CONFIG $IN $OUT" | _filter | tee -a $seq_full
pmlogrewrite -c $CONFIG $IN $OUT 2>&1 >> $seq_full
[ $? -eq 0 ] || echo "Error running pmlogrewrite -c $CONFIG $IN $OUT -- see $seq.full"

# Now run pmdumplog against the original and rewritten archives.
DUMP1=$tmp.original.txt
echo "Running pmdumplog -zhide $IN" | _filter | tee -a $seq_full
pmdumplog -zhide $IN 2>&1 > $DUMP1

DUMP2=$tmp.rewritten.txt
echo "Running pmdumplog -zhide $OUT" | _filter | tee -a $seq_full
pmdumplog -zhide $OUT 2>&1 > $DUMP2

# Make sure the item labels have been deleted or reassociated
echo "Input archive:" | tee -a $seq_full
_pick1 <$DUMP1 2>&1
echo "Output archive:" | tee -a $seq_full
_pick1 <$DUMP2 2>&1

# Now try reassociating to a new cluster
echo
echo "=== LABEL ITEM cluster 0 -> cluster 1 ==="
CONFIG=$tmp.config
cat > $CONFIG << EOF
LABEL ITEM 60.0.* { ITEM -> 60.1.* }
EOF
echo contents of $CONFIG >> $seq_full
echo ........................ >> $seq_full
cat $CONFIG >> $seq_full
echo ........................ >> $seq_full
IN=$DIR/20180416.10.00
OUT=$tmp.pmlogrewrite
rm -f $OUT.*
echo "Running pmlogrewrite -c $CONFIG $IN $OUT" | _filter | tee -a $seq_full
pmlogrewrite -c $CONFIG $IN $OUT 2>&1 >> $seq_full
[ $? -eq 0 ] || echo "Error running pmlogrewrite -c $CONFIG $IN $OUT -- see $seq.full"

# Now run pmdumplog against the rewritten archive.
DUMP1=$tmp.original.txt
echo "Running pmdumplog -zhide $IN" | _filter | tee -a $seq_full
pmdumplog -zhide $IN 2>&1 > $DUMP1

DUMP2=$tmp.rewritten.txt
echo "Running pmdumplog -zhide $OUT" | _filter | tee -a $seq_full
pmdumplog -zhide $OUT 2>&1 > $DUMP2

# Make sure the item labels have been reassociated
echo "Input archive:" | tee -a $seq_full
_pick2 <$DUMP1 2>&1
echo "Output archive:" | tee -a $seq_full
_pick2 <$DUMP2 2>&1

# Now try reassociating to a new domain
echo
echo "=== LABEL ITEM domain 60 -> domain 127 ==="
CONFIG=$tmp.config
cat > $CONFIG << EOF
LABEL ITEM 60.*.* { ITEM -> 127.*.* }
EOF
echo contents of $CONFIG >> $seq_full
echo ........................ >> $seq_full
cat $CONFIG >> $seq_full
echo ........................ >> $seq_full
IN=$DIR/20180416.10.00
OUT=$tmp.pmlogrewrite
rm -f $OUT.*
echo "Running pmlogrewrite -c $CONFIG $IN $OUT" | _filter | tee -a $seq_full
pmlogrewrite -c $CONFIG $IN $OUT 2>&1 >> $seq_full
[ $? -eq 0 ] || echo "Error running pmlogrewrite -c $CONFIG $IN $OUT -- see $seq.full"

# Now run pmdumplog against the rewritten archive.
DUMP1=$tmp.original.txt
echo "Running pmdumplog -zhide $IN" | _filter | tee -a $seq_full
pmdumplog -zhide $IN 2>&1 > $DUMP1

DUMP2=$tmp.rewritten.txt
echo "Running pmdumplog -zhide $OUT" | _filter | tee -a $seq_full
pmdumplog -zhide $OUT 2>&1 > $DUMP2

# Make sure the item labels have been reassociated
echo "Input archive:" | tee -a $seq_full
_pick3 <$DUMP1 2>&1
echo "Output archive:" | tee -a $seq_full
_pick3 <$DUMP2 2>&1

# Now try creating and rewriting individual labels
CONFIG=$tmp.config
cat > $CONFIG << EOF
LABEL ITEM 60.0.20 "device_type" { LABEL -> "new_device_type" }
LABEL ITEM 60.0.21 * "cpu" { VALUE -> "new_value" }
LABEL ITEM 60.0.22 { LABEL -> "new_device_type" }
LABEL ITEM 60.0.23 { VALUE -> "new_value" }
LABEL ITEM 60.0.34 * { LABEL -> "new_device_type" }
LABEL ITEM 60.0.35 * * { VALUE -> "new_value" }

LABEL ITEM 60.0.53 { NEW "new_item_label" "new_item_value" }
LABEL ITEM 60.0.54 { NEW "new_item_number" -123.456e+789 }
LABEL ITEM 60.0.55 { NEW "new_item_true" true }
LABEL ITEM 60.0.60 { NEW "new_item_false" false }
LABEL ITEM 60.0.78 { NEW "new_item_null" null }
EOF
echo contents of $CONFIG >> $seq_full
echo ........................ >> $seq_full
cat $CONFIG >> $seq_full
echo ........................ >> $seq_full
IN=$DIR/20180416.10.00
OUT=$tmp.pmlogrewrite
rm -f $OUT.*
echo "Running pmlogrewrite -c $CONFIG $IN $OUT" | _filter | tee -a $seq_full
pmlogrewrite -c $CONFIG $IN $OUT 2>&1 >> $seq_full
[ $? -eq 0 ] || echo "Error running pmlogrewrite -c $CONFIG $IN $OUT -- see $seq.full"

# Now run pmdumplog against the rewritten archive.
DUMP1=$tmp.original.txt
echo "Running pmdumplog -zhide $IN" | _filter | tee -a $seq_full
pmdumplog -zhide $IN 2>&1 > $DUMP1

DUMP2=$tmp.rewritten.txt
IN=$OUT
echo "Running pmdumplog -iteh $IN" | _filter | tee -a $seq_full
pmdumplog -zhide $IN 2>&1 > $DUMP2

# Make sure the item labels have been rewritten
echo "Input archive:" | tee -a $seq_full
_pick4 <$DUMP1 2>&1
echo "Output archive:" | tee -a $seq_full
_pick4 <$DUMP2 2>&1

# success, all done
status=0
exit
