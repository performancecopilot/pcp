#!/bin/sh
# PCP QA Test No. 1283
# getiname tests for dbpmda
#
# non-valgrind variant, see qa/1467 for the valgrind variant
#
# Copyright (c) 2020 Ken McDonell.  All Rights Reserved.
#

if [ $# -eq 0 ]
then
    seq=`basename $0`
    echo "QA output created by $seq"
else
    # use $seq from caller, unless not set
    [ -n "$seq" ] || seq=`basename $0`
    echo "QA output created by `basename $0` $*"
fi

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

do_valgrind=false
if [ "$1" = "--valgrind" ]
then
    _check_valgrind
    do_valgrind=true
elif which valgrind >/dev/null 2>&1
then
    [ $PCPQA_VALGRIND = both ] || \
	_notrun "valgrind variant qa/1467 will be run"
fi

_cleanup()
{
    cd $here
    $sudo rm -rf $tmp $tmp.*
}

status=0	# success is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

#
# lines like the one below mean we don't have the metric type from the pmDesc
#    inst [1 or ???] value 101 1.4153114e-43 0x65
#
_filter()
{
#	-e '/^__pmResult dump/s/dump .*/dump .../' \
    sed \
	-e "s;$PCP_PMDAS_DIR;PCP_PMDA_DIR;g" \
	-e 's/from 0x[0-9a-f]*/from ADDR/g' \
	-e 's/timestamp: 0.0*0 /TIMESTAMP /' \
	-e 's/[0-2][0-9]:00:00.0*0/TIME/' \
	-e "s/-U `id -un`/-U ME/" \
	-e '/ value /{
s/ [0-9][0-9]*/ NUMBER/
s/ NUMBER .* 0x.*/ NUMBER <type not known>/
}' \
    # end
}

cat <<End-of-File >$tmp.cmds
open dso $PCP_PMDAS_DIR/simple/pmda_simple.so simple_init 253
fetch simple.color
getdesc on
fetch simple.color
getiname on
fetch simple.color
getdesc off
fetch simple.color
open pipe $PCP_PMDAS_DIR/simple/pmdasimple -d 253 -U `id -un`
getiname off
fetch simple.color
getdesc on
fetch simple.color
getiname on
fetch simple.color
getdesc off
fetch simple.color
End-of-File

# real QA test starts here

if $do_valgrind
then
    _run_valgrind dbpmda -ie <$tmp.cmds
else
    dbpmda -ie <$tmp.cmds 2>&1
fi \
| _filter

# success, all done
exit
