'\"macro stdmacro
.\"
.\" Copyright (c) 2000-2023 Gerlof Langeveld.
.\" Copyright (c) 2017-2023 Red Hat.
.\"
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.\" or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
.\" for more details.
.\"
.\"
.TH PCP-ATOP 1 "PCP" "Performance Co-Pilot"
.SH NAME
\f3pcp-atop\f1 \- Advanced System and Process Monitor
.SH SYNOPSIS
Interactive Usage:
.P
\f3pcp\f1 [\f2pcp\ options\f1] \f3atop\f1 [\f3\-aABcCdDfFgGHmMnNopRsuvxyY1\f1] [\f3\-L\f1 \f2linelen\f1] [\f3\-P\f1\f2label\f1[,\f2label\f1]... [\f3\-Z\f1]] [\f2interval\f1 [\f2samples\f1]]
.P
Writing and reading PCP archive folios:
.P
.B pcp\ atop
\f3\-w\f1 \f2folio\f1
[\f3\-a\f1] [\f3\-S\f1] [\f2interval\f1 [\f2samples\f1]]
.br
.B pcp\ atop
\f3\-r\f1 \f2folio\f1 [\f3\-AcCdDfFgGmMnNopRsuvxy1\f1] [\f3\-b\f1 [\f2yy-mm-dd\f1] \f2hh:mm\f1] [\f3\-e\f1 \f2yy-mm-dd\f1] \f2hh:mm\f1] [\f3\-L\f1 \f2linelen\f1] [\f3\-P\f1\f2label\f1[,\f2label\f1]... [\f3\-Z\f1]] [\f2interval\f1 [\f2samples\f1]]
.SH DESCRIPTION
The program
.B pcp-atop
is an interactive monitor to view various aspects of load on a system.
Every
.I interval
seconds (default: 10 seconds) information is gathered about the
resource occupation on system level of the most critical hardware
resources (from a performance point of view),
i.e. CPUs, memory, disks and network interfaces. Besides,
information is gathered about the processes (or threads) that
are responsible for the utilization of the CPUs, memory and disks.
Network load per process is shown only when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
metrics have been installed and configured.
.SH BAR GRAPH MODE
When running
.B pcp-atop
you can choose to view the system load in bar graph mode or in text mode.
In bar graph mode the resource utilization of CPUs, memory, disks and network
interfaces is shown via (character-based) bar graphs, but only on system level.
When you want to view more detailed information on system level or when you
want to view the resource consumption on process or thread level, you can switch
to text mode by pressing the 'B' key. Alternatively, you can use the 'B' key
(again) to switch from text mode to bar graph mode.
.br
By default,
.B pcp-atop
starts in text mode unless the
.I \-B
flag is used or unless 'B' has been configured as a default flag in the
.I .atoprc
file (for further information about default flags, refer to the
.BR pcp-atoprc (5)
man page).
.PP
In bar graph mode the terminal will be subdivided into four character-based
windows, i.e. one window for each hardware resource:
.TP 5
.B Processors
The first bar shows the average busy percentage of all CPUs with
the bar label 'Avg' (might be abbreviated to 'Av' or even just 'A').
The subsequent bars show the busy percentages of single CPUs.
.br
When there is not enough horizontal space to show all CPUs, only the
most busy CPUs per sample will be shown after the width of each bar
has been reduced to a minimum.

By default, the categories of CPU consumption are shown by different
colors in the bars, marked with a character 'S' (system mode), 'U'
(user mode), 'I' (interrupt handling), 's' (steal) and 'G'
(guest, i.e. consumed by virtual machines).
.br
The top of the bar might consist of an unmarked color representing
a 'neutral' category. Suppose that the scale unit is 5% per line
and the total busy percentage is 54% consisting of two categories of 27%.
The two categories will be rounded to 25% (5 lines of 5% each) but the
total busy percentage will be rounded to 55% (11 lines of 5%).
Then the top line will represent a 'neutral' category.
.br
By pressing the 'H' key or by starting
.B pcp-atop
with the
.I \-H
flag, no categories are shown.

A red line is drawn in the bar graph as critical threshold.
By default this value is 90% and can be modified by the 'cpucritperc'
option in the configuration file (see separate
.BR pcp-atoprc (5)
man page).
When this value is set to zero, no threshold line will be drawn.
.TP 5
.B Memory and swap space
Memory is presented as a column in which the
specific categories of memory consumption are shown. These categories
are (code, data and  stack of) processes/kernel, slab caches
(i.e. dynamically allocated kernel memory), shared memory, tmpfs,
static huge pages, page cache and free memory.
.br
Swap space (if present) is also presented as a column in which the
categories processes/tmpfs, shared memory and free space are shown.

At the right side memory-related event counters are shown.
.br
The bottom three counters are colored green when there is no memory pressure.
When considerable activity is noticed such counter might be colored orange and
with high activity red.
.br
When memory pressure starts, usually memory page scanning will be activated
first. When pressure increases, memory pages of processes might be swapped
out to swap space (if present).
.br
The 'oomkills' counter (Out Of Memory killing) is most serious:
it reflects the number of processes that are killed due to lack of memory
(and swap). Therefore this counter shows the absolute number (not per second)
of processes being killed during the last interval and will immediately
be colored red when it is 1 or more.  Besides, after
.B pcp-atop
has noticed OOM killing the 'oomkills' counter remains orange for the next
15 minutes, just in case that you have missed the OOM killing event itself.
.br
When there is enough vertical space in the memory window, event counters
are shown about the number of memory pages being swapped in,
the number of memory pages paged out to block devices and
the number of memory pages paged in from block devices.

Memory and swap space consumption will preferably be shown in a
character-based window that vertically uses the entire screen for
optimal granularity. However, when there are a lot of disks and/or
network interfaces the memory and swap space consumption will be shown
in a character-based window that only uses the upper half of the screen.
.TP 5
.B Disks
For each disk the busy percentage is shown as a bar.
.br
When there is not enough horizontal space to show all disks, only the
most busy disks per sample will be shown.

By default, categories of disk consumption are shown by different colors
in the bars, marked with a character 'R' (read) and 'W'
(write).
.br
The top of the bar might consist of an unmarked color representing
a 'neutral' category. Suppose that the scale unit is 5% per line
and the total busy percentage is 54% consisting of two categories of 27%.
The two categories will be rounded to 25% (5 lines of 5% each) but the
total busy percentage will be rounded to 55% (11 lines of 5%).
Then the top line will represent a 'neutral' category.
.br
By pressing the 'H' key or by starting
.B pcp-atop
with the
.I \-H
flag, no categories are shown.

A red line is drawn in the bar graph as critical threshold.
By default this value is 90% and can be modified by the 'dskcritperc'
option in the configuration file (see separate
.B atoprc
man page). When this value is set to zero, no threshold line will be drawn.
.TP 5
.B Interfaces
For each non-virtual network interface a double bar graph is shown with
a dedicated scale that reflects the traffic rate. One of the bars shows
the transmit rate ('TX') and the other bar the receive rate ('RX').
The traffic scale of each network interface remains at its highest level.
All interface scales can be reset during the measurement by pressing
the 'L' key.

Most often the real speed (maximum bandwidth) of network interfaces is
not known, e.g. in case of the network interfaces of virtual machines.
Therefore it is not possible to show the interface utilization as a
percentage. However, when the real speed of an interface is known it will
be shown underneath the concerning bar graph.

When there is not enough horizontal space to show all network interfaces,
only the most busy interfaces per sample will be shown.
.PP
Usually the bar graphs will not be sorted on busy percentage when there
is enough horizontal space. However, after switching from text mode to
bar graph mode the bar graphs might have been sorted because this was
needed for the presentation in text mode. The next interval in bar graph
mode shows the bars unsorted again unless the window width is insufficient
for all bars.
.PP
The remaining part of this manual page mainly describes the information
shown in text mode.
When certain descriptions also apply to bar graph mode it will be
mentioned explicitly.

.SH TEXT MODE IN GENERAL
The initial screen in text mode shows if
.B pcp-atop
runs with restricted view (unprivileged user) or unrestricted view
(privileged user).  In case of restricted view
.B pcp-atop
does not have the privileges (root identity or necessary capabilities) to
retrieve all counter values on system level and on process level.
does not have the privileges (no root identity nor the necessary capabilities)
to retrieve all counter values on system level and on process level.
.PP
With every interval information is shown about the resource occupation
on system level (CPU, memory, disks and network layers), followed
by a list of processes which have been active during the last interval.
Notice that all processes that were unchanged during the last interval
re not shown, unless the key 'a' has been pressed or unless sorting on
memory occupation is done (then inactive processes are relevant as well).
If the list of active processes does not entirely fit on
the screen, only the top of the list is shown (sorted in order of activity).
.br
The intervals are repeated till the number of
.I samples
(specified as command argument) is reached, or till the key 'q' is pressed
in interactive mode.
.PP
When invoked via the
.BR pcp (1)
command, the
.BR PCPIntro (1)
options
.hy 0
.BR \-A /\c
.BR \-\-align ,
.BR \-a /\c
.BR \-\-archive ,
.BR \-h /\c
.BR \-\-host ,
.BR \-O /\c
.BR \-\-origin ,
.BR \-S /\c
.BR \-\-start ,
.BR \-s /\c
.BR \-\-samples ,
.BR \-T /\c
.BR \-\-finish ,
.BR \-t /\c
.BR \-\-interval ,
.BR \-v /\c
.BR \-\-version ,
.BR \-z /\c
.B \-\-hostzone
and
.BR \-z /\c
.BR \-\-timezone
become indirectly available.
Additionally, the
.B \-\-hotproc
option can be used to request the per-process PCP metrics be used instead
of the default proc metrics from
.BR pmdaproc (1).
.br
.hy
.PP
When
.B pcp-atop
is started, it checks whether the standard output channel is connected to a
screen, or to a file/pipe.
In the first case it produces screen control
codes (via the ncurses library) and behaves interactively;
in the second case it produces flat text output.
.PP
In interactive mode, the output of
.B pcp-atop
scales dynamically to the current dimensions of the screen/window.
.br
If the window is resized horizontally, columns will be added or removed
automatically. For this purpose, every column has a particular weight.
The columns with the highest weights that fit within the current width will
be shown.
.br
If the window is resized vertically, lines of the process/thread list
will be added or removed automatically.
.PP
In interactive mode the output of
.B pcp-atop
can be controlled by pressing particular keys.
However it is also possible to specify such key as
.B flag
on the command line.
In that case
.B pcp-atop
switches to the indicated mode on beforehand.
This mode can be modified again interactively.
Specifying such key as flag is especially useful when running
.B pcp-atop
with output to a pipe or file (non-interactively).
These flags are the same as the keys that can be pressed in interactive
mode (see section INTERACTIVE COMMANDS).
.br
Additional flags are available to support storage of
.B pcp-atop
data in PCP archive format (see section PCP DATA STORAGE).
.SH COLORS
For the resource consumption on system level,
.B pcp-atop
uses colors in text mode to indicate that a critical occupation
percentage has been (almost) reached.
A critical occupation percentage means that is likely that this load
causes a noticeable negative performance influence for applications using
this resource.
The critical percentage depends on the type of resource:
e.g. the performance influence of a disk with a busy percentage of 80%
might be more noticeable for applications/users than a CPU with a busy
percentage of 90%.
.br
Currently
.B pcp-atop
uses the following default values to calculate a weighted percentage
per resource:
.TP 5
.B \ Processor
A busy percentage of 90% or higher is considered 'critical'
(also in bar graph mode).
.TP 5
.B \ Disk
A busy percentage of 90% or higher is considered 'critical'.
.TP 5
.B \ Network
A busy percentage of 90% or higher for the load of an interface is
considered 'critical'.
.TP 5
.B \ Memory
An occupation percentage of 90% is considered 'critical'.
Notice that this occupation percentage is the accumulated memory
consumption of the kernel (including slab) and all processes. The
memory for the page cache ('cache' and 'buff' in the MEM-line) and the
reclaimable part of the slab ('slrec') is not implied!
.br
If the number of pages swapped out ('swout' in the PAG-line) is larger
than 10 per second, the memory resource is considered 'critical'.
A value of at least 1 per second is considered 'almost critical'.
.br
If the committed virtual memory exceeds the limit ('vmcom' and 'vmlim'
in the SWP-line), the SWP-line is colored due to overcommitting the system.
.TP 5
.B \ Swap
An occupation percentage of 80% is considered 'critical'
because swap space might be completely exhausted in the near future.
It is not critical from a performance point-of-view.
.PP
These default values can be modified in the configuration file
(see separate
.BR pcp-atoprc (5)
man page).
.PP
When a resource exceeds its critical occupation percentage, the concerning
values in the screen line are colored red by default.
.br
When a resource exceeds (by default) 80% of its critical percentage
(so it is almost critical), the concerning values in the screen line
are colored cyan by default.
This 'almost critical percentage' (one value
for all resources) can be modified in the configuration file
(see separate
.BR pcp-atoprc (5)
man page).
.br
The default colors red and cyan can be modified in the configuration file
as well (see separate man-page of
.BR pcp-atoprc (5)).
.PP
With the key 'x' (or flag \fB\-x\fR), the use of colors can be suppressed in text mode.  The use of colors is however mandatory in case of bar graph mode.
.SH NETATOP BPF MODULE
Per-process and per-thread network activity can be measured by the
.I netatop
BPF module that can be separately installed with
.BR pmdabpf (1).
or
.BR pmdabcc (1).
.br
When
.B pcp-atop
gathers counters for a new interval, it verifies if the eBPF
module is currently active. If so,
.B pcp-atop
obtains the relevant network counters from this module and shows
the number of sent and received packets per process/thread in the generic
screen. Besides, detailed counters can be requested by
pressing the 'n' key.
.SH GPU STATISTICS GATHERING
GPU statistics can be gathered by
.BR pmdanvidia (1)
which is a separate data collection daemon process.
It gathers cumulative utilization counters of every Nvidia GPU
in the system, as well as utilization counters of every
process that uses a GPU.
When
.B pcp-atop
notices that the daemon is active, it reads these GPU utilization
counters with every interval.
.PP
Find a description about the utilization counters in the section
OUTPUT DESCRIPTION.
.SH INTERACTIVE COMMANDS
When running
.B pcp-atop
interactively (no output redirection), keys can be pressed to control the
output.
In general, lower case keys can be used to show other information for
the active processes while certain upper case keys can be used to influence the
sort order of the active process/thread list. Some of these keys can also
be used to switch from bar graph mode to particular detailed process information
in text mode.
.TP 5
.B g
Show generic output (default).

Per process the following fields are shown in case of a window-width
of 80 positions:
process-id, CPU consumption during
the last interval in system and user mode, the virtual and resident
memory growth of the process.
.br
The data transfer per process for read/write on disk can only be shown
when
.B pcp-atop
accesses metrics with root privileges.
.br
When the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module
.B netatop
is loaded, the data transfer for send/receive
of network packets is shown for each process.
.br
The last columns contain the state, the occupation percentage for the
chosen resource (default: CPU) and the process name.

When more than 80 positions are available, other information is added.
.TP 5
.B m
Show memory related output.

Per process the following fields are shown in case of a window width
of 80 positions:
process-id, minor and major
memory faults, size of virtual shared text, total virtual
process size, total resident process size, virtual and resident growth during
last interval, memory occupation percentage and process name.

When more than 80 positions are available, other information is added.

For memory consumption, always all processes are shown (also the processes
that were not active during the interval).
.TP 5
.B d
Show disk-related output.

When
.B pcp-atop
runs with root privileges, the following fields are shown:
process-id, amount of data read from disk, amount of data written to disk,
amount of data that was written but has been withdrawn again (WCANCL),
disk occupation percentage and process name.
.TP 5
.B n
Show network related output.

Per process the following fields are shown in case of a window width
of 80 positions:
process-id, thread-id,
total bandwidth for received packets,
total bandwidth for sent packets,
number of received TCP packets with the average size per packet (in bytes),
number of sent TCP packets with the average size per packet (in bytes),
number of received UDP packets with the average size per packet (in bytes),
number of sent UDP packets with the average size per packet (in bytes),
the network occupation percentage and process name.
.br
This information can only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module
.I netatop
is installed.

When more than 80 positions are available, other information is added.
.TP 5
.B s
Show scheduling characteristics.

Per process the following fields are shown in case of a window width
of 80 positions:
process-id,
number of threads in state 'running' (R),
number of threads in state 'interruptible sleeping' (S),
number of threads in state 'uninterruptible sleeping' (D),
number of threads in state 'idle' (I),
scheduling policy (normal timesharing, realtime round-robin, realtime fifo),
nice value, priority, realtime priority, current processor,
status, exit code, state, the occupation percentage for the chosen
resource and the process name.

When more than 80 positions are available, other information is added.
.TP 5
.B v
Show various process characteristics.

Per process the following fields are shown in case of a window width
of 80 positions:
process-id, user name and group,
start date and time, status (e.g. exit code if the process has finished),
state, the occupation percentage for the chosen resource and the process name.

When more than 80 positions are available, other information is added.
.TP 5
.B c
Show the command line of the process.

Per process the following fields are shown: process-id,
the occupation percentage for the chosen resource and the
command line including arguments.
.TP 5
.B X
Show cgroup v2 information.

Per process the following fields are shown:
process-id,
'\"process-id, 'cpu.weight' of the cgroup the process
'\"belongs to, 'cpu.max' value (recalculated as percentage) of the cgroup
'\"the process belongs to, most restrictive 'cpu.max' value found in the
'\"upper directories, 'memory.max' value of the cgroup the process belongs to,
'\"most restrictive 'memory.max' value found in the upper
'\"directories, 'memory.swap.max' value of the cgroup the process belongs to,
'\"most restrictive 'memory.swap.max' value found in the
'\"upper directories,
the command name, and
the cgroup path name (horizontally scrollable).
.TP 5
.B e
Show GPU utilization.

Per process at least the following fields are shown:
process-id,
range of GPU numbers on which the process currently runs,
GPU busy percentage on all GPUs,
memory busy percentage (i.e. read and write accesses on memory) on all GPUs,
memory occupation at the moment of the sample,
average memory occupation during the sample, and
GPU percentage.

When the
.B pmdanvidia
daemon does not run with root privileges, the GPU busy percentage and
the memory busy percentage are not available on process level.
In that case, the GPU percentage on process level reflects the
GPU memory occupation instead of the GPU busy percentage (which
is preferred).
.TP 5
.B o
Show the user-defined line of the process.

In the configuration file the keyword
.I ownprocline
can be specified with the description of a user-defined output-line.
.br
Refer to the man-page of
.BR pcp-atoprc (5)
for a detailed description.
.TP 5
.B y
Show the individual threads within a process (toggle).

Single-threaded processes are still shown as one line.
.br
For multi-threaded processes, one line represents the process
while additional lines show the activity
per individual thread (in a different color).
Depending on the option 'a' (all or active toggle), all threads are shown
or only the threads that were active during the last interval.
Depending on the option 'Y' (sort threads), the threads per
process will be sorted on the chosen sort criterion or not.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B Y
Sort the threads per process when combined with option 'y' (toggle).
.TP 5
.B u
Show the process activity accumulated per user.

Per user the following fields are shown: number of processes active
or terminated during last interval (or in total if combined with command 'a'),
accumulated CPU consumption during last interval in system and user mode,
the current virtual and resident memory space consumed by active processes
(or all processes of the user if combined with command 'a').
.br
When
.B pcp-atop
access metrics with root privileges,
the accumulated read and write throughput on disk is shown.
When the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed,
the number of receive and send network calls are shown.
.br
The last columns contain the accumulated occupation percentage for the
chosen resource (default: CPU) and the user name.
.TP 5
.B p
Show the process activity accumulated per program (i.e. process name).

Per program the following fields are shown: number of processes active
or terminated during last interval (or in total if combined with command 'a'),
accumulated CPU consumption during last interval in system and user mode,
the current virtual and resident memory space consumed by active processes
(or all processes of the user if combined with command 'a').
.br
When
.B pcp-atop
access metrics with root privileges,
the accumulated read and write throughput on disk is shown.
When the
.BR pmdabcc (1)
module 'netproc' has been installed,
the number of receive and send network calls are shown.
.br
The last columns contain the accumulated occupation percentage for the
chosen resource (default: CPU) and the program name.
.TP 5
.B j
Show the process activity accumulated per container/pod.

Per container (e.g. Docker/Podman) or pod (e.g. Kubernetes) the following fields
are shown: number of processes active
or terminated during last interval (or in total if combined with command 'a'),
accumulated CPU consumption during last interval in system and user mode,
the current virtual and resident memory space consumed by active processes
(or all processes of the user if combined with command 'a').
.br
When
.B pcp-atop
access metrics with root privileges,
the accumulated read and write throughput on disk is shown.
When the
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed,
the number of receive and send network calls are shown.
.br
The last columns contain the accumulated occupation percentage for the
chosen resource (default: CPU) and the container/pod name (CID/POD).
.TP 5
.B C
Sort the current list in the order of CPU consumption (default).
The one-but-last column changes to 'CPU'.
.TP 5
.B E
Sort the current list in the order of GPU utilization
(preferred, but only applicable
when the
.B pmdanvidia
daemon runs under root privileges) or the order of
GPU memory occupation).
The one-but-last column changes to 'GPU'.
.TP 5
.B M
Sort the current list in the order of resident memory consumption.
The one-but-last column changes to 'MEM'.
In case of sorting on memory,
the full process list will be shown (not only the active processes).
.TP 5
.B D
Sort the current list in the order of disk accesses issued.
The one-but-last column changes to 'DSK'.
.TP 5
.B N
Sort the current list in the order of network bandwidth (received
and transmitted).
The one-but-last column changes to 'NET'.
.TP 5
.B A
Sort the current list automatically in the order of the most busy
system resource during this interval.
The one-but-last column shows either 'ACPU', 'AMEM', 'ADSK' or 'ANET'
(the preceding 'A' indicates automatic sorting-order).
The most busy resource is determined by comparing the weighted
busy-percentages of the system resources, as described earlier in
the section COLORS.
.br
This option remains valid until
another sorting-order is explicitly selected again.
.br
A sorting order for disk is only possible when
.B pcp-atop
runs with root privileges.
A sorting-order for network is only possible when the
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed.
.PP
Miscellaneous interactive commands:
.TP 5
.B ?
Request for help information (also the key 'h' can be pressed).
.TP 5
.B V
Request for version information (version number and date).
.TP 5
.B R
Gather and calculate the proportional set size of processes (toggle).
Gathering of all values that are needed to calculate the PSIZE of a process
is a very time-consuming task, so this key should only be active when
analyzing the resident memory consumption of processes.
.TP 5
.B W
Get the WCHAN per thread (toggle).
Gathering of the WCHAN string per thread
is a relatively time-consuming task, so this key should only be made
active when analyzing the reason for threads to be in sleep state.
.TP 5
.B x
Suppress colors to highlight critical resources (toggle).
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B z
The pause key can be used to freeze the current situation in order to
investigate the output on the screen.
While
.B pcp-atop
is paused, the keys described above can be pressed to show other
information about the current list of processes.
Whenever the pause key is pressed again,
.B pcp-atop
will continue with the next sample.
.br
The pause key can be used in text mode and bar graph mode.
.TP 5
.B i
Modify the interval timer (default: 10 seconds).
If an interval timer of 0 is
entered, the interval timer is switched off.
In that case a new sample can
only be triggered manually by pressing the key 't'.
.br
The interval can be modified in text mode and bar graph mode.
.TP 5
.B t
Trigger a new sample manually.
This key can be pressed if the current sample
should be finished before the timer has exceeded,
or if no timer is set at all (interval timer defined as 0).
In the latter case
.B pcp-atop
can be used as a stopwatch to measure the load being caused by a
particular application transaction, without knowing on beforehand how many
seconds this transaction will last.
.br
This key can be used in text mode and bar graph mode.

When viewing the contents of an archive folio, this key can be used to
show the next sample from the folio.
.TP 5
.B T
When viewing the contents of an archive folio, this key can be used to
show the previous sample from the folio.
.br
This key can be used in text mode and bar graph mode.
.TP 5
.B b
When viewing the contents of an archive folio, this key can be used to
move to a certain timestamp within the file (either forward or backward).
.br
This key can be used in text mode and bar graph mode.
.TP 5
.B r
Reset all counters to zero to see the system and process activity since
boot again.
.br
This key can be used in text mode and bar graph mode.

When viewing the contents of an archive, this key can be used to rewind
to the beginning of the file again.
.TP 5
.B U
Specify a search string for specific user names as a regular expression.
From now on, only (active) processes will be shown from a user which matches
the regular expression.
The system statistics are still system wide.
If the Enter-key is pressed without specifying a name, (active)
processes of all users will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B I
Specify a list with one or more PIDs to be selected.
From now on, only processes will be shown with a PID which matches
one of the given list.
The system statistics are still system wide.
If the Enter-key is pressed without specifying a PID, all (active)
processes will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B P
Specify a search string for specific process names as a regular expression.
From now on, only processes will be shown with a name which matches the
regular expression.
The system statistics are still system wide.
If the Enter-key is pressed without specifying a name, all (active)
processes will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B /
Specify a specific command line search string as a regular expression.
From now on, only processes will be shown with a command line which
matches the regular expression.
The system statistics are still system wide.
If the Enter-key is pressed without specifying a string, all (active)
processes will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B J
Specify a container id (e.g. Docker or Podman) or pod name (e.g. Kubernetes)
of maximum 15 characters. In case the name is longer, the last 15 characters
are expected.
From now on, only processes will be shown that run in that specific
container or pod.
The system statistics are still system wide.
If the Enter-key is pressed without specifying a container id or pod name,
all (active) processes will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B Q
Specify a comma-separated list of process state characters.
From now on, only processes will be shown that are in those specific
process states.
Accepted states are: R (running), S (sleeping), D (disk sleep),
T (stopped), t (tracing stop), X (dead), Z (zombie) and P (parked).
The system statistics are still system wide.
If the Enter-key is pressed without specifying a state,
all (active) processes will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B S
Specify search strings for specific logical volume names,
specific disk names and specific network interface names.
All search strings are interpreted as a regular expressions.
From now on, only those system resources are shown that match
the concerning regular expression.
If the Enter-key is pressed without specifying a search string, all (active)
system resources of that type will be shown again.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B a
The 'all/active' key can be used to toggle between only showing/accumulating
the processes that were active during the last interval (default) or
showing/accumulating all processes.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B G
By default,
.B pcp-atop
shows/accumulates the processes that are alive and the processes
that are exited during the last interval.
With this key (toggle),
showing/accumulating the processes that are exited can be suppressed.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B f
Show a fixed (maximum) number of header lines for system resources (toggle).
By default only the lines are shown about system resources (CPUs, paging,
logical volumes, disks, network interfaces) that really have been active
during the last interval.
With this key you can force
.B pcp-atop
to show lines of inactive resources as well.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B F
Suppress sorting of system resources (toggle).
By default system resources (CPUs, logical volumes, disks,
network interfaces) are sorted on utilization.
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B 1
Show relevant counters as an average per second (in the format '..../s')
instead of as a total during the interval (toggle).
.br
Whether this key is active or not can be seen in the header line.
.TP 5
.B l
Limit the number of system level lines for the counters per-cpu,
the active disks and the network interfaces.
By default lines are shown of all CPUs, disks and network interfaces
which have been active during the last interval.
Limiting these lines can be useful on systems with huge number CPUs,
disks or interfaces in order to be able to run
.B pcp-atop
on a screen/window with e.g. only 24 lines.
.br
For all mentioned resources the maximum number of lines can be specified
interactively. When using the flag
.B \-l
the maximum number of per-cpu lines is set to 0,
the maximum number of disk lines to 5 and
the maximum number of interface lines to 3.
These values can be modified again in interactive mode.
.TP 5
.B k
Send a signal to an active process (a.k.a. kill a process).
.TP 5
.B q
Quit the program.
.br
This key can be used in text mode and bar graph mode.
.TP 5
.B PgDn
Show the next page of the process/thread list.
.br
With the arrow-down key the list can be scrolled downwards with single lines.
.TP 5
.B ^F
Show the next page of the process/thread list (forward).
.br
With the arrow-down key the list can be scrolled downwards with single lines.
.TP 5
.B PgUp
Show the previous page of the process/thread list.
.br
With the arrow-up key the list can be scrolled upwards with single lines.
.TP 5
.B ^B
Show the previous page of the process/thread list (backward).
.br
With the arrow-up key the list can be scrolled upwards with single lines.
.TP 5
.B ^L
Redraw the screen.
.SH PCP DATA STORAGE
In order to store system and process level statistics for long-term
analysis (e.g. to check the system load and the active processes running
yesterday between 3:00 and 4:00 PM),
.B pcp-atop
can store the system and process level statistics in the PCP archive format,
as an archive folio (see
.BR mkaf (1)).
.br
All information about processes and threads is stored in the archive.
.br
The interval (default: 10 seconds) and number of samples (default: infinite)
can be passed as last arguments.
Instead of the number of samples, the flag
.B \-S
can be used to indicate that
.B pcp-atop
should finish anyhow before midnight.
.PP
A PCP archive can be read and visualized again with the
.B \-r
option.
The argument is a comma-separated list of names, each
of which may be the base name of an archive or the name of a directory
containing one or more archives.
If no argument is specified, the file
.BI $PCP_LOG_DIR/pmlogger/HOST/YYYYMMDD
is opened for input (where
.I YYYYMMDD
are digits representing the current date, and HOST is the hostname of the
machine being logged).
If a filename is specified in the format YYYYMMDD (representing any valid
date), the file
.BI $PCP_LOG_DIR/pmlogger/HOST/YYYYMMDD
is opened.
If a filename with the symbolic name
.BI y
is specified, yesterday's daily logfile is opened
(this can be repeated so 'yyyy' indicates the logfile of four days ago).
.br
The samples from the file can be viewed interactively by using the key 't'
to show the next sample, the key 'T' to show the previous sample, the
key 'b' to branch to a particular time or the key 'r' to rewind to
the beginning of the file.
These keys can be used in text mode as well as
in bar graph mode.
.br
When output is redirected to a file or pipe,
.B pcp-atop
prints all samples in plain ASCII.
The default line length is 80 characters
in that case. With the flag
.B \-L
followed by an alternate line length, more (or less) columns will be shown.
.br
With the flag
.B \-b
(begin time) and/or
.B \-e
(end time) followed by a time argument of the form [YYYYMMDD]hhmm[ss],
a certain time period within the archive can be selected.
.SH OUTPUT DESCRIPTION
The first sample shows the system level activity since boot
(the elapsed time in the header shows the time since boot).
.PP
In text mode,
.B pcp-atop
first shows the lines related to system level activity for every sample.
If a particular system resource has not been used during the interval,
the entire line related to this resource is suppressed. So the number of
system level lines may vary for each sample.
.br
After that a list is shown of processes which have been active
during the last
interval.
This list is by default sorted on CPU consumption, but this order
can be changed by the keys which are previously described.
.PP
If values have to be shown by
.B pcp-atop
which do not fit in the column width,
another format is used. If e.g. a CPU consumption of 233216 milliseconds
should be shown in a column width of 4 positions, it is shown as '233s'
(in seconds).
For large memory figures, another unit is chosen if the value does not fit
(Mb instead of Kb, Gb instead of Mb, Tb instead of Gb, etcetera).
For other values, a kind of exponent notation is used (value 123456789
shown in a column of 5 positions gives 123e6).
.SH OUTPUT DESCRIPTION \- SYSTEM LEVEL
The system level information in text mode consists
of the following output lines:
.TP 5
.B PRC
Process and thread level totals.
.br
This line contains the total CPU time consumed
in system mode ('sys') and in user mode ('user'),
the total number of processes present at this moment ('#proc'),
the total number of threads present at this moment in state 'running'
('#trun'), 'sleeping interruptible' ('#tslpi'), 'sleeping uninterruptible'
('#tslpu') and 'idle' ('#tidle'),
the number of zombie processes ('#zombie'),
the number of clone system calls ('clones'), and
the number of processes that ended during the interval
('#exit') when process accounting is used. Instead of '#exit' the last
column may indicate that process accounting could not be activated
('no procacct').
.br
If the screen width does not allow all of these counters,
only a relevant subset is shown.
.TP 5
.B CPU
CPU utilization.
.br
At least one line is shown for the total occupation of all CPUs together.
.br
In case of a multi-processor system, an additional line is shown
for every individual processor (with 'cpu' in lower case),
sorted on activity.
Inactive CPUs will not be shown by default.
The lines showing the per-cpu occupation contain the CPU number in
the field combined with the wait percentage.

Every line contains the percentage of CPU time spent in
kernel mode by all active processes ('sys'),
the percentage of cpu time consumed in user mode ('user') for all
active processes (including processes running with a nice value larger than
zero), the percentage of CPU time spent for interrupt handling ('irq')
including softirq, the percentage of unused CPU time while no processes
were waiting for disk I/O ('idle'), and
the percentage of unused CPU time while at least one process was waiting
for disk I/O ('wait').
.br
In case of per-cpu occupation, the CPU number and
the wait percentage ('w') for that CPU.
The number of lines showing the per-cpu occupation can be limited.

For virtual machines, the steal-percentage ('steal') shows
the percentage of CPU time stolen by other virtual machines
running on the same hardware.
.br
For physical machines hosting one or more virtual machines,
the guest-percentage ('guest') shows
the percentage of CPU time used by the virtual machines.
Notice that this percentage overlaps the user-percentage!

When PMC performance monitoring counters are supported by the CPU
and the kernel (and
.BR pmdaperfevent (1)
runs with root privileges), the number of instructions per
CPU cycle ('ipc') is shown.
The first sample always shows the value 'initial',
because the counters are just activated at the moment that
.B pcp-atop
is started.
.br
When the
.I CPU busy percentage is high
and the IPC is less than 1.0,
it is likely that the CPU is frequently waiting for memory access
during instruction execution (larger CPU caches or faster memory might
be helpful to improve performance).
When the
.I CPU busy percentage is high
and the IPC is greater than 1.0,
it is likely that the CPU is instruction-bound (more/faster cores
might be helpful to improve performance).
.br
Furthermore, per CPU the effective number of cycles ('cycl') is shown.
This value can reach the current CPU frequency if such CPU is 100% busy.
When an idle CPU is halted, the number of effective cycles can
be (considerably) lower than the current frequency.
.br
Notice that the
.I average
instructions per cycle and number of cycles is shown in the CPU line
for all CPUs.
.br
See also:
.I http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html

In case of frequency scaling, all previously mentioned CPU percentages
are relative to the used scaling of the CPU during the interval.
If a CPU has been active for e.g. 50% in user mode during the interval
while the frequency scaling of that CPU was 40%, only 20% of the full
capacity of the CPU has been used in user mode.
.br
In case that the kernel module 'cpufreq_stats' is active
(after issuing 'modprobe cpufreq_stats'), the
.I average
frequency ('avgf') and the
.I average
scaling percentage ('avgscal') is shown. Otherwise the
.I current
frequency ('curf') and the
.I current
scaling percentage ('curscal') is shown at the moment that the sample
is taken.
Notice that
.I average
values for frequency and scaling are shown in the CPU line for every CPU.
.br
Frequency scaling statistics are only gathered for systems
with maximum 8 CPUs, since gathering of these values per CPU
is very time consuming.

If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.TP 5
.B CPL
CPU load information.
.br
This line contains the load average figures reflecting the number
of threads that are available to run on a CPU (i.e. part of the runqueue)
or that are waiting for disk I/O. These figures are averaged over
1 ('avg1'), 5 ('avg5') and 15 ('avg15') minutes.
.br
Furthermore the number of context switches ('csw'), the number
of serviced interrupts ('intr') and the number of available CPUs are shown.

If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.TP 5
.B GPU
GPU utilization (Nvidia).
.br
Read the section GPU STATISTICS GATHERING in this document to find the details
about the activation of the
.B pmdanvidia
daemon.

In the first column of every line, the bus-id (last nine characters) and
the GPU number are shown.
The subsequent columns show the percentage of time that one or more kernels
were executing on the GPU ('gpubusy'), the percentage of time that global
(device) memory was being read or written ('membusy'), the occupation
percentage of memory ('memocc'), the total memory ('total'), the memory
being in use at the moment of the sample ('used'), the average memory
being in use during the sample time ('usavg'), the number of processes
being active on the GPU at the moment of the sample ('#proc'), and
the type of GPU.

If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.br
The number of lines showing the GPUs can be limited.
.TP 5
.B MEM
Memory occupation (two lines).
.br
These lines contain the total amount of physical memory
('tot'), the amount of memory which is currently free ('free'),
the amount of memory that is available for new workloads
without pushing the system into swap ('avail'),
the amount of memory in use as page cache including
the total resident shared memory ('cache'), the amount of memory within the
page cache that has to be flushed to disk ('dirty'), the amount
of memory used for filesystem meta data ('buff'), the amount of
memory being used for kernel mallocs ('slab'), the amount of
slab memory that is reclaimable ('slrec'),
the resident size of SYSV shared memory including tmpfs
but excluding static huge pages ('shmem'),
the resident size of SYSV shared memory including static huge pages ('shrss'),
the amount of SYSV shared memory that is currently swapped ('shswp'),
the amount of memory that is currently used for page tables ('pgtab'),
the number of NUMA nodes in this system ('numnode'),
the amount of memory that is currently claimed by vmware's
balloon driver ('vmbal'),
the amount of memory that is currently claimed by the ARC (cache)
of ZFSonlinux ('zfarc'),
the amount of memory for anonymous transparent huge pages ('anthp'),
the amount of memory that is claimed for huge pages ('hptot'),
the amount of huge page memory that is really in use ('hpuse'),
the amount of memory that is used for TCP sockets ('tcps'), and
the amount of memory that is used for UDP sockets ('udps').

If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.TP 5
.B SWP
Swap occupation and overcommit info.
.br
This line contains the total amount of swap space on disk ('tot') and
the amount of free swap space ('free'),
the size of the swap cache ('swcac'),
the size of compressed storage used for zswap ('zswap'),
the real (decompressed) size of the pages stored in zswap ('zstor'),
the total size of the memory used for KSM ('ksuse', i.e. shared), and
the total size of the memory saved (deduped) by KSM ('kssav', i.e. sharing).
.br
Furthermore the committed virtual memory space ('vmcom') and the maximum
limit of the committed space ('vmlim', which is by default swap size
plus 50% of memory size) is shown.
The committed space is the reserved virtual space for all allocations of
private memory space for processes.
The kernel only verifies whether the
committed space exceeds the limit if strict overcommit handling is
configured (vm.overcommit_memory is 2).
.TP 5
.B LLC
Last-Level Cache of CPU info.
.br
This line contains the total memory bandwidth of LLC ('tot'),
the bandwidth of the local NUMA node ('loc'), and
the percentage of LLC in use ('LLCXX YY%').

Note that this feature depends on the 'resctrl' pseudo filesystem.
Be sure that the kernel is built with the relevant config and
take care that the pseudo-filesystem is mounted:

.B \  mount -t resctrl resctrl -o mba_MBps /sys/fs/resctrl
(on Intel)
.br
.B \  mount -t resctrl resctrl -o cdp \ \ \ \ \ /sys/fs/resctrl
(on AMD)
.TP 5
.B NUM
Memory utilization per NUMA node (not shown for single NUMA node).
.br
This line shows the total amount of physical memory of this node ('tot'),
the amount of free memory ('free'), the amount of memory for cached file data
('file'), modified cached file data ('dirty'), recently used memory ('activ'),
less recently used memory ('inact'), memory being used for kernel mallocs
('slab'), the amount of slab memory that is reclaimable ('slrec'),
shared memory including tmpfs ('shmem'), total huge pages ('hptot'),
used huge pages('hpuse'), and the fragmentation percentage ('frag').
.TP 5
.B NUC
CPU utilization per NUMA node (not shown for single NUMA node).
.br
This line shows the utilization percentages of all CPUs related to this
NUMA node, categorized for  system mode ('sys'), user mode ('user'),
user mode for niced processes ('niced'), idle mode ('idle'),
wait mode ('w' preceded by the node number), irq mode ('irq'),
softirq mode ('sirq'), steal mode ('steal'), and guest mode ('guest')
overlapping user mode.
.TP 5
.B PAG
Paging frequency.
.br
This line contains the number of scanned pages ('scan') due to the fact
that free memory drops below a particular threshold, the number of
times that the kernel tries to reclaim pages due to an urgent need ('stall'),
the number of process stalls to run memory compaction to allocate
huge pages ('compact'), the number of NUMA pages migrated ('numamig'), and
the total number of memory pages migrated successfully e.g. between
NUMA nodes or for compaction ('migrate') are shown.
.br
Also the number of memory pages the system read from block devices ('pgin'),
the number of memory pages the system wrote to block devices ('pgout'),
the number of memory pages swapped in from zswap ('zswin'),
the number of memory pages swapped out to zswap ('zswout'),
the number of memory pages the system read from swap space ('swin'),
the number of memory pages the system wrote to swap space ('swout'), and
the number of out-of-memory kills ('oomkill').
.TP 5
.B PSI
Pressure Stall Information.
.br
This line contains percentages about resource pressure related to CPU,
memory and I/O. Certain percentages refer to 'some' meaning that some
processes/threads were delayed due to resource overload. Other
percentages refer to 'full' meaning a loss of overall throughput
due to resource overload.
.br
The values 'cpusome', 'memsome', 'memfull', 'iosome' and 'iofull'
show the pressure percentage during the entire interval.
.br
The values 'cs' (cpu some), 'ms' (memory some), 'mf' (memory full),
\'is' (I/O some) and 'if' (I/O full) each show
three percentages separated by slashes:
pressure percentage over the last 10, 60 and 300 seconds.
.TP 5
.B LVM/MDD/DSK
Logical volume/multiple device/disk utilization.
.br
Per active unit one line is produced, sorted on unit activity.
Such line shows the name (e.g. VolGroup00-lvtmp for a logical volume or
sda for a hard disk), the percentage of elapsed time during which I/O requests
were issued to the device ('busy') (note that for devices serving requests in
parallel, such as RAID arrays, SSD and NVMe, this number does not reflect their
performance limits), the number of read requests issued
('read'), the number of write requests issued ('write'),
the number of discard requests issued ('discrd') if supported by kernel version,
the number of KiBytes per read ('KiB/r'),
the number of KiBytes per write ('KiB/w'),
the number of KiBytes per discard ('KiB/d') if supported by kernel version,
the number of MiBytes per second throughput for reads ('MBr/s'),
the number of MiBytes per second throughput for writes ('MBw/s'),
requests issued to the device driver but not completed ('inflt'),
the average queue depth ('avq')
and the average number of milliseconds needed by a request ('avio')
for seek, latency and data transfer.
.br
If the screen-width does not allow all of these counters,
only a relevant subset is shown.

The number of lines showing the units can be limited per class (LVM, MDD or
DSK) with the 'l' key or statically (see separate man-page of
.BR pcp-atoprc (5)).
By specifying the value 0 for a particular class, no lines will be
shown any more for that class.
.TP 5
.B NFM
Network Filesystem (NFS) mount at the client side.
.br
For each NFS-mounted filesystem, a line is shown that contains
the mounted server directory, the name of the server ('srv'),
the total number of bytes physically read from the server ('read') and
the total number of bytes physically written to the server ('write').
Data transfer is subdivided in
the number of bytes read via normal read() system calls ('nread'),
the number of bytes written via normal read() system calls ('nwrit'),
the number of bytes read via direct I/O ('dread'),
the number of bytes written via direct I/O ('dwrit'),
the number of bytes read via memory mapped I/O pages ('mread'), and
the number of bytes written via memory mapped I/O pages ('mwrit').
.TP 5
.B NFC
Network Filesystem (NFS) client side counters.
.br
This line contains the number of RPC calls issues by local processes
('rpc'), the number of read RPC calls ('read') and
write RPC calls ('rpwrite') issued to the NFS server,
the number of RPC calls being retransmitted ('retxmit')
and the number of authorization refreshes ('autref').
.TP 5
.B NFS
Network Filesystem (NFS) server side counters.
.br
This line contains the number of RPC calls received from
NFS clients ('rpc'),
the number of read RPC calls received ('cread'),
the number of write RPC calls received ('cwrit'),
the number of Megabytes/second returned to read requests by clients ('MBcr/s'),
the number of Megabytes/second passed in write requests by clients ('MBcw/s'),
the number of network requests handled via TCP ('nettcp'),
the number of network requests handled via UDP ('netudp'),
the number of reply cache hits ('rchits'),
the number of reply cache misses ('rcmiss') and
the number of uncached requests ('rcnoca').
Furthermore some error counters indicating the number of requests
with a bad format ('badfmt') or a bad authorization ('badaut'), and a
counter indicating the number of bad clients ('badcln').
.TP 5
.B NET
Network utilization (TCP/IP).
.br
One line is shown for activity of the transport layer (TCP and UDP), one line
for the IP layer and one line per active interface.
.br
For the transport layer,
counters are shown concerning the number of received TCP segments
including those received in error ('tcpi'),
the number of transmitted TCP segments excluding
those containing only retransmitted octets ('tcpo'),
the number of UDP datagrams received ('udpi'),
the number of UDP datagrams transmitted ('udpo'),
the number of active TCP opens ('tcpao'),
the number of passive TCP opens ('tcppo'),
the number of TCP output retransmissions ('tcprs'),
the number of TCP input errors ('tcpie'),
the number of TCP output resets ('tcpor'),
the number of UDP no ports ('udpnp'),
the number of UDP input errors ('udpie'), and
the number of TCP incorrect checksums ('csumie').
.br
If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.br
These counters are related to IPv4 and IPv6 combined.

For the IP layer, counters are shown concerning the number of IP datagrams
received from interfaces, including those received in error ('ipi'),
the number of IP datagrams that local higher-layer protocols offered for
transmission ('ipo'), the number of received IP datagrams which were
forwarded to other interfaces ('ipfrw'), the number of IP datagrams which
were delivered to local higher-layer protocols ('deliv'),
the number of received ICMP datagrams ('icmpi'), and
the number of transmitted ICMP datagrams ('icmpo').
.br
If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.br
These counters are related to IPv4 and IPv6 combined.

For every active network interface one line is shown,
sorted on the interface activity.
Such line shows the name of the interface and its busy percentage
in the first column.
The busy percentage for half duplex is determined by comparing the
interface speed with the number of bits transmitted and received
per second; for full duplex the interface speed is compared with the
highest of either the transmitted or the received bits.
When the interface speed can not be determined (e.g. for the loopback
interface), '---' is shown instead of the percentage.
.br
Furthermore the number of received packets ('pcki'),
the number of transmitted packets ('pcko'),
the line speed of the interface ('sp'),
the effective amount of bits received per second ('si'),
the effective amount of bits transmitted per second ('so'),
the number of collisions ('coll'),
the number of received multicast packets ('mlti'),
the number of errors while receiving a packet ('erri'),
the number of errors while transmitting a packet ('erro'),
the number of received packets dropped ('drpi'), and
the number of transmitted packets dropped ('drpo').
.br
If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.br
The number of lines showing the network interfaces can be limited.
.TP 5
.B IFB
Infiniband utilization.
.br
For every active Infiniband port one line is shown,
sorted on activity.
Such line shows the name of the port and its busy percentage
in the first column.
The busy percentage is determined by taking the
highest of either the transmitted or the received bits during the interval,
multiplying that value by the number of lanes and comparing it against the
maximum port speed.
.br
Furthermore the number of received packets divided by the
number of lanes ('pcki'),
the number of transmitted packets divided by the number of lanes ('pcko'),
the maximum line speed ('sp'),
the effective amount of bits received per second ('si'),
the effective amount of bits transmitted per second ('so'), and
the number of lanes ('lanes').
.br
If the screen-width does not allow all of these counters,
only a relevant subset is shown.
.br
The number of lines showing the Infiniband ports can be limited.
.SH OUTPUT DESCRIPTION \- PROCESS LEVEL
Following the system level information, a list of processes is shown
in text mode from which the
resource utilization has changed during the last interval.
These processes might have used CPU time or issued disk or network requests.
However a process is also shown if part of it has been
paged out due to lack of memory (while
the process itself was in sleep state).
.PP
Per process the following fields may be shown (in alphabetical order),
depending on the current output mode as described in the section
INTERACTIVE COMMANDS and depending on the current width of your window:
.TP 9
.B AVGRSZ
The average size of one read-action on disk.
.TP 9
.B AVGWSZ
The average size of one write-action on disk.
.TP 9
.B BANDWI
Total bandwidth for received TCP and UDP packets consumed by this process
(bits-per-second).
This value can be compared with the value 'si'
on interface level (used bandwidth per interface).
.br
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed.
.TP 9
.B BANDWO
Total bandwidth for sent TCP and UDP packets consumed by this process
(bits-per-second).
This value can be compared with the value 'so'
on interface level (used bandwidth per interface).
.br
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed.
.TP 9
.B BDELAY
Aggregated block I/O delay, i.e. time waiting for disk I/O.
.TP 9
.B CGROUP
Path name of the cgroup (version 2) to which this process belongs.
This path name is relative to the cgroup root directory, which
is usually '/sys/fs/cgroup'.
.TP 9
.B CID/POD
Container id (e.g. Docker or Podman) or pod name (e.g. Kubernetes) referring to
the container/pod in which the process/thread is running.
When a pod name is longer than 15 characters, only the last 15 characters
are shown.

If a process has been started and finished during the last
interval, a '?' is shown because the container id or pod name is not part of
the standard process accounting record.

This column will only be shown when
.I atop
runs with superuser privileges and when at least one containerized
process is detected.
.TP 9
.B CMD
The name of the process.
This name can be surrounded by "less/greater than"
signs ('<name>') which means that the process has finished during the last
interval. A single accounting record is written for the
entire process on termination of the last thread in the process. When the
main thread exits, the process name is changed to the thread name.
.br
Behind the abbreviation 'CMD' in the header line, the current page number and
the total number of pages of the process/thread list are shown.
.TP 9
.B COMMAND-LINE
The full command line of the process (including arguments). If the length of
the command line exceeds the length of the screen line, the arrow
keys \-> and <\- can be used for horizontal scroll.

The '-z <regex>' command
line option can be used to prepend matching environment variables to the
displayed command line. POSIX Extended Regular Expression syntax are used
(see regex(3)). When a matching environment variable is too long (exceeding
the buffer that should contain the command line), it will be truncated.
.br
Behind the verb 'COMMAND-LINE' in the header line, the current page number
and the total number of pages of the process/thread list are shown.
.TP 9
.B CPU
The occupation percentage of this process related to the available capacity
for this resource on system level.
.\".TP 9
.\".B CPUMAX
.\"The 'cpu.max' value of the cgroup (version 2) to which this process belongs,
.\"calculated as percentage of one CPU.
.\".TP 9
.\".B CPUMAXR
.\"The most restrictive (i.e. effective) 'cpu.max' value defined by the
.\"upper directories of the cgroup (version 2) to which this process belongs,
.\"calculated as percentage of one CPU.
.TP 9
.B CPUNR
The identification of the CPU the (main) thread is running on
or has recently been running on.
.\".TP 9
.\".B CPUWGT
.\"The 'cpu.weight' value of the cgroup (version 2) to which this process belongs.
.TP 9
.B CTID
Container ID (OpenVZ).
If a process has been started and finished during the last
interval, a '?' is shown because the container ID is not part of
the standard process accounting record.
.TP 9
.B DSK
The occupation percentage of this process related to the total load that
is produced by all processes (i.e. total disk accesses
by all processes during the last interval).
.br
This information is shown when per process "storage accounting" is active
in the kernel.
.TP 9
.B EGID
Effective group-id under which this process executes.
.TP 9
.B ENDATE
Date that the process has been finished.
If the process is still running, this field shows 'active'.
.TP 9
.B ENTIME
Time that the process has been finished.
If the process is still running, this field shows 'active'.
.TP 9
.B ENVID
Virtual environment identified (OpenVZ only).
.TP 9
.B EUID
Effective user-id under which this process executes.
.TP 9
.B EXC
The exit code of a terminated process (second position of column 'ST' is E)
or the fatal signal number (second position of column 'ST' is S or C).
.TP 9
.B FSGID
Filesystem group-id under which this process executes.
.TP 9
.B FSUID
Filesystem user-id under which this process executes.
.TP 9
.B GPU
When the
.B pmdanvidia
daemon does not run with root privileges, the GPU percentage
reflects the GPU memory occupation percentage (memory of all GPUs is 100%).
.br
When the
.B pmdanvidia
daemon runs with root privileges, the GPU percentage
reflects the GPU busy percentage.
.TP 9
.B GPUBUSY
Busy percentage on all GPUs (one GPU is 100%).
.br
When the
.B pmdanvidia
daemon does not run with root privileges, this value is not available.
.TP 9
.B GPUNUMS
Comma-separated list of GPUs used by the process
during the interval.
When the comma-separated list exceeds
the width of the column, a hexadecimal value is shown.
.TP 9
.B LOCKSZ
The virtual amount of memory being locked (i.e. non-swappable) by this process
(or user).
.TP 9
.B MAJFLT
The number of page faults issued by this process that have been solved
by creating/loading the requested memory page.
.TP 9
.B MEM
The occupation percentage of this process related to the available capacity
for this resource on system level.
.TP 9
.B MEMAVG
Average memory occupation during the interval on all used GPUs.
.TP 9
.B MEMBUSY
Busy percentage of memory on all GPUs (one GPU is 100%), i.e.
the time needed for read and write accesses on memory.
.br
When the
.B pmdanvidia
daemon does not run with root privileges, this value is not available.
.\".TP 9
.\".B MEMMAX
.\"The 'memory.max' value of the cgroup (version 2) to which this process belongs.
.TP 9
.B MEMNOW
Memory occupation at the moment of the sample on all used GPUs.
.\".TP 9
.\".B MMMAXR
.\"The most restrictive (i.e. effective) 'memory.max' value defined by the
.\"upper directories of the cgroup (version 2) to which this process belongs.
.TP 9
.B MINFLT
The number of page faults issued by this process that have been solved
by reclaiming the requested memory page from the free list of pages.
.TP 9
.B NET
The occupation percentage of this process related to the total load that
is produced by all processes (i.e. consumed network bandwidth
of all processes during the last interval).
.br
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' has been installed.
.TP 9
.B NICE
The more or less static priority that can be given to a process on a
scale from \-20 (high priority) to +19 (low priority).
.TP 9
.B NIVCSW
Number of times the process/thread was context-switched involuntarily,
in case that the time slice expired.
.TP 9
.B NPROCS
The number of active and terminated processes accumulated for this user
or program.
.TP 9
.B NVCSW
Number of times that the process/thread was context-switched voluntarily in
case of a blocking system call, e.g. to wait for an I/O operation to complete.
.TP 9
.B PID
Process-id.
.TP 9
.B POLI
The policies 'norm' (normal, which is SCHED_OTHER), 'btch' (batch)
and 'idle' refer to timesharing processes.
The policies 'fifo' (SCHED_FIFO) and 'rr' (round robin, which is SCHED_RR)
refer to realtime processes.
.TP 9
.B PPID
Parent process-id.
.TP 9
.B PRI
The process' priority ranges from 0 (highest priority) to 139 (lowest
priority).
Priority 0 to 99 are used for realtime processes (fixed
priority independent of their behavior) and priority 100 to 139 for
timesharing processes (variable priority depending on their recent
CPU consumption and the nice value).
.TP 9
.B PSIZE
The proportional memory size of this process (or user).
.br
Every process shares resident memory with other processes.
E.g. when a
particular program is started several times, the code pages (text) are
only loaded once in memory and shared by all incarnations.
Also the code
of shared libraries is shared by all processes using that shared library,
as well as shared memory and memory-mapped files.
For the PSIZE calculation of a process, the resident memory of a process
that is shared with other processes is divided by the number of sharers.
This means, that every process is accounted for a proportional part of
that memory.
Accumulating the PSIZE values of all processes in the
system gives a reliable impression of the total resident memory consumed
by all processes.
.br
Since gathering of all values that are needed to calculate the PSIZE is a
very time-consuming task, the 'R' key (or '\-R' flag) should
be active.
Gathering these values also requires superuser privileges
(otherwise '?K' is shown in the output).
.TP 9
.B RDDSK
The read data transfer issued physically on disk (so reading from the
disk cache is not accounted for).
.br
Unfortunately, the kernel aggregates the
data transfer of a process to the data transfer of its parent process when
terminating, so you might see transfers for (parent) processes like
cron, bash or init, that are not really issued by them.
.TP 9
.B RDELAY
Runqueue delay, i.e. time spent waiting on a runqueue.
.TP 9
.B RGID
The real group-id under which the process executes.
.TP 9
.B RGROW
The amount of resident memory that the process has grown during the last
interval.
A resident growth can be caused by touching memory pages which
were not physically created/loaded before (load-on-demand).
Note that a resident growth can also be negative e.g. when part of the process
is paged out due to lack of memory or when the process frees dynamically
allocated memory.
For a process which started during the last interval, the resident growth
reflects the total resident size of the process at that moment.
.TP 9
.B RNET
The number of TCP- and UDP packets received by this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netatop module is installed.
.br
If a process has finished during the last interval, no value is shown
since network counters are not part of the standard process accounting record.
.TP 9
.B RSIZE
The total resident memory usage consumed by this process (or user).
Notice that the RSIZE of a process includes all resident memory used
by that process, even if certain memory parts are shared with other processes
(see also the explanation of PSIZE).
.TP 9
.B RTPR
Realtime priority according the POSIX standard.
Value can be 0 for a timesharing process (policy 'norm', 'btch' or 'idle')
or ranges from 1 (lowest) till 99 (highest) for a realtime process
(policy 'rr' or 'fifo').
.TP 9
.B RUID
The real user-id under which the process executes.
.TP 9
.B S
The current state of the (main) thread: 'R' for running
(currently processing or in the runqueue), 'S' for sleeping interruptible
(wait for an event to occur), 'D' for sleeping non-interruptible, 'Z' for
zombie (waiting to be synchronized with its parent process), 'T' for
stopped (suspended or traced), 'W' for swapping, and 'E' (exit) for
processes which have finished during the last interval.
.TP 9
.B SGID
The saved group-id of the process.
.TP 9
.B SNET
The number of TCP and UDP packets transmitted by this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netatop module is installed.
.TP 9
.B ST
The status of a process.
.br
The first position indicates if the process has been
started during the last interval (the value
.I N
means 'new process').

The second position indicates if the process has been
finished during the last interval.
.br
The value
.I E
means 'exit' on the process' own initiative; the exit code is displayed
in the column 'EXC'.
.br
The value
.I S
means that the process has been terminated involuntarily
by a signal; the signal number is displayed in the in the column 'EXC'.
.br
The value
.I C
means that the process has been terminated involuntarily
by a signal, producing a core dump in its current directory;
the signal number is displayed in the column 'EXC'.
.TP 9
.B STDATE
The start date of the process.
.TP 9
.B STTIME
The start time of the process.
.TP 9
.B SUID
The saved user-id of the process.
.\".TP 9
.\".B SWPMAX
.\"The 'memory.swap.max' value of the cgroup (version 2) to which this
.\"process belongs.
.TP 9
.B SWAPSZ
The swap space consumed by this process (or user).
.\".TP 9
.\".B SWMAXR
.\"The most restrictive (i.e. effective) 'memory.swap.max' value defined by the
.\"upper directories of the cgroup (version 2) to which this process belongs.
.TP 9
.B SYSCPU
CPU time consumption of this process in system mode (kernel mode), usually
due to system call handling.
.TP 9
.B TCPRASZ
The average size of a received TCP buffer in bytes.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B TCPRCV
The number of tcp_recvmsg()/tcp_cleanup_rbuf() calls from this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B TCPSASZ
The average size of a TCP buffer requested to be transmitted in bytes.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B TCPSND
The number of tcp_sendmsg() calls from this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B THR
Total number of threads within this process.
All related threads are contained in a thread group, represented by
.B pcp-atop
as one line or as a separate line when the 'y' key (or \-y flag) is active.
.TP 9
.B TID
Thread-id.
All threads within a process run with the same PID but with a
different TID.
This value is shown for individual threads in
multi-threaded processes (when using the key 'y').
.TP 9
.B TIDLE
Number of threads within this process that are in the state 'idle' (I),
i.e. uninterruptible sleeping threads that do not count for the load average.
.TP 9
.B TRUN
Number of threads within this process that are in the state 'running' (R).
.TP 9
.B TSLPI
Number of threads within this process that are in the
state 'interruptible sleeping' (S).
.TP 9
.B TSLPU
Number of threads within this process that are in the
state 'uninterruptible sleeping' (D).
.TP 9
.B UDPRASZ
The average size of a received UDP buffer in bytes.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B UDPRCV
The number of udp_recvmsg()/skb_consume_udp() calls from this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B UDPSASZ
The average size of a UDP buffer requested to be transmitted in bytes.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B UDPSND
The number of udp_sendmsg() calls from this process.
This information will only be shown when the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is enabled.
.TP 9
.B USRCPU
CPU time consumption of this process in user mode, due to processing the
own program text.
.TP 9
.B VDATA
The virtual memory size of the private data used by this process
(including heap and shared library data).
.TP 9
.B VGROW
The amount of virtual memory that the process has grown during the last
interval. A virtual growth can be caused by e.g. issuing a malloc()
or attaching a shared memory segment. Note that a virtual growth can also
be negative by e.g. issuing a free() or detaching a shared memory segment.
For a process which started during the last interval, the virtual growth
reflects the total virtual size of the process at that moment.
.TP 9
.B VPID
Virtual process-id (within an OpenVZ container).
If a process has been started and finished during the last
interval, a '?' is shown because the virtual process-id is not part of
the standard process accounting record.
.TP 9
.B VSIZE
The total virtual memory usage consumed by this process (or user).
.TP 9
.B VSLIBS
The virtual memory size of the (shared) text of all shared libraries used
by this process.
.TP 9
.B VSTACK
The virtual memory size of the (private) stack used by this process
.TP 9
.B VSTEXT
The virtual memory size of the (shared) text of the executable program.
.TP 9
.B WCHAN
Wait channel of thread in sleep state, i.e. the name of the kernel function
in which the thread has been put asleep.
.br
Since determining the name string of the kernel function is a
relatively time-consuming task, the 'W' key (or '-W' flag) should
be active.
.TP 9
.B WRDSK
The write data transfer issued physically on disk (so writing to the
disk cache is not accounted for).
This counter is maintained for the application process that writes its
data to the cache (assuming that this data is physically transferred
to disk later on).
Notice that disk I/O needed for swapping is not taken into account.
.br
Unfortunately, the kernel aggregates the
data transfer of a process to the data transfer of its parent process when
terminating, so you might see transfers for (parent) processes like
cron, bash or init, that are not really issued by them.
.TP 9
.B WCANCL
The write data transfer previously accounted for this process
or another process that has been cancelled.
Suppose that a process writes new data to a file and that data is removed
again before the cache buffers have been flushed to disk.
Then the original process shows the written data as WRDSK, while
the process that removes/truncates the file shows
the unflushed removed data as WCANCL.
.SH PARSABLE OUTPUT
With the flag
.B \-P
followed by a list of one or more labels (comma-separated),
parsable output is produced for each sample.
The labels that can be specified for system-level statistics
correspond to the labels (first verb of each line)
that can be found in the interactive output:
"CPU", "cpu", "CPL", "GPU", "MEM", "SWP", "PAG", "PSI", "LVM", "MDD",
"DSK", "NFM", "NFC", "NFS", "NET", "IFB", "LLC", "NUM" and "NUC".
.br
For process-level statistics special labels are introduced:
"PRG" (general), "PRC" (CPU), "PRE" (GPU), "PRM" (memory), "PRD"
(disk, only if "storage accounting" is active) and "PRN" (only if
the optional
.BR pmdabpf (1)
or
.BR pmdabcc (1)
netproc module is installed).
.br
With the label "ALL", all system and process level statistics are shown.
.PP
The command and command line in the parsable output might contain spaces
and are therefore by default surrounded by parenthesis. However, since
a space is often used as separator between the fields by parsing tools,
with the additional flag
.B -Z
it is possible to exchange the spaces in the command (line) by
underscores and omit the parenthesis.
.PP
For every interval all requested lines are shown whereafter
.B pcp-atop
shows a line just containing the label "SEP" as a separator before the
lines for the next sample are generated.
.br
When a sample contains the values since boot,
.B pcp-atop
shows a line just containing the label "RESET" before the
lines for this sample are generated.
.PP
The first part of each output-line consists of the following six fields:
.B label
(the name of the label),
.B host
(the name of this machine),
.B epoch
(the time of this interval as number of seconds since 1-1-1970),
.B date
(date of this interval in format YYYY/MM/DD),
.B time
(time of this interval in format HH:MM:SS), and
.B interval
(number of seconds elapsed for this interval).
.PP
The subsequent fields of each output-line depend on the label:
.TP 9
.B CPU
Subsequent fields:
total number of clock-ticks per second for this machine,
number of processors,
consumption for all CPUs in system mode (clock-ticks),
consumption for all CPUs in user mode (clock-ticks),
consumption for all CPUs in user mode for niced processes (clock-ticks),
consumption for all CPUs in idle mode (clock-ticks),
consumption for all CPUs in wait mode (clock-ticks),
consumption for all CPUs in irq mode (clock-ticks),
consumption for all CPUs in softirq mode (clock-ticks),
consumption for all CPUs in steal mode (clock-ticks),
consumption for all CPUs in guest mode (clock-ticks) overlapping user mode,
frequency of all CPUs and frequency percentage of all CPUs.
.TP 9
.B cpu
Subsequent fields:
total number of clock-ticks per second for this machine,
processor-number,
consumption for this CPU in system mode (clock-ticks),
consumption for this CPU in user mode (clock-ticks),
consumption for this CPU in user mode for niced processes (clock-ticks),
consumption for this CPU in idle mode (clock-ticks),
consumption for this CPU in wait mode (clock-ticks),
consumption for this CPU in irq mode (clock-ticks),
consumption for this CPU in softirq mode (clock-ticks),
consumption for this CPU in steal mode (clock-ticks),
consumption for this CPU in guest mode (clock-ticks) overlapping user mode,
frequency of all CPUs, frequency percentage of all CPUs,
instructions executed by all CPUs and cycles for all CPUs.
.TP 9
.B CPL
Subsequent fields:
number of processors,
load average for last minute,
load average for last five minutes,
load average for last fifteen minutes,
number of context-switches, and
number of device interrupts.
.TP 9
.B GPU
Subsequent fields:
GPU number, bus-id string, type of GPU string,
GPU busy percentage during last second (-1 if not available),
memory busy percentage during last second (-1 if not available),
total memory size (KiB), used memory (KiB) at this moment,
number of samples taken during interval,
cumulative GPU busy percentage during the interval (to be divided
by the number of samples for the average busy percentage,
-1 if not available),
cumulative memory busy percentage during the interval (to be divided
by the number of samples for the average busy percentage,
-1 if not available), and
cumulative memory occupation during the interval (to be divided
by the number of samples for the average occupation).
.TP 9
.B MEM
Subsequent fields:
page size for this machine (in bytes),
size of physical memory (pages),
size of free memory (pages),
size of page cache (pages),
size of buffer cache (pages),
size of slab (pages),
dirty pages in cache (pages),
reclaimable part of slab (pages),
total size of vmware's balloon pages (pages),
total size of shared memory (pages),
size of resident shared memory (pages),
size of swapped shared memory (pages),
smaller huge page size (in bytes),
total size of smaller huge pages (huge pages),
size of free smaller huge pages (huge pages),
size of ARC (cache) of ZFSonlinux (pages),
size of sharing pages for KSM (pages),
size of shared pages for KSM (pages),
size of memory used for TCP sockets (pages),
size of memory used for UDP sockets (pages),
size of pagetables (pages),
larger huge page size (in bytes),
total size of larger huge pages (huge pages),
size of free larger huge pages (huge pages),
size of available memory (pages) for new workloads without swapping, and
size of anonymous transparent huge pages ('normal' pages).
.TP 9
.B SWP
Subsequent fields:
page size for this machine (in bytes),
size of swap (pages),
size of free swap (pages),
size of swap cache (pages),
size of committed space (pages),
limit for committed space (pages),
size of the swap cache (pages),
the real (decompressed) size of the pages stored
in zswap (pages), and
the size of compressed storage used for zswap (pages).
.TP 9
.B LLC
Subsequent fields:
LLC id, percentage of LLC in use,
total memory bandwidth of this LLC (in bytes), and
memory bandwidth on local NUMA node of this LLC (in bytes).
.TP 9
.B PAG
Subsequent fields:
page size for this machine (in bytes),
number of page scans,
number of allocstalls,
0 (future use),
number of swapins,
number of swapouts,
number of oomkills (-1 when counter not present),
number of process stalls to run memory compaction,
number of pages successfully migrated in total,
number of NUMA pages migrated,
number of pages read from block devices,
number of pages written to block devices,
number of swapins from zswap, and
number of swapouts to zswap.
.TP 9
.B PSI
Subsequent fields:
PSI statistics present on this system (n or y),
CPU some avg10, CPU some avg60, CPU some avg300,
CPU some accumulated microseconds during interval,
memory some avg10, memory some avg60, memory some avg300,
memory some accumulated microseconds during interval,
memory full avg10, memory full avg60, memory full avg300,
memory full accumulated microseconds during interval,
I/O some avg10, I/O some avg60, I/O some avg300,
I/O some accumulated microseconds during interval,
I/O full avg10, I/O full avg60, I/O full avg300, and
I/O full accumulated microseconds during interval.
.TP 9
.B LVM/MDD/DSK
For every logical volume/multiple device/hard disk one line is shown.
.br
Subsequent fields:
name,
number of milliseconds spent for I/O,
number of reads issued,
number of sectors transferred for reads,
number of writes issued,
number of sectors transferred for write,
number of discards issued (-1 if not supported),
number of sectors transferred for discards,
number of requests currently in flight (not yet completed), and
the average queue depth while the disk was busy.
.TP 9
.B NFM
Subsequent fields:
mounted NFS filesystem,
total number of bytes read,
total number of bytes written,
number of bytes read by normal system calls,
number of bytes written by normal system calls,
number of bytes read by direct I/O,
number of bytes written by direct I/O,
number of pages read by memory-mapped I/O, and
number of pages written by memory-mapped I/O.
.TP 9
.B NFC
Subsequent fields:
number of transmitted RPCs,
number of transmitted read RPCs,
number of transmitted write RPCs,
number of RPC retransmissions, and
number of authorization refreshes.
.TP 9
.B NFS
Subsequent fields:
number of handled RPCs,
number of received read RPCs,
number of received write RPCs,
number of bytes read by clients,
number of bytes written by clients,
number of RPCs with bad format,
number of RPCs with bad authorization,
number of RPCs from bad client,
total number of handled network requests,
number of handled network requests via TCP,
number of handled network requests via UDP,
number of handled TCP connections,
number of hits on reply cache,
number of misses on reply cache, and
number of uncached requests.
.TP 9
.B NET
First, one line is produced for the upper layers of the TCP/IP stack.
.br
Subsequent fields:
the verb "upper",
number of packets received by TCP,
number of packets transmitted by TCP,
number of packets received by UDP,
number of packets transmitted by UDP,
number of packets received by IP,
number of packets transmitted by IP,
number of packets delivered to higher layers by IP,
number of packets forwarded by IP,
number of input errors (UDP),
number of noport errors (UDP),
number of active opens (TCP),
number of passive opens (TCP),
number of passive opens (TCP),
number of established connections at this moment (TCP),
number of retransmitted segments (TCP),
number of input errors (TCP),
number of output resets (TCP), and
number of checksum errors on received packets (TCP).

Next, one line is shown for every interface.
.br
Subsequent fields:
name of the interface,
number of packets received by the interface,
number of bytes received by the interface,
number of packets transmitted by the interface,
number of bytes transmitted by the interface,
interface speed, and
duplex mode (0=half, 1=full).
.TP 9
.B IFB
Subsequent fields:
name of the InfiniBand interface, port number,
number of lanes, maximum rate (Mbps),
number of bytes received,
number of bytes transmitted,
number of packets received, and
number of packets transmitted.
.TP 9
.B NUM
Subsequent fields:
NUMA node number,
page size for this machine (in bytes),
the fragmentation percentage of this node,
size of physical memory (pages),
size of free memory (pages),
recently (active) used memory (pages),
less recently (inactive) used memory (pages),
size of cached file data (pages),
dirty pages in cache (pages),
slab memory being used for kernel mallocs (pages),
slab memory that is reclaimable (pages),
shared memory including tmpfs (pages),
total huge pages (huge pages), and free huge pages (huge pages).
.TP 9
.B NUC
Subsequent fields:
NUMA node number, number of processors for this node,
consumption for node CPUs in system mode (clock-ticks),
consumption for node CPUs in user mode (clock-ticks),
consumption for node CPUs in user mode for niced processes (clock-ticks),
consumption for node CPUs in idle mode (clock-ticks),
consumption for node CPUs in wait mode (clock-ticks),
consumption for node CPUs in irq mode (clock-ticks),
consumption for node CPUs in softirq mode (clock-ticks),
consumption for node CPUs in steal mode (clock-ticks), and
consumption for node CPUs in guest mode (clock-ticks) overlapping user mode.
.TP 9
.B PRG
For every process one line is shown.
.br
Subsequent fields:
PID (unique ID of task), name (between parenthesis or underscores for spaces),
state, real uid, real gid, TGID (group number of related tasks/threads),
total number of threads,
exit code (in case of fatal signal: signal number + 256), start time (epoch),
full command line (between parenthesis or underscores for spaces), PPID,
number of threads in state 'running' (R),
number of threads in state 'interruptible sleeping' (S),
number of threads in state 'uninterruptible sleeping' (D),
effective uid, effective gid,
saved uid, saved gid,
filesystem uid, filesystem gid, elapsed time of terminated process (hertz),
is_process (y/n), OpenVZ  virtual pid (VPID), OpenVZ container id (CTID),
container/pod name (CID/POD),
indication if the task is newly started during this interval ('N'),
cgroup v2 path name (between parenthesis or underscores for spaces),
end time (epoch. or 0 if still active), and
number of threads in state 'idle' (I).
.TP 9
.B PRC
For every process one line is shown.
.br
Subsequent fields:
PID, name (between parenthesis or underscores for spaces), state,
total number of clock-ticks per second for this machine,
CPU-consumption in user mode (clockticks),
CPU-consumption in system mode (clockticks),
nice value, priority, realtime priority,
scheduling policy, current CPU, sleep average,
TGID (group number of related tasks/threads), is_process (y/n),
runqueue delay in nanoseconds for this thread or for all threads (in case of process),
wait channel of this thread (between parenthesis or underscores for spaces),
block I/O delay (clockticks),
.\"cgroup v2 'cpu.max' calculated as percentage (-3 means no cgroup v2 support,
.\"-2 means undefined and -1 means maximum),
.\"cgroup v2 most restrictive 'cpu.max' in upper directories calculated as percentage
.\"(-3 means no cgroup v2 support, -2 means undefined and -1 means maximum),
number of voluntary context switches, and
number of involuntary context switches.
.TP 9
.B PRE
For every process one line is shown.
.br
Subsequent fields:
PID, name (between parenthesis or underscores for spaces), process state,
GPU state (A for active, E for exited, N for no GPU user),
number of GPUs used by this process,
bitlist reflecting used GPUs,
GPU busy percentage during interval,
memory busy percentage during interval,
memory occupation (KiB) at this moment
cumulative memory occupation (KiB) during interval, and
number of samples taken during interval.
.TP 9
.B PRM
For every process one line is shown.
.br
Subsequent fields:
PID, name (between parenthesis or underscores for spaces), state,
page size for this machine (in bytes),
virtual memory size (Kbytes),
resident memory size (Kbytes),
shared text memory size (Kbytes),
virtual memory growth (Kbytes),
resident memory growth (Kbytes),
number of minor page faults,
number of major page faults,
virtual library exec size (Kbytes),
virtual data size (Kbytes),
virtual stack size (Kbytes),
swap space used (Kbytes),
TGID (group number of related tasks/threads), is_process (y/n),
proportional set size (Kbytes) if in 'R' option is specified and
virtually locked memory space (Kbytes).
.\"cgroup v2 'memory.max' in KiB (-3 means no cgroup v2 support,
.\"-2 means undefined and -1 means maximum),
.\"cgroup v2 most restrictive 'memory.max' in upper directories in KiB
.\"(-3 means no cgroup v2 support, -2 means undefined and -1 means maximum),
.\"cgroup v2 'memory.swap.max' in KiB (-3 means no cgroup v2 support,
.\"-2 means undefined and -1 means maximum), and
.\"cgroup v2 most restrictive 'memory.swap.max' in upper directories in KiB
.\"(-3 means no cgroup v2 support, -2 means undefined and -1 means maximum).
.TP 9
.B PRD
For every process one line is shown.
.br
Subsequent fields:
PID, name (between parenthesis or underscores for spaces), state,
obsoleted kernel patch installed ('n'),
standard io statistics used ('y' or 'n'),
number of reads on disk,
cumulative number of sectors read,
number of writes on disk,
cumulative number of sectors written,
cancelled number of written sectors,
TGID (group number of related tasks/threads),
obsoleted value ('n'), and is_process (y/n).
.TP 9
.B PRN
For every process one line is shown.
.br
Subsequent fields:
PID, name (between parenthesis or underscores for spaces), state,
.BR pmdabpf (1)
or
.BR pmdabcc (1)
module 'netproc' loaded ('y' or 'n'),
number of tcp_sendmsg() calls,
cumulative size of TCP buffers requested to be transmitted,
number of tcp_recvmsg()/tcp_cleanup_rbuf() calls,
cumulative size of TCP buffers received,
number of udp_sendmsg() calls,
cumulative size of UDP buffers requested to be transmitted,
number of udp_recvmsg()/skb_consume_udp() calls,
cumulative size of UDP buffers transmitted,
number of raw packets transmitted (obsolete, always 0),
number of raw packets received (obsolete, always 0),
TGID (group number of related tasks/threads) and is_process (y/n).
.SH SIGNALS
By sending the SIGUSR1 signal to
.B pcp-atop
a new sample will be forced, even if the current timer interval
has not exceeded yet.
The behavior is similar to pressing the 't' key
in an interactive session.
.PP
By sending the SIGUSR2 signal to
.B pcp-atop
a final sample will be forced after which
.B pcp-atop
will terminate.
.SH EXAMPLES
To monitor the current system load interactively with an interval of (default) 10 seconds:
.TP 12
.B \  pcp\ atop
.PP
To monitor the system load as bar graphs with an interval of 5 seconds:
.TP 12
.B \  pcp\ atop \-B 5
.PP
Store information about the system and process activity in a PCP archive
folio with an interval of ten minutes during an hour:
.TP 12
.B \  pcp\ atop \-w /tmp/pcp-atop 600 6
.PP
View the contents of this file interactively:
.PP
.B \  pcp\ atop \-r /tmp/pcp-atop
.PP
View the processor and disk utilization of this file in parsable format:
.PP
.B \  pcp\ atop \-PCPU,DSK \-r /tmp/pcp-atop.folio
.PP
View the contents of today's standard logfile interactively:
.PP
.B \  pcp\ atop -r
.PP
View the contents of the standard logfile of the day before yesterday
interactively:
.PP
.B \  pcp\ atop -r yy
.PP
View the contents of the standard logfile of 2023, June 7 from
02:00 PM onwards interactively:
.PP
.B \  pcp\ atop -r 20230607 -b 14:00
.PP
To monitor the system load and write it to a file (in plain ASCII)
with an interval of one minute during half an hour with active
processes sorted on memory consumption:
.TP 12
.B \  pcp\ atop -M 60 30 > /log/pcp-atop.mem
.SH NOTES
.B pcp-atop
is based on the source code of the
.BR atop (1)
command from
.IR https://atoptool.nl ,
maintained by Gerlof Langeveld (gerlof.langeveld@atoptool.nl),
and aims to be command line and output compatible with it
as much as possible.
.PP
Some features of
.BR pcp-atop
(such as reporting on the Apache HTTP daemon, Infiniband, NFS
client mounts, hardware event counts, GPU statistics and per-process
TCP and UDP statistics) are only activated if the corresponding PCP metrics
are available. Refer to the documentation for
.BR pmdaapache (1),
.BR pmdainfiniband (1),
.BR pmdanfsclient (1),
.BR pmdanvidia (1),
.BR pmdaperfevent (1)
.BR pmdabcc (1)
and
.BR pmdabpf (1)
for further details on activating these metrics.
.PP
The semantics of the per-process network statistics deviate slightly from the
.BR atop (1)
tool: instead of the number of TCP/UDP packets sent/received (which may be
inaccurate due to TCP segmentation offload),
.BR pcp-atop
shows the number of tcp_sendmsg()/udp_sendmsg()/etc. kernel calls per process.
.SH FILES
.TP 5
.B /etc/atoprc
Configuration file containing system-wide default values.
For further information about the default values, refer to the
.BR pcp-atoprc (5)
man page).
.TP 5
.B ~/.atoprc
Configuration file containing personal default values.
For further information about the default values, refer to the
.BR pcp-atoprc (5)
man page).
.SH PCP ENVIRONMENT
Environment variables with the prefix \fBPCP_\fP are used to parameterize
the file and directory names used by PCP.
On each installation, the
file \fI/etc/pcp.conf\fP contains the local values for these variables.
The \fB$PCP_CONF\fP variable may be used to specify an alternative
configuration file, as described in \fBpcp.conf\fP(5).
.PP
For environment variables affecting PCP tools, see \fBpmGetOptions\fP(3).
.SH SEE ALSO
.BR PCPIntro (1),
.BR pcp (1),
.BR pcp-atopsar (1),
.BR pmdaapache (1),
.BR pmdabcc (1),
.BR pmdabpf (1),
.BR pmdainfiniband (1),
.BR pmdanfsclient (1),
.BR pmdanvidia (1),
.BR pmdaproc (1),
.BR mkaf (1),
.BR pmlogger (1),
.BR pmlogger_daily (1)
and
.BR pcp-atoprc (5).

.\" control lines for scripts/man-spell
.\" +ok+ overcommit_memory tcp_cleanup_rbuf skb_consume_udp
.\" +ok+ overcommitting
.\" +ok+ cpufreq_stats brendangregg
.\" +ok+ SCHED_OTHER tcp_recvmsg tcp_sendmsg udp_recvmsg udp_sendmsg
.\" +ok+ allocstalls cpucritperc dskcritperc ownprocline SCHED_FIFO ZFSonlinux
.\" +ok+ pagetables scrollable whereafter clockticks InfiniBand is_process
.\" +ok+ overcommit Langeveld langeveld unflushed PARSABLE SCHED_RR
.\" +ok+ YYYYMMDD mba_MBps Realtime realtime vmware's
.\" +ok+ uncached modprobe VolGroup oomkills procacct atoptool Runqueue
.\" +ok+ runqueue swapouts TCPRASZ TCPSASZ UDPRASZ UDPSASZ MEMBUSY NETATOP
.\" +ok+ GPUBUSY GPUNUMS mallocs ncurses deduped membusy memfull memsome
.\" +ok+ resctrl netatop netproc retxmit KiBytes MiBytes bitlist
.\" +ok+ softirq logfile oomkill gpubusy cpusome rpwrite
.\" +ok+ atopsar numamig numnode curscal avgscal swapins MAJFLT BANDWI
.\" +ok+ BANDWO WCANCL TCPRCV TCPSND BDELAY RDELAY UDPRCV UDPSND MEMAVG
.\" +ok+ MEMNOW CGROUP MINFLT NIVCSW ENDATE ENTIME LOCKSZ NPROCS VSLIBS
.\" +ok+ USRCPU VSTACK VSTEXT STDATE STTIME AVGRSZ AVGWSZ SWAPSZ SYSCPU
.\" +ok+ badaut badcln badfmt rchits rcmiss rcnoca memocc Gerlof
.\" +ok+ gerlof nettcp netudp cgroup discrd Podman iofull noport iosome
.\" +ok+ OpenVZ csumie zswout atoprc autref Nvidia WCHAN VDATA RDDSK RGROW
.\" +ok+ VGROW TIDLE LLCXX ENVID CPUNR WRDSK FSGID PSIZE RSIZE VSIZE TSLPI
.\" +ok+ TSLPU FSUID NVCSW icmpi icmpo tcpao tcpie tcpor tcppo tcprs activ
.\" +ok+ udpie udpnp deliv zfarc pgout pgtab shmem shrss shswp niced tidle
.\" +ok+ slrec vmbal vmcom vmlim tmpfs inact inflt anthp ipfrw hptot hpuse
.\" +ok+ cread mread nread usavg tslpi tslpu kssav zstor ksuse zswap zswin
.\" +ok+ lvtmp swcac swout cwrit dwrit mwrit nwrit eBPF MBcr MBcw ICMP ACPU
.\" +ok+ PCPU ADSK EGID RGID SGID TGID AMEM ANET RNET SNET POLI RPCs PPID
.\" +ok+ VPID TRUN CTID RTPR EUID RUID SUID NUMA NVMe SYSV YYYY Mbps pcki
.\" +ok+ pcko tcpi tcpo tcps udpi udpo udps PgDn PgUp pgin hhmm fifo sirq
.\" +ok+ mlti intr coll drpi drpo erri erro trun btch curf avgf avio
.\" +ok+ swin cyan cycl yyyy PAG MBr MBw MDD MEM SEP IFB NFC NFM THR TID
.\" +ok+ LLC PMC CMD OOM BPF CPL PRC PRD PRE PRG PRI PRM PRN DSK KSM NUC
.\" +ok+ NUM LVM SWP EXC sda cdp tmp loc rpc ipi ipo irq srv csw
.\" +ok+ Avg avg avq sys DD HH SS RX TX YY dd mf hh si nl vm sp rr fs ss Av yy
