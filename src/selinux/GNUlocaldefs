ifneq "$(shell seinfo -t | grep 'container_runtime_t$$' | sed -e 's/^[ \t]*//')" ""
PCP_CONTAINER_RUNTIME_T="type container_runtime_t\;"
PCP_CONTAINER_RUNTIME_RULE="allow pcp_pmcd_t container_runtime_t:unix_stream_socket connectto\;"
endif

ifneq "$(shell seinfo -t | grep 'nsfs_t$$' | sed -e 's/^[ \t]*//')" ""
PCP_NSFS_T="type nsfs_t\; \# filesys.used"
PCP_NSFS_RULE="allow pcp_pmcd_t nsfs_t:file { read open }\;"
endif

ifneq "$(shell seinfo -t | grep 'docker_var_lib_t$$' | sed -e 's/^[ \t]*//')" ""
PCP_DOCKER_VAR_LIB_T="type docker_var_lib_t\;"
PCP_DOCKER_VAR_LIB_RULE="allow pcp_pmcd_t docker_var_lib_t:dir search\;"
endif

ifneq "$(shell seinfo -t | grep 'svirt_lxc_net_t$$' | sed -e 's/^[ \t]*//')" ""
PCP_SVIRT_LXC_NET_T="type svirt_lxc_net_t\;"
PCP_SVIRT_LXC_NET_RULE="allow pcp_pmcd_t svirt_lxc_net_t:dir { open read search }\;"
endif

ifneq "$(shell seinfo -x --class=system | grep 'status')" ""
PCP_CLASS_STATUS="class system status\;"
PCP_PMLOGGER_SYSTEM_STATUS_RULE="allow pcp_pmlogger_t init_t:system status\;"
PCP_PMIE_SYSTEM_STATUS_RULE="allow pcp_pmie_t init_t:system status\;"
endif

